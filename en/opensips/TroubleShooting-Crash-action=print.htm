<!DOCTYPE html 
    PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html><head>
  <title>openSIPS | Documentation / TroubleShooting-Crash</title>
  <link rel='stylesheet' href="print.css" tppabs="http://www.opensips.org/pub/skins/print/print.css" type='text/css' />
  <!--HTMLHeader--><style type='text/css'><!--
  ul, ol, pre, dl, p { margin-top:0px; margin-bottom:0px; }
  code.escaped { white-space: nowrap; }
  .indent { margin-left:40px; }
  .outdent { margin-left:40px; text-indent:-40px; }
  a.createlinktext { text-decoration:none; border-bottom:1px dotted gray; }
  a.createlink { text-decoration:none; position:relative; top:-0.5em;
    font-weight:bold; font-size:smaller; border-bottom:none; }
  img { border:0px; }
  
span.anchor {
	float: left;
	font-size: 10px;
	margin-left: -10px;
	width: 10px;
    position:relative; top:-0.1em;
	text-align: center;
}
span.anchor a { text-decoration: none; }
span.anchor a:hover { text-decoration: underline; }
ol.toc { text-indent:-20px; list-style: none; }
ol.toc ol.toc { text-indent:-40px; }
div.tocfloat { font-size: smaller; margin-bottom: 10px;
    border-top: 1px dotted #555555; border-bottom: 1px dotted #555555;
    padding-top: 5px; padding-bottom: 5px; 
    width: 38%; float: right; margin-left: 10px; clear: right;
    margin-right:-13px; padding-right: 13px; padding-left: 13px;
    background-color: #eeeeee; }
div.toc { font-size: smaller; 
    padding: 4px; border: 1px dotted #cccccc;
    background: #f7f7f7;
    margin-bottom: 10px; }
  table.markup { border:2px dotted #ccf; width:90%; }
  td.markup1, td.markup2 { padding-left:10px; padding-right:10px; }
  table.vert td.markup1 { border-bottom:1px solid #ccf; }
  table.horiz td.markup1 { width:23em; border-right:1px solid #ccf; }
  table.markup caption { text-align:left; }
  div.faq p, div.faq pre { margin-left:2em; }
  div.faq p.question { margin:1em 0 0.75em 0; font-weight:bold; }
  div.faqtoc div.faq * { display:none; }
  div.faqtoc div.faq p.question 
    { display:block; font-weight:normal; margin:0.5em 0 0.5em 20px; line-height:normal; }
  div.faqtoc div.faq p.question * { display:inline; }
  .editconflict { color:green; 
  font-style:italic; margin-top:1.33em; margin-bottom:1.33em; }
 
    .frame 
      { border:1px solid #cccccc; padding:4px; background-color:#f9f9f9; }
    .lfloat { float:left; margin-right:0.5em; }
    .rfloat { float:right; margin-left:0.5em; }
a.varlink { text-decoration:none; }

--></style><script type="text/javascript">
function toggle(obj) {
    var elstyle = document.getElementById(obj).style;
    var text    = document.getElementById(obj + "tog");
    if (elstyle.display == 'none') {
        elstyle.display = 'block';
        text.innerHTML = "hide";
    } else {
        elstyle.display = 'none';
        text.innerHTML = "show";
    }
}
</script>
  <link href="commentboxplus.css" tppabs="http://www.opensips.org/pub/commentboxplus/commentboxplus.css" rel='stylesheet' type='text/css' />
  <link rel='stylesheet' href="wsplus.css" tppabs="http://www.opensips.org/pub/wsplus/wsplus.css" 
    type='text/css' />
  <!--[if IE]><style type='text/css' media='screen'>
    body { behavior:url("csshover.htc")/*tpa=http://www.opensips.org/pub/wsplus/csshover.htc*/; }
    .rollover * { visibility: visible; }
  </style><![endif]-->
  <meta name='robots' content='noindex,nofollow' />

</head>
<body>
  <div id='printhead'>
    <h3>From openSIPS</h3>
    <h1 class='pagename'><a href="javascript:if(confirm(%27http://www.opensips.org/Documentation  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Documentation%27" tppabs="http://www.opensips.org/Documentation">Documentation: TroubleShooting-Crash</a></h1>
  </div>
<!--PageText-->
<div id='wikitext'>
<h4>Documentation -&gt; <a class='wikilink' href="Troubleshooting-action=print.htm" tppabs="http://www.opensips.org/Documentation/Troubleshooting?action=print">TroubleShooting</a> -&gt; OpenSIPS crashes</h4>
<hr />
<div class='vspace'></div><h3>What is the problem?</h3>
<p>Most likely you have stumbled upon a bug in OpenSIPS, which can be caused by a variety of of issues, like invalid memory access, memory corruption, etc.
</p>
<div class='vspace'></div><h3>Where to look for logs</h3>
<p>If you have <strong>log_stderror=no</strong> in your config file (opensips.cfg), all the logs from <strong>OpenSIPS</strong> will be sent to the <strong>syslog</strong> service, so you have the check into the corresponding file, typically:
</p><ol><li>/var/log/syslog
</li><li>/var/log/messages
</li></ol><p class='vspace'>You can simply check system log by: <br />$ tail -f /var/log/messages
</p>
<p class='vspace'>Note you might need root permissions to access these files! If you do not have it, set <strong>log_stderror=yes</strong> in your config and you will get the log in the console.
</p>
<p class='vspace'>If you have <strong>log_stderror=yes</strong>, you should get the log in the console where you are run <strong>OpenSIPS</strong>
</p>
<div class='vspace'></div><h3>Reading the error logs</h3>
<p>First, you should check the error logs to make sure this was an actual crash, as opposed to the scenario where another entity forcefully killed your OpenSIPS process. A crash is usually detected by searching for the following string in the logs :
</p><pre class='escaped'>
child process 6645 exited by a signal 11
</pre>
<p class='vspace'>If you do not see such an error message, but rather you see things like 
</p><pre class='escaped'>
terminating due to SIGTERM
</pre> 
<p>or you do not see anything logs, you just notice the OpenSIPS suddenly dying, then most likely your OpenSIPS was sent a SIGTERM or a SIGKILL, and you should investigate why some other entity decided to terminate your OpenSIPS process.
</p>
<p class='vspace'>If you see the 'exited by a signal 11' then your OpenSIPS has crashed and you should proceed into investigating the core file. Usually, the 'exited by a signal 11' is accompanied by a 'core was generated' message, which tells you that OpenSIPS was succesful in dumping a core file
</p>
<div class='vspace'></div><h3>How to make sure OpenSIPS dumps a proper core file</h3>
<p>Typically, in a crash scenario, OpenSIPS should dump a core file which contains the full memory contents at the moment of the crash.
</p>
<p class='vspace'>Several things have to be taken care of to make sure that your OpenSIPS dumps a proper core file, that can be used for investigating the crash. Failing to follow these steps could lead to the fact that either the core file is not being generated ( you will see in the logs a message like 'core was not generated' ), or you could end up with a core file that gets overwritten at OpenSIPS shutdown, which would not be useful for further debugging.
</p>
<p class='vspace'>1. Pass the '-w [FOLDER]' parameter to your OpenSIPS at startup. The [FOLDER] path that you provide must be write accessible by your OpenSIPS, and will be the folder that will contain the core files in the eventuality of a crash
</p>
<p class='vspace'>2. Before starting OpenSIPS, make sure to run 'ulimit -c unlimited' . This tells the system to allow OpenSIPS to dump a core file of unlimited size. This is useful, because in case of a crash, the core file will be at least the size of your shared memory + private memory. The ulimit commands usually should go in your init.d script for OpenSIPS
</p>
<p class='vspace'>3. If you are running OpenSIPS with a different username and group ( -u and -g params ), some kernels might need some extra configuration to allow core dumps :
</p><ul><li>echo 1 &gt; /proc/sys/fs/suid_dumpable
</li></ul><p class='vspace'>4. Make sure your core files do not get overwritten. There are several sysctl options that can be used for this :
</p><ul><li>echo 1 &gt; /proc/sys/kernel/core_uses_pid
<ul><li>When you see the message 'child process 6645 exited by a signal 11' , you should get a core file called 'core.6645' in your -w directory
</li></ul></li><li>For more customization of the core file name, you can run setup your own core name pattern with something like : echo 'core.<span class='e'>t.sig</span><span class='s'>p' &gt; /proc/sys/kernel/core_pattern </span>
<ul><li>This will have the core file contain the process name ( % e ), the timestamp ( % t ), the received signal ( % s ) and the pid file ( % p )
</li></ul></li></ul><div class='vspace'></div><h3>Extracting a back trace from the core file</h3>
<p>Browse the logs for the 
</p>
<div class='vspace'></div><pre class='escaped'>
child process 6645 exited by a signal 11
</pre>
<p class='vspace'>and the run
</p>
<div class='vspace'></div><pre class='escaped'>
gdb opensips core.6645 
</pre>
<p class='vspace'>Once in the gdb environment, run the following command
</p>
<div class='vspace'></div><pre class='escaped'>
bt full
</pre>
<p class='vspace'>This will dump the full stack trace that lead to the crash. Send the crash to the OpenSIPS developers ( usually on the Sourceforge Bug tracker of on the DEV mailing list )
</p>
<p class='vspace'>Do not delete the core file and also make sure to keep an exact copy of your OpenSIPS binary, as the OpenSIPS developers might need to extra more information from the core file, like printing various variables, etc. The core file on it's own is useless without the exact OpenSIPS binary file that lead to the crash.
</p>
</div>

  <div id='printfoot'>
    <div class='from'>Retrieved from http://www.opensips.org/Documentation/TroubleShooting-Crash</div>
    <div class='lastmod'>Page last modified on October 30, 2013, at 09:16 AM</div></div>
<!--HTMLFooter-->
</body>
</html>
