<!DOCTYPE html 
    PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
  <title>openSIPS | Documentation / Core Functions - ver 1.9 | History</title>
  <meta http-equiv='Content-Style-Type' content='text/css' />
  <link rel='stylesheet' href="opensips.css" tppabs="http://www.opensips.org/pub/skins/opensips/opensips.css" type='text/css' />
  <!--HTMLHeader--><style type='text/css'><!--
  ul, ol, pre, dl, p { margin-top:0px; margin-bottom:0px; }
  code.escaped { white-space: nowrap; }
  .indent { margin-left:40px; }
  .outdent { margin-left:40px; text-indent:-40px; }
  a.createlinktext { text-decoration:none; border-bottom:1px dotted gray; }
  a.createlink { text-decoration:none; position:relative; top:-0.5em;
    font-weight:bold; font-size:smaller; border-bottom:none; }
  img { border:0px; }
  
span.anchor {
	float: left;
	font-size: 10px;
	margin-left: -10px;
	width: 10px;
    position:relative; top:-0.1em;
	text-align: center;
}
span.anchor a { text-decoration: none; }
span.anchor a:hover { text-decoration: underline; }
ol.toc { text-indent:-20px; list-style: none; }
ol.toc ol.toc { text-indent:-40px; }
div.tocfloat { font-size: smaller; margin-bottom: 10px;
    border-top: 1px dotted #555555; border-bottom: 1px dotted #555555;
    padding-top: 5px; padding-bottom: 5px; 
    width: 38%; float: right; margin-left: 10px; clear: right;
    margin-right:-13px; padding-right: 13px; padding-left: 13px;
    background-color: #eeeeee; }
div.toc { font-size: smaller; 
    padding: 4px; border: 1px dotted #cccccc;
    background: #f7f7f7;
    margin-bottom: 10px; }
  table.markup { border:2px dotted #ccf; width:90%; }
  td.markup1, td.markup2 { padding-left:10px; padding-right:10px; }
  table.vert td.markup1 { border-bottom:1px solid #ccf; }
  table.horiz td.markup1 { width:23em; border-right:1px solid #ccf; }
  table.markup caption { text-align:left; }
  div.faq p, div.faq pre { margin-left:2em; }
  div.faq p.question { margin:1em 0 0.75em 0; font-weight:bold; }
  div.faqtoc div.faq * { display:none; }
  div.faqtoc div.faq p.question 
    { display:block; font-weight:normal; margin:0.5em 0 0.5em 20px; line-height:normal; }
  div.faqtoc div.faq p.question * { display:inline; }
  .editconflict { color:green; 
  font-style:italic; margin-top:1.33em; margin-bottom:1.33em; }

  .diffbox { width:570px; border-left:1px #999999 solid; margin-top:1.33em; }
  .diffauthor { font-weight:bold; }
  .diffchangesum { font-weight:bold; }
  .difftime { font-family:verdana,sans-serif; font-size:66%; 
    background-color:#dddddd; }
  .difftype { clear:both; font-family:verdana,sans-serif; 
    font-size:66%; font-weight:bold; }
  .diffadd { border-left:5px #99ff99 solid; padding-left:5px; }
  .diffdel { border-left:5px #ffff99 solid; padding-left:5px; }
  .diffrestore { clear:both; font-family:verdana,sans-serif; 
    font-size:66%; margin:1.5em 0px; }
  .diffmarkup { font-family:monospace; }  
    .frame 
      { border:1px solid #cccccc; padding:4px; background-color:#f9f9f9; }
    .lfloat { float:left; margin-right:0.5em; }
    .rfloat { float:right; margin-left:0.5em; }
a.varlink { text-decoration:none; }

--></style><script type="text/javascript">
function toggle(obj) {
    var elstyle = document.getElementById(obj).style;
    var text    = document.getElementById(obj + "tog");
    if (elstyle.display == 'none') {
        elstyle.display = 'block';
        text.innerHTML = "hide";
    } else {
        elstyle.display = 'none';
        text.innerHTML = "show";
    }
}
</script>
  <link href="commentboxplus.css" tppabs="http://www.opensips.org/pub/commentboxplus/commentboxplus.css" rel='stylesheet' type='text/css' />
  <link rel='stylesheet' href="wsplus.css" tppabs="http://www.opensips.org/pub/wsplus/wsplus.css" 
    type='text/css' />
  <!--[if IE]><style type='text/css' media='screen'>
    body { behavior:url("csshover.htc")/*tpa=http://www.opensips.org/pub/wsplus/csshover.htc*/; }
    .rollover * { visibility: visible; }
  </style><![endif]-->
  <meta name='robots' content='noindex,nofollow' />

  <link rel="icon" type="image/png" href="http://opensips.org/favicon.png">
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','analytics.js'/*tpa=http://www.google-analytics.com/analytics.js*/,'ga');

  ga('create', 'UA-47615177-1', 'http://www.opensips.org/Documentation/opensips.org');
  ga('send', 'pageview');

	function resizeIframe(obj) {
	    obj.style.height = obj.contentWindow.document.body.scrollHeight + 'px';
		  }

  </script>

</head>
<body>
<div id="main">
<!--PageHeaderFmt-->
  <div id='wikilogo'>
  <img class="motto" src="motto.jpg" tppabs="http://www.opensips.org/pub/skins/opensips/images/motto.jpg" width="328" height="40" alt="The new breed of communication engine.">
  <a href="javascript:if(confirm(%27http://www.opensips.org/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/%27" tppabs="http://www.opensips.org/"><img class="logo" src="logo2.jpg" tppabs="http://www.opensips.org/pub/skins/opensips/images/logo2.jpg"
    alt='openSIPS' border='0' /></a>
 </div>
 <div id='wikihead'>
 <table border=0>
  <tr valign=top><td width=250>
   
  </td></tr>
  <tr><td width=250>
   <form action="http://www.opensips.org/">
   
    <input type='hidden' name='n' value='Documentation.Script-CoreFunctions-1-9' />
    <input type='hidden' name='action' value='search' />

    <input type='text' name='q' id='formsubmit' value='' class='inputbox searchbox' />
	<input type='submit' id='formbutton' class='inputbutton searchbutton' value=' ' /></form>
  </td></tr>
  </table>
 </div>

<!--/PageHeaderFmt-->
<div id="osTopNav" >
	<div id="osTopNavLeft">
	</div>

	<div id="osTopNavRight">
	</div>

	<ul id="osTopNavList">
		<li>
			<a href="javascript:if(confirm(%27http://www.opensips.org/About/About  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/About/About%27" tppabs="http://www.opensips.org/About/About" title="About">About</a>
		</li>
		<li>
			<a href="javascript:if(confirm(%27http://www.opensips.org/Downloads/Downloads  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Downloads/Downloads%27" tppabs="http://www.opensips.org/Downloads/Downloads" title="Download">Downloads</a>
		</li>
		<li>
			<a href="Manuals.htm" tppabs="http://www.opensips.org/Documentation/Manuals" title="Documentation">Documentation</a>
		</li>
		<li>
			<a href="javascript:if(confirm(%27http://www.opensips.org/Community/Foundation-Main  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Community/Foundation-Main%27" tppabs="http://www.opensips.org/Community/Foundation-Main" title="Community">Community</a>
		</li>
		<li>
			<a href="javascript:if(confirm(%27http://www.opensips.org/Development/Development  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Development/Development%27" tppabs="http://www.opensips.org/Development/Development" title="Development">Development</a>
		</li>
		<li>
			<a href="javascript:if(confirm(%27http://www.opensips.org/Support/Contact  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Support/Contact%27" tppabs="http://www.opensips.org/Support/Contact" title="Support">Support</a>
		</li>
	</ul>
</div>
<!--PageMenuFmt-->
<!--/PageMenuFmt-->
  <table width='100%' align="center" cellpadding='0' cellspacing='0' id='wikimid'>
    <tr>
<!--PageLeftFmt-->
      <td valign='top' bgcolor="#E2F8DA" id='wikileft'>
        <p class='sidehead'> <span  style='color: #185662;'> Documentation</span>
</p><ul><li><a class='wikilink' title='Manuals' href="Manuals.htm" tppabs="http://www.opensips.org/Documentation/Manuals">Manuals</a>
</li><li><a class='wikilink' title='Tutorials' href="Tutorials.htm" tppabs="http://www.opensips.org/Documentation/Tutorials">Advanced Tutorials</a>
</li><li><a class='wikilink' title='TipsFAQ' href="TipsFAQ.htm" tppabs="http://www.opensips.org/Documentation/TipsFAQ">Tips &amp; FAQ</a>
</li><li><a class='wikilink' title='Migration' href="Migration.htm" tppabs="http://www.opensips.org/Documentation/Migration">Version Migration</a>
</li><li><a class='wikilink' title='Webinars' href="Webinars.htm" tppabs="http://www.opensips.org/Documentation/Webinars">OpenSIPS Webinars</a>
</li><li><a class='wikilink' title='Troubleshooting' href="Troubleshooting.htm" tppabs="http://www.opensips.org/Documentation/Troubleshooting">Troubleshooting</a>
</li><li><a class='wikilink' title='Tools' href="Tools.htm" tppabs="http://www.opensips.org/Documentation/Tools">OpenSIPS Tools</a>
</li><li><a class='wikilink' title='Development-Tutorials' href="Development-Tutorials.htm" tppabs="http://www.opensips.org/Documentation/Development-Tutorials">Devel Tutorial</a>
</li></ul><div class='vspace'></div>
</td>
<!--/PageLeftFmt-->
      <td id='wikibody' valign='top'>
<!--PageTitleFmt-->
        
<!--PageText-->
<div id='wikitext'>
<h2 class='wikiaction'>Documentation.Script-CoreFunctions-1-9 History</h2>
  <p><a href="Script-CoreFunctions-1-9-action=diff&source=n&minor=n.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=diff&source=n&minor=n">Hide minor edits</a> - <a href="Script-CoreFunctions-1-9-action=diff&source=y&minor=y.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=diff&source=y&minor=y">Show changes to markup</a></p>
  <div id='wikidiff'>
      <div class='diffbox'><div class='difftime'>September 12, 2014, at 03:03 PM 
        by <span class='diffauthor' title='89.120.101.121'>liviu</span> - </div>
        <div class='difftype'>Added lines 754-773:</div>
        <div class='diffadd'><p>@]
</p>
<div class='vspace'></div><h4>xlog([log_level, ]format_string)</h4>
<p>Allows various debugging / runtime / critical messages to be printed as the execution of the OpenSIPS script is done. All pseudo-variables included in the <em>format_string</em> parameter will be expanded. There are several optional logging levels which can be specified. They work in accordance with the severity levels of syslog. The levels are named as follows:
</p>
<div class='vspace'></div><ul><li>L_ALERT (-3)
</li><li>L_CRIT (-2)
</li><li>L_ERR (-1) - this is used by default if log_level is omitted
</li><li>L_WARN (0)
</li><li>L_NOTICE (1)
</li><li>L_INFO (2)
</li><li>L_DBG (3)
</li></ul><p class='vspace'><br />
[@
</p><pre>    # a few xlog scripting examples
    xlog("Received $rm from $fu (callid: $ci)\n");
    xlog("L_ERR", "key $var(username) not found in cache!\n");
</pre>
</div></div>
      <div class='diffrestore'><a href="Script-CoreFunctions-1-9-action=edit&restore=diff-1410526999-1375708152-&preview=y.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1410526999:1375708152:&preview=y">Restore</a></div>
      <div class='diffbox'><div class='difftime'>August 05, 2013, at 03:09 PM 
        by <span class='diffauthor' title='109.99.235.212'>109.99.235.212</span> - </div>
        <div class='difftype'>Changed line 4 from:</div>
        <div class='diffdel'><p><span style='font-size:83%'> Page for other versions: <a class='wikilink' title='Script-CoreFunctions' href="Script-CoreFunctions-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions">devel</a> 1.9 <a class='wikilink' title='Core Functions - ver 1.8' href="Script-CoreFunctions-1-8.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-8">1.8</a> old versions: <a class='wikilink' title='Core Functions - ver 1.7' href="Script-CoreFunctions-1-7.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-7">1.7</a> <a class='wikilink' title='Core Functions - ver 1.6' href="Script-CoreFunctions-1-6.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-6">1.6</a> <a class='wikilink' title='Core Functions - ver 1.5' href="Script-CoreFunctions-1-5.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-5">1.5</a> <a class='wikilink' title='Core Functions - ver 1.4' href="Script-CoreFunctions-1-4.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-4">1.4</a> </span>
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>(:allVersions Script-CoreFunctions 1.9:)
</p>
</div></div>
      <div class='diffrestore'><a href="Script-CoreFunctions-1-9-action=edit&restore=diff-1375708152-1369820521-&preview=y.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1375708152:1369820521:&preview=y">Restore</a></div>
      <div class='diffbox'><div class='difftime'>May 29, 2013, at 11:42 AM 
        by <span class='diffauthor' title='80.112.129.223'>razvancrainea</span> - </div>
        <div class='difftype'>Added line 392:</div>
        <div class='diffadd'><p><a name='raise_event' id='raise_event'></a>
</p>
</div>
        <div class='difftype'>Added line 726:</div>
        <div class='diffadd'><p><a name='subscribe_event' id='subscribe_event'></a>
</p>
</div></div>
      <div class='diffrestore'><a href="javascript:if(confirm(%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1369820521:1369779218:&preview=y  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1369820521:1369779218:&preview=y%27" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1369820521:1369779218:&preview=y">Restore</a></div>
      <div class='diffbox'><div class='difftime'>May 29, 2013, at 12:13 AM 
        by <span class='diffauthor' title='92.80.35.155'>92.80.35.155</span> - </div>
        <div class='difftype'>Changed lines 320-321 from:</div>
        <div class='diffdel'><p>For more see http://www.voice-system.ro/docs/ser-flags/ or <a class='wikilink' title='Script Flags - ver 1.9' href="Script-Flags-1-9.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags-1-9">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more see <a class='wikilink' title='Script Flags - ver 1.9' href="Script-Flags-1-9.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags-1-9">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>Deleted lines 355-356:</div>
        <div class='diffdel'><p>For more see: http://www.voice-system.ro/docs/ser-syslog/
</p>
</div>
        <div class='difftype'>Deleted lines 677-678:</div>
        <div class='diffdel'><p>For more see http://www.voice-system.ro/docs/ser-flags/ .
</p>
</div></div>
      <div class='diffrestore'><a href="javascript:if(confirm(%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1369779218:1369779134:&preview=y  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1369779218:1369779134:&preview=y%27" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1369779218:1369779134:&preview=y">Restore</a></div>
      <div class='diffbox'><div class='difftime'>May 29, 2013, at 12:12 AM 
        by <span class='diffauthor' title='92.80.35.155'>92.80.35.155</span> - </div>
        <div class='difftype'>Added line 2:</div>
        <div class='diffadd'><p>(:title Core Functions - ver 1.9 :)
</p>
</div>
        <div class='difftype'>Changed lines 4-12 from:</div>
        <div class='diffdel'></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p><span style='font-size:83%'> Page for other versions: <a class='wikilink' title='Script-CoreFunctions' href="Script-CoreFunctions-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions">devel</a> 1.9 <a class='wikilink' title='Core Functions - ver 1.8' href="Script-CoreFunctions-1-8.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-8">1.8</a> old versions: <a class='wikilink' title='Core Functions - ver 1.7' href="Script-CoreFunctions-1-7.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-7">1.7</a> <a class='wikilink' title='Core Functions - ver 1.6' href="Script-CoreFunctions-1-6.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-6">1.6</a> <a class='wikilink' title='Core Functions - ver 1.5' href="Script-CoreFunctions-1-5.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-5">1.5</a> <a class='wikilink' title='Core Functions - ver 1.4' href="Script-CoreFunctions-1-4.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-4">1.4</a> </span>
</p>
<p class='vspace'><br />
</p><table width='100%'><tr ><td  align='center'><span  style='color: #185662;'><span style='font-size:120%'><strong>Core functions v1.9</strong></span></span></td></tr>
</table>
<div class='vspace'></div><table width='100%'><tr ><td  align='left'><a class='wikilink' title='Script Statements - ver 1.9' href="Script-Statements-1-9.htm" tppabs="http://www.opensips.org/Documentation/Script-Statements-1-9">Prev</a></td><td  align='right'><a class='wikilink' title='Core Variables - ver 1.9' href="Script-CoreVar-1-9.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreVar-1-9">Next</a></td></tr>
</table><hr />
</div>
        <div class='difftype'>Changed lines 320-321 from:</div>
        <div class='diffdel'><p>For more see http://www.voice-system.ro/docs/ser-flags/ or <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more see http://www.voice-system.ro/docs/ser-flags/ or <a class='wikilink' title='Script Flags - ver 1.9' href="Script-Flags-1-9.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags-1-9">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>Changed lines 332-333 from:</div>
        <div class='diffdel'><p>For more about script flags, see <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more about script flags, see <a class='wikilink' title='Script Flags - ver 1.9' href="Script-Flags-1-9.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags-1-9">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>Changed lines 344-345 from:</div>
        <div class='diffdel'><p>For more about script flags, see <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more about script flags, see <a class='wikilink' title='Script Flags - ver 1.9' href="Script-Flags-1-9.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags-1-9">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>Changed lines 483-484 from:</div>
        <div class='diffdel'><p>For more see http://www.voice-system.ro/docs/ser-flags/ or <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more see <a class='wikilink' title='Script Flags - ver 1.9' href="Script-Flags-1-9.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags-1-9">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>Changed lines 493-494 from:</div>
        <div class='diffdel'><p>For more about script flags, see <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more about script flags, see <a class='wikilink' title='Script Flags - ver 1.9' href="Script-Flags-1-9.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags-1-9">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>Changed lines 508-509 from:</div>
        <div class='diffdel'><p>For more about script flags, see <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more about script flags, see <a class='wikilink' title='Script Flags - ver 1.9' href="Script-Flags-1-9.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags-1-9">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>Changed lines 692-693 from:</div>
        <div class='diffdel'><p>For more about script flags, see <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more about script flags, see <a class='wikilink' title='Script Flags - ver 1.9' href="Script-Flags-1-9.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags-1-9">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>Changed line 707 from:</div>
        <div class='diffdel'><p>For more about script flags, see <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more about script flags, see <a class='wikilink' title='Script Flags - ver 1.9' href="Script-Flags-1-9.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags-1-9">Flags Documentation</a>.
</p>
</div></div>
      <div class='diffrestore'><a href="Script-CoreFunctions-1-9-action=edit&restore=diff-1369779134-1368723461-&preview=y.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1369779134:1368723461:&preview=y">Restore</a></div>
      <div class='diffbox'><div class='difftime'>May 16, 2013, at 06:57 PM 
        by <span class='diffauthor' title='109.99.235.212'>109.99.235.212</span> - </div>
        <div class='difftype'>Changed line 1 from:</div>
        <div class='diffdel'><h2><a class='createlinktext' rel='nofollow' 
    href="Documentation-action=edit.htm" tppabs="http://www.opensips.org/Documentation/Documentation?action=edit">Documentation</a><a rel='nofollow' 
    class='createlink' href="Documentation-action=edit.htm" tppabs="http://www.opensips.org/Documentation/Documentation?action=edit">?</a> -&gt; Script -&gt; <a class='selflink' href="Script-CoreFunctions-1-9.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9">Core functions and parameteres 1.9</a></h2>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><h5>Documentation -&gt; <a class='wikilink' title='Manuals' href="Manuals.htm" tppabs="http://www.opensips.org/Documentation/Manuals">Manuals</a> -&gt; <a class='wikilink' title='OpenSIPS Manual - 1.9 ver' href="Manual-1-9.htm" tppabs="http://www.opensips.org/Documentation/Manual-1-9">Manual 1.9</a> -&gt; Core functions</h5>
</div>
        <div class='difftype'>Changed lines 5-1102 from:</div>
        <div class='diffdel'><p>This section lists the all the parameters and functions exported by <strong>OpenSIPS</strong> core for script usage (to be used in opensips.cfg)
</p>
<p class='vspace'>This document is for <strong>OpenSIPS 1.9.x</strong> 
</p>
<div class='vspace'></div><ol><li><a href='#keywords'>Core keywords</a>
</li><li><a href='#values'>Core values</a>
</li><li><a href='#parameters'>Core parameters</a>
</li><li><a href='#functions'>Core functions</a>
</li></ol><div class='vspace'></div><hr />
<p><a name='keywords' id='keywords'></a>
</p><h3>Core Keywords</h3>
<p>Keywords specific to SIP messages which can be used mainly in 'if' expressions.
</p>
<div class='vspace'></div><h4>af</h4>
<p>The address family of the received SIP message. It is INET if the message was received over IPv4 or INET6 if the message was received over IPv6.
</p>
<p class='vspace'>Exampe of usage:
</p>
<div class='vspace'></div><pre>    if(af==INET6) {
        log("Message received over IPv6 link\n");
    };
</pre><div class='vspace'></div><h4>dst_ip</h4>
<p>The IP of the local interface where the SIP message was received. When the proxy listens on many network interfaces, makes possible to detect which was the one that received the packet.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>   if(dst_ip==127.0.0.1) {
      log("message received on loopback interface\n");
   };
</pre><div class='vspace'></div><h4>dst_port</h4>
<p>The local port where the SIP packet was received. When <strong>OpenSIPS</strong> is listening on many ports, it is useful to learn which was the one that received the SIP packet.
</p>
<p class='vspace'>Example of usage:
</p><pre>   if(dst_port==5061)
   {
       log("message was received on port 5061\n");
   };
</pre><div class='vspace'></div><h4>from_uri</h4>
<p>This script variable is a reference to the URI of 'From' header. It can be used to test 'From'- header URI value.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(is_method("INVITE") &amp;&amp; from_uri=~".*@opensips.org")
    {
        log("the caller is from opensips.org\n");
    };
</pre><div class='vspace'></div><h4>method</h4>
<p>The variable is a reference to the SIP method of the message.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(method=="REGISTER")
    {
       log("this SIP request is a REGISTER message\n");
    };
</pre><div class='vspace'></div><h4>msg:len</h4>
<p>The variable is a reference to the size of the message. It can be used in 'if' constructs to test message's size.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(msg:len&gt;2048)
    {
        sl_send_reply("413", "message too large");
        exit;
    };
</pre><div class='vspace'></div><h4>$retcode</h4>
<p>It represents the value returned by last function executed (similar to $? from bash -- if you wish, you can use also $? in OpenSIPS config, both names '$retcode' and '$?' are supported). If tested after a call of a route, it is the value retuned by that route.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>   route {
       route(1);
       if($retcode==1)
       {
           log("The request is an INVITE\n");
       };
   }


   route[1] {
       if(is_method("INVITE"))
           return(1);
       return(2);
   }
</pre><div class='vspace'></div><h4>proto</h4>
<p>This variable can be used to test the transport protocol of the SIP message.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(proto==UDP)
    {
        log("SIP message received over UDP\n");
    };
</pre><div class='vspace'></div><h4>status</h4>
<p>If used in onreply_route, this variable is a reference to the status code of the reply. If it used in a standard route block, the variable is a reference to the status of the last reply sent out for the current request.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(status=="200")
    {
        log("this is a 200 OK reply\n");
    };
</pre><div class='vspace'></div><h4>src_ip</h4>
<p>Reference to source IP address of the SIP message.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(src_ip==127.0.0.1)
    {
        log("the message was sent from localhost!\n");
    };
</pre><div class='vspace'></div><h4>src_port</h4>
<p>Reference to source port of the SIP message (from which port the message was sent by previous hop).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(src_port==5061)
    {
        log("message sent from port 5061\n");
    }
</pre><div class='vspace'></div><h4>to_uri</h4>
<p>This variable can be used to test the value of URI from To header.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>  if(to_uri=~"sip:.+@opensips.org")
  {
      log("this is a request for opensips.org users\n");
  };
</pre><div class='vspace'></div><h4>uri</h4>
<p>This variable can be used to test the value of the request URI.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(uri=~"sip:.+@opensips.org")
    {
        log("this is a request for opensips.org users\n");
    };
</pre><p class='vspace'>(:toc-back:)
</p>
<div class='vspace'></div><hr />
<p><a name='values' id='values'></a>
</p><h3>Core Values</h3>
<p>Values that can be used in 'if' expressions to check against Core Keywords
</p>
<div class='vspace'></div><h4>INET</h4>
<p>This keyword can be used to test whether the SIP packet was received over an IPv4 connection.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(af==INET)
    {
        log("the SIP message was received over IPv4\n");
    };
</pre><div class='vspace'></div><h4>INET6</h4>
<p>This keyword can be used to test whether the SIP packet was received over an IPv6 connection.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>  if(af==INET6)
  {
      log("the SIP message was received over IPv6\n");
  };
</pre><div class='vspace'></div><h4>TCP</h4>
<p>This keyword can be used to test the value of 'proto' and check whether the SIP packet was received over TCP or not.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>  if(proto==TCP)
  {
      log("the SIP message was received over TCP\n");
  };
</pre><div class='vspace'></div><h4>UDP</h4>
<p>This keyword can be used to test the value of 'proto' and check whether the SIP packet was received over UDP or not.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>  if(proto==UDP)
  {
      log("the SIP message was received over UDP\n");
  };
</pre><div class='vspace'></div><h4>max_len</h4>
<p>This keyword is set to the maximum size of an UDP packet. It can be used to test message's size.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(msg:len&gt;max_len)
    {
        sl_send_reply("413", "message too large to be forwarded over UDP without fragmentation");
        exit;
    }
</pre><div class='vspace'></div><h4>myself</h4>
<p>It is a reference to the list of local IP addresses, hostnames and aliases that has been set in <strong>OpenSIPS</strong> configuration file. This lists contain the domains served by <strong>OpenSIPS</strong>.
</p>
<p class='vspace'>The variable can be used to test if the host part of an URI is in the list. The usefulness of this test is to select the messages that has to be processed locally or has to be forwarded to another server.
</p>
<p class='vspace'>See "alias" to add hostnames,IP addresses and aliases to the list.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(uri==myself) {
        log("the request is for local processing\n");
    };
</pre><div class='vspace'></div><h4>null</h4>
<p>Can be used in assignment to reset the value of a per-script variable or to delete an avp.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    $avp(i:12) = null;
    $var(x) = null;
</pre><p class='vspace'>(:toc-back:)
</p>
<div class='vspace'></div><hr />
<p><a name='parameters' id='parameters'></a>
</p><h3>Core parameters</h3>
<p>Global parameters that can be set in configuration file. Accepted values are, depending on the actual parameters strings, numbers and yes/ no. If you need to specify either "yes" or "no" as part of a string, wrap this in double quotes.
</p>
<div class='vspace'></div><h4>advertised_address</h4>
<p>It can be an IP address or string and represents the address advertised in Via header and
other destination lumps (e.g RR header). If empty or not set (default value) the socket
address from where the request will be sent is used.
</p>
<p class='vspace'><span  style='color: red;'>WARNING</span>: 
</p><pre>  - don't set it unless you know what you are doing (e.g. nat traversal)
  - you can set anything here, no check is made (e.g. foo.bar will be
  accepted even if foo.bar doesn't exist)
</pre><p class='vspace'>Example of usage:
</p><pre class='escaped'>
    advertised_address="opensips.org"
</pre>
<p class='vspace'><span  style='color: blue;'>NOTE</span>: Aside this global approach, you can also define an advertise IP and port in a per-interface manner (see the "listen" parameter). When advertise values are defined per interface, they will be used only for traffic leaving that interface only.
</p>
<div class='vspace'></div><h4>advertised_port</h4>
<p>The port advertised in Via header and other destination lumps (e.g. RR). If empty or not set (default value) the port from where the message will be sent is used. Same warnings as for 'advertised_address'.
</p>
<p class='vspace'>Example of usage:
</p><pre class='escaped'>
    advertised_port=5080
</pre>
<p class='vspace'><span  style='color: blue;'>NOTE</span>: Aside this global approach, you can also define an advertise IP and port in a per-interface manner (see the "listen" parameter). When advertise values are defined per interface, they will be used only for traffic leaving that interface only.
</p>
<div class='vspace'></div><h4>alias</h4>
<p>Parameter to set alias hostnames for the server. It can be set many times, each value being added in a list to match the hostname when 'myself' is checked.
</p>
<p class='vspace'>It is necessary to include the port (the port value used in the "port=" or "listen=" definitions) in the alias definition otherwise the loose_route() function will not work as expected for local forwards
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
    alias=other.domain.com:5060
    alias=another.domain.com:5060
</pre>
<div class='vspace'></div><h4>auto_aliases</h4>
<p>This parameter controls if aliases should be automatically discovered and added during fixing listening sockets. The auto discovered aliases are result of the DNS lookup (if listen is a name and not IP) or of a reverse DNS lookup on the listen IP.
</p>
<p class='vspace'>Far backward compatibility reasons, the default value is "on".
</p>
<p class='vspace'>Example of usage:
</p><pre class='escaped'>
    auto_aliases=no
    auto_aliases=0
</pre>
<div class='vspace'></div><h4>check_via</h4>
<p>Check if the address in top most via of replies is local. Default value is 0 (check disabled).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    check_via=1 
</pre><div class='vspace'></div><h4>children</h4>
<p>Number of children to fork for <strong>each</strong> UDP or SCTP interface you have defined. Default value is 8.
</p>
<p class='vspace'>Example of usage:
</p><pre class='escaped'>
    children=16
</pre>
<p class='vspace'><span  style='color: blue;'>NOTE</span>: this global value (applicable for all UDP/SCTP interfaces) can be override if you set a different number of children in the definition of a specific interface - so actually you can define a different number of children for each interface (see the "listen" parameter for syntax).  
</p>
<div class='vspace'></div><h4>chroot</h4>
<p>The value must be a valid path in the system. If set, <strong>OpenSIPS</strong> will chroot (change root directory) to its value.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    chroot=/other/fakeroot
</pre><div class='vspace'></div><h4>db_version_table</h4>
<p>The name of the table version to be used by the DB API to check the version of the used tables.<br />Default value is <strong>"version"</strong>
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    db_version_table="version_1_8"
</pre><div class='vspace'></div><h4>db_default_url</h4>
<p>The default DB URL to be used by modules if no per-module URL is given. Default is NULL (not defined)
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    db_default_url="mysql://opensips:opensipsrw@localhost/opensips"
</pre><div class='vspace'></div><h4>debug</h4>
<p>Set the debug level. Higher values make <strong>OpenSIPS</strong> to print more debug messages.
</p>
<p class='vspace'>Examples of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
    debug=1 -- print only important messages (like errors or more critical situations) 
    - recommended for running proxy as daemon

    debug=4 -- print a lot of debug messages - use it only when doing debugging sessions
</pre>
<p class='vspace'>Actual values are:
</p><ul><li>-3 - Alert level
</li><li>-2 - Critical level
</li><li>-1 - Error level
</li><li> 1 - Warning level
</li><li> 2 - Notice level
</li><li> 3 - Info level
</li><li> 4 - Debug level
</li></ul><p class='vspace'>The 'debug' parameter is usually used in concordance with 'log_stderror' parameter.
</p>
<p class='vspace'>Value of 'debug' parameter can also be get and set dynamically using 'debug' Core MI function.
</p>
<p class='vspace'>For more see: http://www.voice-system.ro/docs/ser-syslog/
</p>
<div class='vspace'></div><h4>disable_503_translation</h4>
<p>If 'yes', OpenSIPS will not translate the received 503 replies into 500 replies (RFC 3261 clearly states that a proxy should never relay a 503 response, but instead it must transform it into a 500).
</p>
<p class='vspace'>Default value is 'no' (do translation).
</p>
<div class='vspace'></div><h4>disable_core_dump</h4>
<p>Can be 'yes' or 'no'. By default core dump limits are set to unlimited or
a high enough value. Set this config variable to 'yes' to disable core dump-ing
(will set core limits to 0).
</p>
<p class='vspace'>Default value is 'no'.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    disable_core_dump=yes
</pre><div class='vspace'></div><h4>disable_dns_blacklist</h4>
<p>The DNS resolver, when configured with failover, can automatically store in a temporary blacklist the failed destinations. This will prevent (for a limited period of time) <strong>OpenSIPS</strong> to send requests to destination known as failed. So, the blacklist can be used as a memory for the DNS resolver. 
</p>
<p class='vspace'>The temporary blacklist created by DNS resolver is named "dns" and it is by default selected for usage (no need use the use_blacklist()) function. The rules from this list have a life time of 4 minutes - you can change it at compile time, from blacklists.h .
</p>
<p class='vspace'>Can be 'yes' or 'no'. By default the blacklist is disabled (Default value is 'yes').
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    disable_dns_blacklist=no
</pre><div class='vspace'></div><h4>disable_dns_failover</h4>
<p>Can be 'yes' or 'no'. By default DNS-based failover is enabled. Set this config variable to 'yes' to disable the DNS-based failover. This is a global option, affecting the core and the modules also.
</p>
<p class='vspace'>Default value is 'no'.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    disable_dns_failover=yes
</pre><div class='vspace'></div><h4>disable_stateless_fwd</h4>
<p>Can be 'yes' or 'no'. This parameter controls the handling of stateless replies:
</p><pre class='escaped'>
    yes - drop stateless replies if stateless fwd functions (like forward) are not used in script
    no - forward stateless replies
</pre>
<p>Default value is 'yes'.
</p>
<div class='vspace'></div><h4>disable_tcp</h4>
<p>Global parameter to disable TCP support in the SIP server. Default value is 'no'.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    disable_tcp=yes
</pre><div class='vspace'></div><h4>disable_tls</h4>
<p>Global parameter to disable TLS support in the SIP server. Default value is 'yes'.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    disable_tcp=no
</pre><div class='vspace'></div><h4>dns</h4>
<p>This parameter controls if the SIP server should attempt to lookup its own domain name in DNS. If this parameter is set to yes and the domain name is not in DNS a warning is printed on syslog and a "received=" field is added to the via header. 
</p>
<p class='vspace'>Default is no.
</p>
<div class='vspace'></div><h4>dns_retr_time</h4>
<p>Time in seconds before retrying a dns request. Default value is system specific,
depends also on the '/etc/resolv.conf' content (usually 5s).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    dns_retr_time=3
</pre><div class='vspace'></div><h4>dns_retr_no</h4>
<p>Number of dns retransmissions before giving up. Default value is system specific,
depends also on the '/etc/resolv.conf' content (usually 4).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    dns_retr_no=3
</pre><div class='vspace'></div><h4>dns_servers_no</h4>
<p>How many dns servers from the ones defined in '/etc/resolv.conf' will be used. 
Default value is to use all of them.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    dns_servers_no=2
</pre><div class='vspace'></div><h4>dns_try_ipv6</h4>
<p>Can be 'yes' or 'no'. If it is set to 'yes' and a DNS lookup fails, it will retry it
for ipv6 (AAAA record). Default value is 'no'.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    dns_try_ipv6=yes
</pre><div class='vspace'></div><h4>dns_use_search_list</h4>
<p>Can be 'yes' or 'no'. If set to 'no', the search list in '/etc/resolv.conf'
will be ignored (=&gt; fewer lookups =&gt; gives up faster). Default value is 'yes'.
</p>
<p class='vspace'>HINT: even if you don't have a search list defined, setting this option
to 'no' will still be "faster", because an empty search list is in 
fact search "" (so even if the search list is empty/missing there will
still be 2 dns queries, eg. foo+'.' and foo+""+'.')
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    dns_use_search_list=no
</pre><div class='vspace'></div><h4>dst_blacklist</h4>
<p>Definition of a static (read-only) IP/destination blacklist. These lists can be selected from script (at runtime) to filter  the outgoing requests, based on IP, protocol, port, etc.
</p>
<p class='vspace'>Its primary purposes will be to prevent sending requests to critical IPs (like GWs) due DNS or to avoid sending to destinations that are known to be unavailable (temporary or permanent). 
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
   # filter out requests going to ips of my gws
   dst_blacklist = gw:{( tcp , 192.168.2.100 , 5060 , "" ),( any , 192.168.2.101 , 0 , "" )}
   # block requests going to "evil" networks
   dst_blacklist = net_filter:{ ( any , 192.168.1.100/255.255.255.0 , 0 , "" )}
   # block message requests with nasty words
   dst_blacklist = msg_filter:{ ( any , 192.168.20.0/255.255.255.0 , 0 , "MESSAGE*ugly_word" )}
   # block requests not going to a specific subnet
   dst_blacklist = net_filter2:{ !( any , 192.168.30.0/255.255.255.0 , 0 , "" )}
</pre>
<p class='vspace'>Each rule is defined by:
</p><ul><li>protocol : TCP, UDP, TLS or "any" for anything
</li><li>port : number or 0 for any
</li><li>ip/mask
</li><li>test patter - is a filename like matching (see  "man 3 fnmatch") applied on the outgoing request buffer (first_line+hdrs+body) 
</li></ul><div class='vspace'></div><h4>event_pkg_threshold</h4>
<p>A number representing the percentage threshold above which the E_CORE_PKG_THRESHOLD event is raised, warning about low amount of free private memory. It accepts integer values between 0 and 100.
</p>
<p class='vspace'>Default value is 0 ( event disabled ).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    event_pkg_threshold = 90
</pre><div class='vspace'></div><h4>event_shm_threshold</h4>
<p>A number representing the percentage threshold above which the E_CORE_SHM_THRESHOLD event is raised, warning about low amount of free shared memory. It accepts integer values between 0 and 100.
</p>
<p class='vspace'>Default value is 0 ( event disabled ).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    event_shm_threshold = 90
</pre><div class='vspace'></div><h4>exec_dns_threshold</h4>
<p>A number representing the maximum number of microseconds a DNS query is expected to last. Anything above the set number will trigger a warning message to the logging facility.
</p>
<p class='vspace'>Default value is 0 ( logging disabled ).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    exec_dns_threshold = 60000
</pre><div class='vspace'></div><h4>exec_msg_threshold</h4>
<p>A number representing the maximum number of microseconds the processing of a SIP msg is expected to last. Anything above the set number will trigger a warning message to the logging facility.
Aside from the message and the processing time, the most time consuming function calls from the script will also be logged.
</p>
<p class='vspace'>Default value is 0 ( logging disabled ).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    exec_msg_threshold = 60000
</pre><div class='vspace'></div><h4>fork</h4>
<p>If set to 'yes' the proxy will fork and run in daemon mode - one process will be created for each network interface the proxy listens to and for each protocol (TCP/UDP), multiplied with the value of 'children' parameter.
</p>
<p class='vspace'>When set to 'no', the proxy will stay bound to the terminal and runs as single process. First interface is used for listening to. OpenSIPS will only listen on UDP. Since the process is attached to the controlling terminal, not PID file will be created even if the -P command line option was specified.
</p>
<p class='vspace'>Default value is 'yes'.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    fork=no
</pre><div class='vspace'></div><h4>group gid</h4>
<p>The group id to run <strong>OpenSIPS</strong>.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>  group="opensips"
</pre><div class='vspace'></div><h4>include_file</h4>
<p>Can be called from outside route blocks to load additional routes/blocks or from inside them to simply preform more functions. The file path can be relative or absolute. If it is not an absolute path, first attempt is to locate it relative to current directory. If that fails, second try is relative to directory of the file that includes it. Will throw an error if file is not found.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
    include_file "proxy_regs.cfg"
</pre>
<div class='vspace'></div><h4>import_file</h4>
<p>Same as include_file but will not throw an error if file is not found.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
    import_file "proxy_regs.cfg"
</pre>
<div class='vspace'></div><h4>listen</h4>
<p>Set the network addresses the SIP server should listen to. It can be an IP address, hostname or network interface id or combination of protocol:address:port (e.g., udp:10.10.10.10:5060). This parameter can be set multiple times in same configuration file, the server listening on all addresses specified.
</p>
<p class='vspace'>The listen definition may accept several optional parameters for:
</p><ul><li>configuring an advertise IP and port only for this interface. Syntax "AS 11.22.33.44:5060"
</li><li>setting a different number of children for this interface only (for UDP and SCTP interfaces only). This will override the global "children" parameter. Syntax "use_children 5"
</li></ul><p>Remember that this parameters have affect only for the interface they are configured for; if not defined per interface, the global values will be used.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
    listen=10.10.10.10
    listen=eth1:5062
    listen=udp:10.10.10.10:5064
    listen=udp:127.0.0.1:5060 use_children 5
    listen=udp:127.0.0.1:5060 as 99.88.44.33:5060 use_children 3
    listen=127.0.0.1 use_children 3
</pre>
<p class='vspace'>If you omit this directive then the SIP server will listen on all interfaces. On start the SIP server reports all the interfaces that it is listening on. Even if you specify only UDP interfaces here, the server will start the TCP engine too. If you don't want this, you need to disable the TCP support completely with the core parameter disable_tcp.
</p>
<div class='vspace'></div><h4>log_facility</h4>
<p>If <strong>OpenSIPS</strong> logs to syslog, you can control the facility for logging. Very
useful when you want to divert all <strong>OpenSIPS</strong> logs to a different log file.
See the man page syslog(3) for more details.
</p>
<p class='vspace'>For more see: http://www.voice-system.ro/docs/ser-syslog/
</p>
<p class='vspace'>Default value is LOG_DAEMON.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    log_facility=LOG_LOCAL0
</pre><div class='vspace'></div><h4>log_name</h4>
<p>Set the id to be printed in syslog. The value must be a string and has
effect only when <strong>OpenSIPS</strong> runs in daemon mode (fork=yes), after daemonize.
Default value is argv[0].
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    log_name="osips-5070"
</pre><div class='vspace'></div><h4>log_stderror</h4>
<p>With this parameter you can make <strong>OpenSIPS</strong> to write log and debug messages to standard error. Possible values are:
</p>
<p class='vspace'>- "yes" - write the messages to standard error
</p>
<p class='vspace'>- "no" - write the messages to syslog
</p>
<p class='vspace'>Default value is "no".
</p>
<p class='vspace'>For more see: http://www.voice-system.ro/docs/ser-syslog/
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    log_stderror=yes
</pre><div class='vspace'></div><h4>max_while_loops</h4>
<p>The parameters set the value of maximum loops that can be done within a "while". Comes as a protection to avoid infinite loops in config file execution. Default is 100.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    max_while_loops=200
</pre><div class='vspace'></div><h4>maxbuffer</h4>
<p>The size in bytes not to be exceeded during the auto-probing procedure of discovering the maximum buffer size for receiving UDP messages. Default value is 262144.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    maxbuffer=65536
</pre><div class='vspace'></div><h4>memdump | mem_dump</h4>
<p>Log level to print memory status information (runtime and shutdown). It has to be less than the value of 'debug' parameter if you want memory info to be logged. Default: memdump=L_DBG (4)
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    memdump=2
</pre><p class='vspace'>NOTE that setting memlog (see below), will also set the memdump parameter - if you want different values for memlog and memdump, you need to first set memlog and then memdump.
</p>
<div class='vspace'></div><h4>memlog | mem_log</h4>
<p>Log level to print memory debug info. It has to be less than the value of 'debug' parameter if you want memory info to be logged. Default: memlog=L_DBG (4)
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    memlog=2
</pre><p class='vspace'>NOTE: by setting memlog parameter, the memdump will automatically be set to the same value (see memdump docs).
</p>
<div class='vspace'></div><h4>mcast_loopback</h4>
<p>It can be 'yes' or 'no'. If set to 'yes', multicast datagram are sent over loopback. Default value is 'no'.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    mcast_loopback=yes
</pre><div class='vspace'></div><h4>mcast_ttl</h4>
<p>Set the value for multicast ttl. Default value is OS specific (usually 1).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    mcast_ttl=32
</pre><div class='vspace'></div><h4>mhomed</h4>
<p>Set the server to try to locate outbound interface on multihomed host. By default is not (0) - it is rather time consuming.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    mhomed=1
</pre><div class='vspace'></div><h4>mpath</h4>
<p>Set the module search path.  This can be used to simplify the loadmodule parameter
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
    mpath="/usr/local/lib/opensips/modules"
    loadmodule "mysql.so"
    loadmodule "uri.so"
    loadmodule "uri_db.so"
    loadmodule "sl.so"
    loadmodule "tm.so"
    ...
</pre>
<div class='vspace'></div><h4>open_files_limit</h4>
<p>If set and bigger than the current open file limit, <strong>OpenSIPS</strong> will try
to increase its open file limit to this number. Note: <strong>OpenSIPS</strong> must be
started as root to be able to increase a limit past the hard limit
(which, for open files, is 1024 on most systems).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    open_files_limit=2048
</pre><div class='vspace'></div><h4>port</h4>
<p>The port the SIP server listens to. The default value for it is 5060.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    port=5080
</pre><div class='vspace'></div><h4>reply_to_via</h4>
<p>If it is set to 1, any local reply is sent to the address advertised in top most Via of the request. Default value is 0 (off).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    reply_to_via=0
</pre><div class='vspace'></div><h4>query_buffer_size</h4>
<p>If set to a value greater than 1, inserts to DB will not be flushed one by one. Rows to be inserted will be kept in memory until until they gather up to query_buffer_size rows, and only then they will be flushed to the database.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    query_buffer_size=5
</pre><div class='vspace'></div><h4>query_flush_time</h4>
<p>If query_buffer_size is set to a value greater than 1, a timer will trigger once every query_flush_time seconds,
ensuring that no row will be kept for too long in memory.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>     query_flush_time=10
</pre><div class='vspace'></div><h4>rev_dns</h4>
<p>This parameter controls if the SIP server should attempt to lookup its own IP address in DNS. If this parameter is set to yes and the IP address is not in DNS a warning is printed on syslog and a "received=" field is added to the via header. 
</p>
<p class='vspace'>Default is no.
</p>
<div class='vspace'></div><h4>server_header</h4>
<p>The body of Server header field generated by <strong>OpenSIPS</strong> when it sends a request as UAS.  It defaults to "OpenSIPS (&lt;version&gt; (&lt;arch&gt;/&lt;os&gt;))".  
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
server_header="Server: My Company SIP Proxy"
</pre>
<p class='vspace'>Please note that you have to add the header name "Server:", otherwise <strong>OpenSIPS</strong> will just write a header like:
</p>
<div class='vspace'></div><pre class='escaped'>
My Company SIP Proxy
</pre>
<div class='vspace'></div><h4>server_signature</h4>
<p>This parameter controls the "Server" header in any locally generated message. 
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>     server_signature=no
</pre><p class='vspace'>If it is enabled (default=yes) a header is generated as in the following example:
</p>
<div class='vspace'></div><pre>     Server: OpenSIPS (0.9.5 (i386/linux))
</pre><div class='vspace'></div><h4>sip_warning</h4>
<p>Can be 0 or 1. If set to 1 (default value is 0) a 'Warning' header is added to each reply generated by <strong>OpenSIPS</strong>.
The header contains several details that help troubleshooting using the network traffic dumps.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    sip_warning=0
</pre><div class='vspace'></div><h4>tcp_children</h4>
<p>Number of children processes to be created for reading from TCP connections. If no value is explicitly set, the same number of TCP children as UDP children (see "children" parameter) will be used.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_children=4
</pre><div class='vspace'></div><h4>tcp_accept_aliases</h4>
<div class='vspace'></div><h4>tcp_listen_backlog</h4>
<p>The backlog argument defines the maximum length to which the queue of pending connections for the TCP listeners may grow. If a connection  request arrives when the queue is full, the client may receive an error with an indication  of  ECONNREFUSED  or,  if  the underlying protocol supports retransmission, the request may be ignored so that a later reattempt at connection succeeds.
</p>
<p class='vspace'>Default configured value is 10.
</p>
<div class='vspace'></div><h4>tcp_send_timeout</h4>
<p>Time in seconds after a TCP connection will be closed if it is not available
for writing in this interval (and <strong>OpenSIPS</strong> wants to send something on it).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_send_timeout=3
</pre><div class='vspace'></div><h4>tcp_connect_timeout</h4>
<p>Time in seconds before an ongoing attempt to connect will be aborted.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_connect_timeout=5
</pre><div class='vspace'></div><h4>tcp_connection_lifetime!!!!</h4>
<p>Lifetime in seconds for TCP sessions. TCP sessions which are inactive for &gt;tcp_connection_lifetime will be closed by <strong>OpenSIPS</strong>. Default value is defined in tcp_conn.h: #define DEFAULT_TCP_CONNECTION_LIFETIME 120. Setting this value to 0 will close the TCP connection pretty quick ;-). You can also set the TCP lifetime to the expire value of the REGISTER by using the tcp_persistent_flag parameter of the registrar module.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_connection_lifetime=3600
</pre><div class='vspace'></div><h4>tcp_max_connections</h4>
<p>maximum number of tcp connections (if the number is exceeded no new tcp connections will be accepted). Default is defined in tcp_conn.h: #define DEFAULT_TCP_MAX_CONNECTIONS 2048
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_max_connections=4096
</pre><div class='vspace'></div><h4>tcp_poll_method</h4>
<p>poll method used (by default the best one for the current OS is selected). For available types see io_wait.c and poll_types.h: none, poll, epoll_lt, epoll_et, sigio_rt, select, kqueue, /dev/poll
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_poll_method=select
</pre><div class='vspace'></div><h4>tcp_no_new_conn_bflag</h4>
<p>A branch flag to be used as marker to instruct OpenSIPS not to attempt to open a new TCP connection when delivering a request, but only to reuse an existing one (if available). If no existing conn, a generic send error will be returned.
</p>
<p class='vspace'>This is intended to be used in NAT scenarios, where makes no sense to open a TCP connection towards a destination behind a NAT (like TCP connection created during registration was lost, so there is no way to contact the device until it re-REGISTER). Also this can be used to detect when a NATed registered user lost his TCP connection, so that opensips can disable his registration as useless.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>     tcp_no_new_conn_bflag = 6
     ....
     route{
         ....
         if( destination_behin_nat &amp;&amp; proto==TCP )
            setbflag(6);
         ....
         t_relay("0x02"); # no auto error reply
         $var(retcode) = $rc;
         if ($var(retcode)==-6) {
             #send error
             xlog("unable to send request to destination");
             send_reply("404","Not found");
             exit;
         } else if ($var(retcode)&lt;0) {
             sl_reply_error();
             exit;
         }
         ....
     }
</pre><div class='vspace'></div><h4>tcp_threshold</h4>
<p>A number representing the maximum number of microseconds sending of a TCP request is expected to last. Anything above the set number will trigger a warning message to the logging facility.
</p>
<p class='vspace'>Default value is 0 ( logging disabled ).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_threshold = 60000
</pre><div class='vspace'></div><h4>tcp_keepalive</h4>
<p>Enable / disable TCP keepalive
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_keepalive = 1
</pre><div class='vspace'></div><h4>tcp_keepcount</h4>
<p>Number of keepalives to send before closing the connection (Linux only)
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_keepcount = 5
</pre><div class='vspace'></div><h4>tcp_keepidle</h4>
<p>Amount of time before OpenSIPS will start to send keepalives if the connection is idle (Linux only)
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_keepidle = 30
</pre><div class='vspace'></div><h4>tcp_keepinterval</h4>
<p>Interval between keepalive probes, if the previous one failed (Linux only)
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_keepinterval = 10
</pre><div class='vspace'></div><h4>tls_ca_list</h4>
<div class='vspace'></div><h4>tls_certificate</h4>
<div class='vspace'></div><h4>tls_ciphers_list</h4>
<div class='vspace'></div><h4>tls_domain</h4>
<div class='vspace'></div><h4>tls_handshake_timeout</h4>
<div class='vspace'></div><h4>tls_log</h4>
<div class='vspace'></div><h4>tls_method</h4>
<div class='vspace'></div><h4>tls_port_no</h4>
<div class='vspace'></div><h4>tls_private_key</h4>
<div class='vspace'></div><h4>tls_require_certificate</h4>
<div class='vspace'></div><h4>tls_send_timeout</h4>
<div class='vspace'></div><h4>tls_verify</h4>
<div class='vspace'></div><h4>tos</h4>
<p>The TOS (Type Of Service) to be used for the sent IP packages (both TCP and UDP).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
    tos=IPTOS_LOWDELAY
    tos=0x10
    tos=IPTOS_RELIABILITY
</pre>
<div class='vspace'></div><h4>user uid</h4>
<p>The user id to run <strong>OpenSIPS</strong> (OpenSIPS will suid to it).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    user="opensips"
</pre><div class='vspace'></div><h4>user_agent_header</h4>
<p>The body of User-Agent header field generated by <strong>OpenSIPS</strong> when it sends a request as UAC.  It defaults to "OpenSIPS (&lt;version&gt; (&lt;arch&gt;/&lt;os&gt;))". 
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
user_agent_header="User-Agent: My Company SIP Proxy"
</pre>
<p class='vspace'>Please note that you have to include the header name "User-Agent:" as <strong>OpenSIPS</strong> does not add it and you will get an erroneous header like:
</p><pre class='escaped'>
My Company SIP Proxy
</pre>
<div class='vspace'></div><h4>wdir</h4>
<p>The working directory used by <strong>OpenSIPS</strong> at runtime. You might find it usefull when come to generating core files :)
</p>
<p class='vspace'>Example of usage:
</p><pre class='escaped'>
     wdir="/usr/local/opensips"
     or
     wdir=/usr/opensips_wd
</pre>
<p class='vspace'>(:toc-back:)
</p>
<div class='vspace'></div><hr />
<p><a name='functions' id='functions'></a>
</p><h3>Core Functions</h3>
<p>Functions exported by core that can be used in route blocks.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>This section lists the all the functions exported by <strong>OpenSIPS</strong> core for script usage (to be used in opensips.cfg)
</p>
<div class='vspace'></div><h4>add_local_rport()</h4>
<p>Add 'rport' parameter to the Via header generated by server (see RFC3581 for its meaning). It affects only the current processed request.
</p>
</div></div>
      <div class='diffrestore'><a href="javascript:if(confirm(%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1368723461:1368356855:&preview=y  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1368723461:1368356855:&preview=y%27" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1368723461:1368356855:&preview=y">Restore</a></div>
      <div class='diffbox'><div class='difftime'>May 12, 2013, at 01:07 PM 
        by <span class='diffauthor' title='79.118.227.150'>79.118.227.150</span> - </div>
        <div class='difftype'>Changed lines 1188-1190 from:</div>
        <div class='diffdel'><p>More complex examples can be found in the <a class='wikilink' title='DocsTutKvinterface' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsTutKvinterface  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsTutKvinterface%27" tppabs="http://www.opensips.org/Resources/DocsTutKvinterface">Key-Value Interface Tutorial</a>.
</p>
<div class='vspace'></div>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>More complex examples can be found in the <a class='wikilink' title='Tutorials-KeyValueInterface' href="Tutorials-KeyValueInterface.htm" tppabs="http://www.opensips.org/Documentation/Tutorials-KeyValueInterface">Key-Value Interface Tutorial</a>.
</p>
<div class='vspace'></div>
</div>
        <div class='difftype'>Changed lines 1206-1208 from:</div>
        <div class='diffdel'><p>More complex examples can be found in the <a class='wikilink' title='DocsTutKvinterface' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsTutKvinterface  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsTutKvinterface%27" tppabs="http://www.opensips.org/Resources/DocsTutKvinterface">Key-Value Interface Tutorial</a>.
</p>
<div class='vspace'></div>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>More complex examples can be found in the <a class='wikilink' title='Tutorials-KeyValueInterface' href="Tutorials-KeyValueInterface.htm" tppabs="http://www.opensips.org/Documentation/Tutorials-KeyValueInterface">Key-Value Interface Tutorial</a>.
</p>
<div class='vspace'></div>
</div>
        <div class='difftype'>Changed lines 1225-1226 from:</div>
        <div class='diffdel'><p>More complex examples can be found in the <a class='wikilink' title='DocsTutKvinterface' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsTutKvinterface  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsTutKvinterface%27" tppabs="http://www.opensips.org/Resources/DocsTutKvinterface">Key-Value Interface Tutorial</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>More complex examples can be found in the <a class='wikilink' title='Tutorials-KeyValueInterface' href="Tutorials-KeyValueInterface.htm" tppabs="http://www.opensips.org/Documentation/Tutorials-KeyValueInterface">Key-Value Interface Tutorial</a>.
</p>
</div>
        <div class='difftype'>Changed lines 1256-1257 from:</div>
        <div class='diffdel'><p>More complex examples can be found in the <a class='wikilink' title='DocsTutKvinterface' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsTutKvinterface  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsTutKvinterface%27" tppabs="http://www.opensips.org/Resources/DocsTutKvinterface">Key-Value Interface Tutorial</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>More complex examples can be found in the <a class='wikilink' title='Tutorials-KeyValueInterface' href="Tutorials-KeyValueInterface.htm" tppabs="http://www.opensips.org/Documentation/Tutorials-KeyValueInterface">Key-Value Interface Tutorial</a>.
</p>
</div>
        <div class='difftype'>Changed lines 1271-1272 from:</div>
        <div class='diffdel'><p>More complex examples can be found in the <a class='wikilink' title='DocsTutKvinterface' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsTutKvinterface  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsTutKvinterface%27" tppabs="http://www.opensips.org/Resources/DocsTutKvinterface">Key-Value Interface Tutorial</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>More complex examples can be found in the <a class='wikilink' title='Tutorials-KeyValueInterface' href="Tutorials-KeyValueInterface.htm" tppabs="http://www.opensips.org/Documentation/Tutorials-KeyValueInterface">Key-Value Interface Tutorial</a>.
</p>
</div>
        <div class='difftype'>Changed lines 1285-1286 from:</div>
        <div class='diffdel'><p>More complex examples can be found in the <a class='wikilink' title='DocsTutKvinterface' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsTutKvinterface  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsTutKvinterface%27" tppabs="http://www.opensips.org/Resources/DocsTutKvinterface">Key-Value Interface Tutorial</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>More complex examples can be found in the <a class='wikilink' title='Tutorials-KeyValueInterface' href="Tutorials-KeyValueInterface.htm" tppabs="http://www.opensips.org/Documentation/Tutorials-KeyValueInterface">Key-Value Interface Tutorial</a>.
</p>
</div>
        <div class='difftype'>Changed lines 1408-1409 from:</div>
        <div class='diffdel'><p>For more see http://www.voice-system.ro/docs/ser-flags/ or <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more see http://www.voice-system.ro/docs/ser-flags/ or <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>Changed lines 1420-1421 from:</div>
        <div class='diffdel'><p>For more about script flags, see <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more about script flags, see <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>Changed lines 1432-1433 from:</div>
        <div class='diffdel'><p>For more about script flags, see <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more about script flags, see <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>Changed lines 1571-1572 from:</div>
        <div class='diffdel'><p>For more see http://www.voice-system.ro/docs/ser-flags/ or <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more see http://www.voice-system.ro/docs/ser-flags/ or <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>Changed lines 1581-1582 from:</div>
        <div class='diffdel'><p>For more about script flags, see <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more about script flags, see <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>Changed lines 1596-1597 from:</div>
        <div class='diffdel'><p>For more about script flags, see <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more about script flags, see <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>Changed lines 1780-1781 from:</div>
        <div class='diffdel'><p>For more about script flags, see <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more about script flags, see <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>Changed line 1795 from:</div>
        <div class='diffdel'><p>For more about script flags, see <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><p>For more about script flags, see <a class='wikilink' title='Script-Flags' href="Script-Flags-2-2.htm" tppabs="http://www.opensips.org/Documentation/Script-Flags">Flags Documentation</a>.
</p>
</div></div>
      <div class='diffrestore'><a href="Script-CoreFunctions-1-9-action=edit&restore=diff-1368356855-1368355869-&preview=y.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1368356855:1368355869:&preview=y">Restore</a></div>
      <div class='diffbox'><div class='difftime'>May 12, 2013, at 12:51 PM 
        by <span class='diffauthor' title='79.118.227.150'>79.118.227.150</span> - </div>
        <div class='difftype'>Changed line 1 from:</div>
        <div class='diffdel'><h2>Resources -&gt; <a class='wikilink' title='Documentation' href="javascript:if(confirm(%27http://www.opensips.org/Resources/Documentation  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/Documentation%27" tppabs="http://www.opensips.org/Resources/Documentation">Documentation</a> -&gt; <a class='wikilink' title='DocsCookbooks' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCookbooks  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCookbooks%27" tppabs="http://www.opensips.org/Resources/DocsCookbooks">CookBooks</a> -&gt; Core functions and parameters - 1.9.x</h2>
</div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><h2><a class='createlinktext' rel='nofollow' 
    href="Documentation-action=edit.htm" tppabs="http://www.opensips.org/Documentation/Documentation?action=edit">Documentation</a><a rel='nofollow' 
    class='createlink' href="Documentation-action=edit.htm" tppabs="http://www.opensips.org/Documentation/Documentation?action=edit">?</a> -&gt; Script -&gt; <a class='selflink' href="Script-CoreFunctions-1-9.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9">Core functions and parameteres 1.9</a></h2>
</div></div>
      <div class='diffrestore'><a href="javascript:if(confirm(%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1368355869:1366821530:&preview=y  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1368355869:1366821530:&preview=y%27" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1368355869:1366821530:&preview=y">Restore</a></div>
      <div class='diffbox'><div class='difftime'>April 24, 2013, at 06:38 PM 
        by <span class='diffauthor' title='109.99.235.212'>109.99.235.212</span> - </div>
        <div class='difftype'>Added lines 1-1844:</div>
        <div class='diffadd'><h2>Resources -&gt; <a class='wikilink' title='Documentation' href="javascript:if(confirm(%27http://www.opensips.org/Resources/Documentation  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/Documentation%27" tppabs="http://www.opensips.org/Resources/Documentation">Documentation</a> -&gt; <a class='wikilink' title='DocsCookbooks' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCookbooks  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCookbooks%27" tppabs="http://www.opensips.org/Resources/DocsCookbooks">CookBooks</a> -&gt; Core functions and parameters - 1.9.x</h2>
<hr />
<p class='vspace'>(:toc-float Table of Content:)
This section lists the all the parameters and functions exported by <strong>OpenSIPS</strong> core for script usage (to be used in opensips.cfg)
</p>
<p class='vspace'>This document is for <strong>OpenSIPS 1.9.x</strong> 
</p>
<div class='vspace'></div><ol><li><a href='#keywords'>Core keywords</a>
</li><li><a href='#values'>Core values</a>
</li><li><a href='#parameters'>Core parameters</a>
</li><li><a href='#functions'>Core functions</a>
</li></ol><div class='vspace'></div><hr />
<p>
</p><h3>Core Keywords</h3>
<p>Keywords specific to SIP messages which can be used mainly in 'if' expressions.
</p>
<div class='vspace'></div><h4>af</h4>
<p>The address family of the received SIP message. It is INET if the message was received over IPv4 or INET6 if the message was received over IPv6.
</p>
<p class='vspace'>Exampe of usage:
</p>
<div class='vspace'></div><pre>    if(af==INET6) {
        log("Message received over IPv6 link\n");
    };
</pre><div class='vspace'></div><h4>dst_ip</h4>
<p>The IP of the local interface where the SIP message was received. When the proxy listens on many network interfaces, makes possible to detect which was the one that received the packet.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>   if(dst_ip==127.0.0.1) {
      log("message received on loopback interface\n");
   };
</pre><div class='vspace'></div><h4>dst_port</h4>
<p>The local port where the SIP packet was received. When <strong>OpenSIPS</strong> is listening on many ports, it is useful to learn which was the one that received the SIP packet.
</p>
<p class='vspace'>Example of usage:
</p><pre>   if(dst_port==5061)
   {
       log("message was received on port 5061\n");
   };
</pre><div class='vspace'></div><h4>from_uri</h4>
<p>This script variable is a reference to the URI of 'From' header. It can be used to test 'From'- header URI value.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(is_method("INVITE") &amp;&amp; from_uri=~".*@opensips.org")
    {
        log("the caller is from opensips.org\n");
    };
</pre><div class='vspace'></div><h4>method</h4>
<p>The variable is a reference to the SIP method of the message.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(method=="REGISTER")
    {
       log("this SIP request is a REGISTER message\n");
    };
</pre><div class='vspace'></div><h4>msg:len</h4>
<p>The variable is a reference to the size of the message. It can be used in 'if' constructs to test message's size.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(msg:len&gt;2048)
    {
        sl_send_reply("413", "message too large");
        exit;
    };
</pre><div class='vspace'></div><h4>$retcode</h4>
<p>It represents the value returned by last function executed (similar to $? from bash -- if you wish, you can use also $? in OpenSIPS config, both names '$retcode' and '$?' are supported). If tested after a call of a route, it is the value retuned by that route.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>   route {
       route(1);
       if($retcode==1)
       {
           log("The request is an INVITE\n");
       };
   }


   route[1] {
       if(is_method("INVITE"))
           return(1);
       return(2);
   }
</pre><div class='vspace'></div><h4>proto</h4>
<p>This variable can be used to test the transport protocol of the SIP message.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(proto==UDP)
    {
        log("SIP message received over UDP\n");
    };
</pre><div class='vspace'></div><h4>status</h4>
<p>If used in onreply_route, this variable is a reference to the status code of the reply. If it used in a standard route block, the variable is a reference to the status of the last reply sent out for the current request.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(status=="200")
    {
        log("this is a 200 OK reply\n");
    };
</pre><div class='vspace'></div><h4>src_ip</h4>
<p>Reference to source IP address of the SIP message.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(src_ip==127.0.0.1)
    {
        log("the message was sent from localhost!\n");
    };
</pre><div class='vspace'></div><h4>src_port</h4>
<p>Reference to source port of the SIP message (from which port the message was sent by previous hop).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(src_port==5061)
    {
        log("message sent from port 5061\n");
    }
</pre><div class='vspace'></div><h4>to_uri</h4>
<p>This variable can be used to test the value of URI from To header.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>  if(to_uri=~"sip:.+@opensips.org")
  {
      log("this is a request for opensips.org users\n");
  };
</pre><div class='vspace'></div><h4>uri</h4>
<p>This variable can be used to test the value of the request URI.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(uri=~"sip:.+@opensips.org")
    {
        log("this is a request for opensips.org users\n");
    };
</pre><p class='vspace'>(:toc-back:)
</p>
<div class='vspace'></div><hr />
<p>
</p><h3>Core Values</h3>
<p>Values that can be used in 'if' expressions to check against Core Keywords
</p>
<div class='vspace'></div><h4>INET</h4>
<p>This keyword can be used to test whether the SIP packet was received over an IPv4 connection.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(af==INET)
    {
        log("the SIP message was received over IPv4\n");
    };
</pre><div class='vspace'></div><h4>INET6</h4>
<p>This keyword can be used to test whether the SIP packet was received over an IPv6 connection.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>  if(af==INET6)
  {
      log("the SIP message was received over IPv6\n");
  };
</pre><div class='vspace'></div><h4>TCP</h4>
<p>This keyword can be used to test the value of 'proto' and check whether the SIP packet was received over TCP or not.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>  if(proto==TCP)
  {
      log("the SIP message was received over TCP\n");
  };
</pre><div class='vspace'></div><h4>UDP</h4>
<p>This keyword can be used to test the value of 'proto' and check whether the SIP packet was received over UDP or not.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>  if(proto==UDP)
  {
      log("the SIP message was received over UDP\n");
  };
</pre><div class='vspace'></div><h4>max_len</h4>
<p>This keyword is set to the maximum size of an UDP packet. It can be used to test message's size.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(msg:len&gt;max_len)
    {
        sl_send_reply("413", "message too large to be forwarded over UDP without fragmentation");
        exit;
    }
</pre><div class='vspace'></div><h4>myself</h4>
<p>It is a reference to the list of local IP addresses, hostnames and aliases that has been set in <strong>OpenSIPS</strong> configuration file. This lists contain the domains served by <strong>OpenSIPS</strong>.
</p>
<p class='vspace'>The variable can be used to test if the host part of an URI is in the list. The usefulness of this test is to select the messages that has to be processed locally or has to be forwarded to another server.
</p>
<p class='vspace'>See "alias" to add hostnames,IP addresses and aliases to the list.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(uri==myself) {
        log("the request is for local processing\n");
    };
</pre><div class='vspace'></div><h4>null</h4>
<p>Can be used in assignment to reset the value of a per-script variable or to delete an avp.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    $avp(i:12) = null;
    $var(x) = null;
</pre><p class='vspace'>(:toc-back:)
</p>
<div class='vspace'></div><hr />
<p>
</p><h3>Core parameters</h3>
<p>Global parameters that can be set in configuration file. Accepted values are, depending on the actual parameters strings, numbers and yes/ no. If you need to specify either "yes" or "no" as part of a string, wrap this in double quotes.
</p>
<div class='vspace'></div><h4>advertised_address</h4>
<p>It can be an IP address or string and represents the address advertised in Via header and
other destination lumps (e.g RR header). If empty or not set (default value) the socket
address from where the request will be sent is used.
</p>
<p class='vspace'><span  style='color: red;'>WARNING</span>: 
</p><pre>  - don't set it unless you know what you are doing (e.g. nat traversal)
  - you can set anything here, no check is made (e.g. foo.bar will be
  accepted even if foo.bar doesn't exist)
</pre><p class='vspace'>Example of usage:
</p><pre class='escaped'>
    advertised_address="opensips.org"
</pre>
<p class='vspace'><span  style='color: blue;'>NOTE</span>: Aside this global approach, you can also define an advertise IP and port in a per-interface manner (see the "listen" parameter). When advertise values are defined per interface, they will be used only for traffic leaving that interface only.
</p>
<div class='vspace'></div><h4>advertised_port</h4>
<p>The port advertised in Via header and other destination lumps (e.g. RR). If empty or not set (default value) the port from where the message will be sent is used. Same warnings as for 'advertised_address'.
</p>
<p class='vspace'>Example of usage:
</p><pre class='escaped'>
    advertised_port=5080
</pre>
<p class='vspace'><span  style='color: blue;'>NOTE</span>: Aside this global approach, you can also define an advertise IP and port in a per-interface manner (see the "listen" parameter). When advertise values are defined per interface, they will be used only for traffic leaving that interface only.
</p>
<div class='vspace'></div><h4>alias</h4>
<p>Parameter to set alias hostnames for the server. It can be set many times, each value being added in a list to match the hostname when 'myself' is checked.
</p>
<p class='vspace'>It is necessary to include the port (the port value used in the "port=" or "listen=" definitions) in the alias definition otherwise the loose_route() function will not work as expected for local forwards
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
    alias=other.domain.com:5060
    alias=another.domain.com:5060
</pre>
<div class='vspace'></div><h4>auto_aliases</h4>
<p>This parameter controls if aliases should be automatically discovered and added during fixing listening sockets. The auto discovered aliases are result of the DNS lookup (if listen is a name and not IP) or of a reverse DNS lookup on the listen IP.
</p>
<p class='vspace'>Far backward compatibility reasons, the default value is "on".
</p>
<p class='vspace'>Example of usage:
</p><pre class='escaped'>
    auto_aliases=no
    auto_aliases=0
</pre>
<div class='vspace'></div><h4>check_via</h4>
<p>Check if the address in top most via of replies is local. Default value is 0 (check disabled).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    check_via=1 
</pre><div class='vspace'></div><h4>children</h4>
<p>Number of children to fork for <strong>each</strong> UDP or SCTP interface you have defined. Default value is 8.
</p>
<p class='vspace'>Example of usage:
</p><pre class='escaped'>
    children=16
</pre>
<p class='vspace'><span  style='color: blue;'>NOTE</span>: this global value (applicable for all UDP/SCTP interfaces) can be override if you set a different number of children in the definition of a specific interface - so actually you can define a different number of children for each interface (see the "listen" parameter for syntax).  
</p>
<div class='vspace'></div><h4>chroot</h4>
<p>The value must be a valid path in the system. If set, <strong>OpenSIPS</strong> will chroot (change root directory) to its value.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    chroot=/other/fakeroot
</pre><div class='vspace'></div><h4>db_version_table</h4>
<p>The name of the table version to be used by the DB API to check the version of the used tables.<br />Default value is <strong>"version"</strong>
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    db_version_table="version_1_8"
</pre><div class='vspace'></div><h4>db_default_url</h4>
<p>The default DB URL to be used by modules if no per-module URL is given. Default is NULL (not defined)
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    db_default_url="mysql://opensips:opensipsrw@localhost/opensips"
</pre><div class='vspace'></div><h4>debug</h4>
<p>Set the debug level. Higher values make <strong>OpenSIPS</strong> to print more debug messages.
</p>
<p class='vspace'>Examples of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
    debug=1 -- print only important messages (like errors or more critical situations) 
    - recommended for running proxy as daemon

    debug=4 -- print a lot of debug messages - use it only when doing debugging sessions
</pre>
<p class='vspace'>Actual values are:
</p><ul><li>-3 - Alert level
</li><li>-2 - Critical level
</li><li>-1 - Error level
</li><li> 1 - Warning level
</li><li> 2 - Notice level
</li><li> 3 - Info level
</li><li> 4 - Debug level
</li></ul><p class='vspace'>The 'debug' parameter is usually used in concordance with 'log_stderror' parameter.
</p>
<p class='vspace'>Value of 'debug' parameter can also be get and set dynamically using 'debug' Core MI function.
</p>
<p class='vspace'>For more see: http://www.voice-system.ro/docs/ser-syslog/
</p>
<div class='vspace'></div><h4>disable_503_translation</h4>
<p>If 'yes', OpenSIPS will not translate the received 503 replies into 500 replies (RFC 3261 clearly states that a proxy should never relay a 503 response, but instead it must transform it into a 500).
</p>
<p class='vspace'>Default value is 'no' (do translation).
</p>
<div class='vspace'></div><h4>disable_core_dump</h4>
<p>Can be 'yes' or 'no'. By default core dump limits are set to unlimited or
a high enough value. Set this config variable to 'yes' to disable core dump-ing
(will set core limits to 0).
</p>
<p class='vspace'>Default value is 'no'.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    disable_core_dump=yes
</pre><div class='vspace'></div><h4>disable_dns_blacklist</h4>
<p>The DNS resolver, when configured with failover, can automatically store in a temporary blacklist the failed destinations. This will prevent (for a limited period of time) <strong>OpenSIPS</strong> to send requests to destination known as failed. So, the blacklist can be used as a memory for the DNS resolver. 
</p>
<p class='vspace'>The temporary blacklist created by DNS resolver is named "dns" and it is by default selected for usage (no need use the use_blacklist()) function. The rules from this list have a life time of 4 minutes - you can change it at compile time, from blacklists.h .
</p>
<p class='vspace'>Can be 'yes' or 'no'. By default the blacklist is disabled (Default value is 'yes').
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    disable_dns_blacklist=no
</pre><div class='vspace'></div><h4>disable_dns_failover</h4>
<p>Can be 'yes' or 'no'. By default DNS-based failover is enabled. Set this config variable to 'yes' to disable the DNS-based failover. This is a global option, affecting the core and the modules also.
</p>
<p class='vspace'>Default value is 'no'.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    disable_dns_failover=yes
</pre><div class='vspace'></div><h4>disable_stateless_fwd</h4>
<p>Can be 'yes' or 'no'. This parameter controls the handling of stateless replies:
</p><pre class='escaped'>
    yes - drop stateless replies if stateless fwd functions (like forward) are not used in script
    no - forward stateless replies
</pre>
<p>Default value is 'yes'.
</p>
<div class='vspace'></div><h4>disable_tcp</h4>
<p>Global parameter to disable TCP support in the SIP server. Default value is 'no'.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    disable_tcp=yes
</pre><div class='vspace'></div><h4>disable_tls</h4>
<p>Global parameter to disable TLS support in the SIP server. Default value is 'yes'.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    disable_tcp=no
</pre><div class='vspace'></div><h4>dns</h4>
<p>This parameter controls if the SIP server should attempt to lookup its own domain name in DNS. If this parameter is set to yes and the domain name is not in DNS a warning is printed on syslog and a "received=" field is added to the via header. 
</p>
<p class='vspace'>Default is no.
</p>
<div class='vspace'></div><h4>dns_retr_time</h4>
<p>Time in seconds before retrying a dns request. Default value is system specific,
depends also on the '/etc/resolv.conf' content (usually 5s).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    dns_retr_time=3
</pre><div class='vspace'></div><h4>dns_retr_no</h4>
<p>Number of dns retransmissions before giving up. Default value is system specific,
depends also on the '/etc/resolv.conf' content (usually 4).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    dns_retr_no=3
</pre><div class='vspace'></div><h4>dns_servers_no</h4>
<p>How many dns servers from the ones defined in '/etc/resolv.conf' will be used. 
Default value is to use all of them.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    dns_servers_no=2
</pre><div class='vspace'></div><h4>dns_try_ipv6</h4>
<p>Can be 'yes' or 'no'. If it is set to 'yes' and a DNS lookup fails, it will retry it
for ipv6 (AAAA record). Default value is 'no'.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    dns_try_ipv6=yes
</pre><div class='vspace'></div><h4>dns_use_search_list</h4>
<p>Can be 'yes' or 'no'. If set to 'no', the search list in '/etc/resolv.conf'
will be ignored (=&gt; fewer lookups =&gt; gives up faster). Default value is 'yes'.
</p>
<p class='vspace'>HINT: even if you don't have a search list defined, setting this option
to 'no' will still be "faster", because an empty search list is in 
fact search "" (so even if the search list is empty/missing there will
still be 2 dns queries, eg. foo+'.' and foo+""+'.')
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    dns_use_search_list=no
</pre><div class='vspace'></div><h4>dst_blacklist</h4>
<p>Definition of a static (read-only) IP/destination blacklist. These lists can be selected from script (at runtime) to filter  the outgoing requests, based on IP, protocol, port, etc.
</p>
<p class='vspace'>Its primary purposes will be to prevent sending requests to critical IPs (like GWs) due DNS or to avoid sending to destinations that are known to be unavailable (temporary or permanent). 
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
   # filter out requests going to ips of my gws
   dst_blacklist = gw:{( tcp , 192.168.2.100 , 5060 , "" ),( any , 192.168.2.101 , 0 , "" )}
   # block requests going to "evil" networks
   dst_blacklist = net_filter:{ ( any , 192.168.1.100/255.255.255.0 , 0 , "" )}
   # block message requests with nasty words
   dst_blacklist = msg_filter:{ ( any , 192.168.20.0/255.255.255.0 , 0 , "MESSAGE*ugly_word" )}
   # block requests not going to a specific subnet
   dst_blacklist = net_filter2:{ !( any , 192.168.30.0/255.255.255.0 , 0 , "" )}
</pre>
<p class='vspace'>Each rule is defined by:
</p><ul><li>protocol : TCP, UDP, TLS or "any" for anything
</li><li>port : number or 0 for any
</li><li>ip/mask
</li><li>test patter - is a filename like matching (see  "man 3 fnmatch") applied on the outgoing request buffer (first_line+hdrs+body) 
</li></ul><div class='vspace'></div><h4>event_pkg_threshold</h4>
<p>A number representing the percentage threshold above which the E_CORE_PKG_THRESHOLD event is raised, warning about low amount of free private memory. It accepts integer values between 0 and 100.
</p>
<p class='vspace'>Default value is 0 ( event disabled ).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    event_pkg_threshold = 90
</pre><div class='vspace'></div><h4>event_shm_threshold</h4>
<p>A number representing the percentage threshold above which the E_CORE_SHM_THRESHOLD event is raised, warning about low amount of free shared memory. It accepts integer values between 0 and 100.
</p>
<p class='vspace'>Default value is 0 ( event disabled ).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    event_shm_threshold = 90
</pre><div class='vspace'></div><h4>exec_dns_threshold</h4>
<p>A number representing the maximum number of microseconds a DNS query is expected to last. Anything above the set number will trigger a warning message to the logging facility.
</p>
<p class='vspace'>Default value is 0 ( logging disabled ).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    exec_dns_threshold = 60000
</pre><div class='vspace'></div><h4>exec_msg_threshold</h4>
<p>A number representing the maximum number of microseconds the processing of a SIP msg is expected to last. Anything above the set number will trigger a warning message to the logging facility.
Aside from the message and the processing time, the most time consuming function calls from the script will also be logged.
</p>
<p class='vspace'>Default value is 0 ( logging disabled ).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    exec_msg_threshold = 60000
</pre><div class='vspace'></div><h4>fork</h4>
<p>If set to 'yes' the proxy will fork and run in daemon mode - one process will be created for each network interface the proxy listens to and for each protocol (TCP/UDP), multiplied with the value of 'children' parameter.
</p>
<p class='vspace'>When set to 'no', the proxy will stay bound to the terminal and runs as single process. First interface is used for listening to. OpenSIPS will only listen on UDP. Since the process is attached to the controlling terminal, not PID file will be created even if the -P command line option was specified.
</p>
<p class='vspace'>Default value is 'yes'.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    fork=no
</pre><div class='vspace'></div><h4>group gid</h4>
<p>The group id to run <strong>OpenSIPS</strong>.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>  group="opensips"
</pre><div class='vspace'></div><h4>include_file</h4>
<p>Can be called from outside route blocks to load additional routes/blocks or from inside them to simply preform more functions. The file path can be relative or absolute. If it is not an absolute path, first attempt is to locate it relative to current directory. If that fails, second try is relative to directory of the file that includes it. Will throw an error if file is not found.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
    include_file "proxy_regs.cfg"
</pre>
<div class='vspace'></div><h4>import_file</h4>
<p>Same as include_file but will not throw an error if file is not found.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
    import_file "proxy_regs.cfg"
</pre>
<div class='vspace'></div><h4>listen</h4>
<p>Set the network addresses the SIP server should listen to. It can be an IP address, hostname or network interface id or combination of protocol:address:port (e.g., udp:10.10.10.10:5060). This parameter can be set multiple times in same configuration file, the server listening on all addresses specified.
</p>
<p class='vspace'>The listen definition may accept several optional parameters for:
</p><ul><li>configuring an advertise IP and port only for this interface. Syntax "AS 11.22.33.44:5060"
</li><li>setting a different number of children for this interface only (for UDP and SCTP interfaces only). This will override the global "children" parameter. Syntax "use_children 5"
</li></ul><p>Remember that this parameters have affect only for the interface they are configured for; if not defined per interface, the global values will be used.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
    listen=10.10.10.10
    listen=eth1:5062
    listen=udp:10.10.10.10:5064
    listen=udp:127.0.0.1:5060 use_children 5
    listen=udp:127.0.0.1:5060 as 99.88.44.33:5060 use_children 3
    listen=127.0.0.1 use_children 3
</pre>
<p class='vspace'>If you omit this directive then the SIP server will listen on all interfaces. On start the SIP server reports all the interfaces that it is listening on. Even if you specify only UDP interfaces here, the server will start the TCP engine too. If you don't want this, you need to disable the TCP support completely with the core parameter disable_tcp.
</p>
<div class='vspace'></div><h4>log_facility</h4>
<p>If <strong>OpenSIPS</strong> logs to syslog, you can control the facility for logging. Very
useful when you want to divert all <strong>OpenSIPS</strong> logs to a different log file.
See the man page syslog(3) for more details.
</p>
<p class='vspace'>For more see: http://www.voice-system.ro/docs/ser-syslog/
</p>
<p class='vspace'>Default value is LOG_DAEMON.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    log_facility=LOG_LOCAL0
</pre><div class='vspace'></div><h4>log_name</h4>
<p>Set the id to be printed in syslog. The value must be a string and has
effect only when <strong>OpenSIPS</strong> runs in daemon mode (fork=yes), after daemonize.
Default value is argv[0].
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    log_name="osips-5070"
</pre><div class='vspace'></div><h4>log_stderror</h4>
<p>With this parameter you can make <strong>OpenSIPS</strong> to write log and debug messages to standard error. Possible values are:
</p>
<p class='vspace'>- "yes" - write the messages to standard error
</p>
<p class='vspace'>- "no" - write the messages to syslog
</p>
<p class='vspace'>Default value is "no".
</p>
<p class='vspace'>For more see: http://www.voice-system.ro/docs/ser-syslog/
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    log_stderror=yes
</pre><div class='vspace'></div><h4>max_while_loops</h4>
<p>The parameters set the value of maximum loops that can be done within a "while". Comes as a protection to avoid infinite loops in config file execution. Default is 100.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    max_while_loops=200
</pre><div class='vspace'></div><h4>maxbuffer</h4>
<p>The size in bytes not to be exceeded during the auto-probing procedure of discovering the maximum buffer size for receiving UDP messages. Default value is 262144.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    maxbuffer=65536
</pre><div class='vspace'></div><h4>memdump | mem_dump</h4>
<p>Log level to print memory status information (runtime and shutdown). It has to be less than the value of 'debug' parameter if you want memory info to be logged. Default: memdump=L_DBG (4)
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    memdump=2
</pre><p class='vspace'>NOTE that setting memlog (see below), will also set the memdump parameter - if you want different values for memlog and memdump, you need to first set memlog and then memdump.
</p>
<div class='vspace'></div><h4>memlog | mem_log</h4>
<p>Log level to print memory debug info. It has to be less than the value of 'debug' parameter if you want memory info to be logged. Default: memlog=L_DBG (4)
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    memlog=2
</pre><p class='vspace'>NOTE: by setting memlog parameter, the memdump will automatically be set to the same value (see memdump docs).
</p>
<div class='vspace'></div><h4>mcast_loopback</h4>
<p>It can be 'yes' or 'no'. If set to 'yes', multicast datagram are sent over loopback. Default value is 'no'.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    mcast_loopback=yes
</pre><div class='vspace'></div><h4>mcast_ttl</h4>
<p>Set the value for multicast ttl. Default value is OS specific (usually 1).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    mcast_ttl=32
</pre><div class='vspace'></div><h4>mhomed</h4>
<p>Set the server to try to locate outbound interface on multihomed host. By default is not (0) - it is rather time consuming.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    mhomed=1
</pre><div class='vspace'></div><h4>mpath</h4>
<p>Set the module search path.  This can be used to simplify the loadmodule parameter
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
    mpath="/usr/local/lib/opensips/modules"
    loadmodule "mysql.so"
    loadmodule "uri.so"
    loadmodule "uri_db.so"
    loadmodule "sl.so"
    loadmodule "tm.so"
    ...
</pre>
<div class='vspace'></div><h4>open_files_limit</h4>
<p>If set and bigger than the current open file limit, <strong>OpenSIPS</strong> will try
to increase its open file limit to this number. Note: <strong>OpenSIPS</strong> must be
started as root to be able to increase a limit past the hard limit
(which, for open files, is 1024 on most systems).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    open_files_limit=2048
</pre><div class='vspace'></div><h4>port</h4>
<p>The port the SIP server listens to. The default value for it is 5060.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    port=5080
</pre><div class='vspace'></div><h4>reply_to_via</h4>
<p>If it is set to 1, any local reply is sent to the address advertised in top most Via of the request. Default value is 0 (off).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    reply_to_via=0
</pre><div class='vspace'></div><h4>query_buffer_size</h4>
<p>If set to a value greater than 1, inserts to DB will not be flushed one by one. Rows to be inserted will be kept in memory until until they gather up to query_buffer_size rows, and only then they will be flushed to the database.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    query_buffer_size=5
</pre><div class='vspace'></div><h4>query_flush_time</h4>
<p>If query_buffer_size is set to a value greater than 1, a timer will trigger once every query_flush_time seconds,
ensuring that no row will be kept for too long in memory.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>     query_flush_time=10
</pre><div class='vspace'></div><h4>rev_dns</h4>
<p>This parameter controls if the SIP server should attempt to lookup its own IP address in DNS. If this parameter is set to yes and the IP address is not in DNS a warning is printed on syslog and a "received=" field is added to the via header. 
</p>
<p class='vspace'>Default is no.
</p>
<div class='vspace'></div><h4>server_header</h4>
<p>The body of Server header field generated by <strong>OpenSIPS</strong> when it sends a request as UAS.  It defaults to "OpenSIPS (&lt;version&gt; (&lt;arch&gt;/&lt;os&gt;))".  
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
server_header="Server: My Company SIP Proxy"
</pre>
<p class='vspace'>Please note that you have to add the header name "Server:", otherwise <strong>OpenSIPS</strong> will just write a header like:
</p>
<div class='vspace'></div><pre class='escaped'>
My Company SIP Proxy
</pre>
<div class='vspace'></div><h4>server_signature</h4>
<p>This parameter controls the "Server" header in any locally generated message. 
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>     server_signature=no
</pre><p class='vspace'>If it is enabled (default=yes) a header is generated as in the following example:
</p>
<div class='vspace'></div><pre>     Server: OpenSIPS (0.9.5 (i386/linux))
</pre><div class='vspace'></div><h4>sip_warning</h4>
<p>Can be 0 or 1. If set to 1 (default value is 0) a 'Warning' header is added to each reply generated by <strong>OpenSIPS</strong>.
The header contains several details that help troubleshooting using the network traffic dumps.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    sip_warning=0
</pre><div class='vspace'></div><h4>tcp_children</h4>
<p>Number of children processes to be created for reading from TCP connections. If no value is explicitly set, the same number of TCP children as UDP children (see "children" parameter) will be used.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_children=4
</pre><div class='vspace'></div><h4>tcp_accept_aliases</h4>
<div class='vspace'></div><h4>tcp_listen_backlog</h4>
<p>The backlog argument defines the maximum length to which the queue of pending connections for the TCP listeners may grow. If a connection  request arrives when the queue is full, the client may receive an error with an indication  of  ECONNREFUSED  or,  if  the underlying protocol supports retransmission, the request may be ignored so that a later reattempt at connection succeeds.
</p>
<p class='vspace'>Default configured value is 10.
</p>
<div class='vspace'></div><h4>tcp_send_timeout</h4>
<p>Time in seconds after a TCP connection will be closed if it is not available
for writing in this interval (and <strong>OpenSIPS</strong> wants to send something on it).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_send_timeout=3
</pre><div class='vspace'></div><h4>tcp_connect_timeout</h4>
<p>Time in seconds before an ongoing attempt to connect will be aborted.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_connect_timeout=5
</pre><div class='vspace'></div><h4>tcp_connection_lifetime!!!!</h4>
<p>Lifetime in seconds for TCP sessions. TCP sessions which are inactive for &gt;tcp_connection_lifetime will be closed by <strong>OpenSIPS</strong>. Default value is defined in tcp_conn.h: #define DEFAULT_TCP_CONNECTION_LIFETIME 120. Setting this value to 0 will close the TCP connection pretty quick ;-). You can also set the TCP lifetime to the expire value of the REGISTER by using the tcp_persistent_flag parameter of the registrar module.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_connection_lifetime=3600
</pre><div class='vspace'></div><h4>tcp_max_connections</h4>
<p>maximum number of tcp connections (if the number is exceeded no new tcp connections will be accepted). Default is defined in tcp_conn.h: #define DEFAULT_TCP_MAX_CONNECTIONS 2048
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_max_connections=4096
</pre><div class='vspace'></div><h4>tcp_poll_method</h4>
<p>poll method used (by default the best one for the current OS is selected). For available types see io_wait.c and poll_types.h: none, poll, epoll_lt, epoll_et, sigio_rt, select, kqueue, /dev/poll
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_poll_method=select
</pre><div class='vspace'></div><h4>tcp_no_new_conn_bflag</h4>
<p>A branch flag to be used as marker to instruct OpenSIPS not to attempt to open a new TCP connection when delivering a request, but only to reuse an existing one (if available). If no existing conn, a generic send error will be returned.
</p>
<p class='vspace'>This is intended to be used in NAT scenarios, where makes no sense to open a TCP connection towards a destination behind a NAT (like TCP connection created during registration was lost, so there is no way to contact the device until it re-REGISTER). Also this can be used to detect when a NATed registered user lost his TCP connection, so that opensips can disable his registration as useless.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>     tcp_no_new_conn_bflag = 6
     ....
     route{
         ....
         if( destination_behin_nat &amp;&amp; proto==TCP )
            setbflag(6);
         ....
         t_relay("0x02"); # no auto error reply
         $var(retcode) = $rc;
         if ($var(retcode)==-6) {
             #send error
             xlog("unable to send request to destination");
             send_reply("404","Not found");
             exit;
         } else if ($var(retcode)&lt;0) {
             sl_reply_error();
             exit;
         }
         ....
     }
</pre><div class='vspace'></div><h4>tcp_threshold</h4>
<p>A number representing the maximum number of microseconds sending of a TCP request is expected to last. Anything above the set number will trigger a warning message to the logging facility.
</p>
<p class='vspace'>Default value is 0 ( logging disabled ).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_threshold = 60000
</pre><div class='vspace'></div><h4>tcp_keepalive</h4>
<p>Enable / disable TCP keepalive
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_keepalive = 1
</pre><div class='vspace'></div><h4>tcp_keepcount</h4>
<p>Number of keepalives to send before closing the connection (Linux only)
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_keepcount = 5
</pre><div class='vspace'></div><h4>tcp_keepidle</h4>
<p>Amount of time before OpenSIPS will start to send keepalives if the connection is idle (Linux only)
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_keepidle = 30
</pre><div class='vspace'></div><h4>tcp_keepinterval</h4>
<p>Interval between keepalive probes, if the previous one failed (Linux only)
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    tcp_keepinterval = 10
</pre><div class='vspace'></div><h4>tls_ca_list</h4>
<div class='vspace'></div><h4>tls_certificate</h4>
<div class='vspace'></div><h4>tls_ciphers_list</h4>
<div class='vspace'></div><h4>tls_domain</h4>
<div class='vspace'></div><h4>tls_handshake_timeout</h4>
<div class='vspace'></div><h4>tls_log</h4>
<div class='vspace'></div><h4>tls_method</h4>
<div class='vspace'></div><h4>tls_port_no</h4>
<div class='vspace'></div><h4>tls_private_key</h4>
<div class='vspace'></div><h4>tls_require_certificate</h4>
<div class='vspace'></div><h4>tls_send_timeout</h4>
<div class='vspace'></div><h4>tls_verify</h4>
<div class='vspace'></div><h4>tos</h4>
<p>The TOS (Type Of Service) to be used for the sent IP packages (both TCP and UDP).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
    tos=IPTOS_LOWDELAY
    tos=0x10
    tos=IPTOS_RELIABILITY
</pre>
<div class='vspace'></div><h4>user uid</h4>
<p>The user id to run <strong>OpenSIPS</strong> (OpenSIPS will suid to it).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    user="opensips"
</pre><div class='vspace'></div><h4>user_agent_header</h4>
<p>The body of User-Agent header field generated by <strong>OpenSIPS</strong> when it sends a request as UAC.  It defaults to "OpenSIPS (&lt;version&gt; (&lt;arch&gt;/&lt;os&gt;))". 
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre class='escaped'>
user_agent_header="User-Agent: My Company SIP Proxy"
</pre>
<p class='vspace'>Please note that you have to include the header name "User-Agent:" as <strong>OpenSIPS</strong> does not add it and you will get an erroneous header like:
</p><pre class='escaped'>
My Company SIP Proxy
</pre>
<div class='vspace'></div><h4>wdir</h4>
<p>The working directory used by <strong>OpenSIPS</strong> at runtime. You might find it usefull when come to generating core files :)
</p>
<p class='vspace'>Example of usage:
</p><pre class='escaped'>
     wdir="/usr/local/opensips"
     or
     wdir=/usr/opensips_wd
</pre>
<p class='vspace'>(:toc-back:)
</p>
<div class='vspace'></div><hr />
<p>
</p><h3>Core Functions</h3>
<p>Functions exported by core that can be used in route blocks.
</p>
<div class='vspace'></div><h4>add_local_rport()</h4>
<p>Add 'rport' parameter to the Via header generated by server (see RFC3581 for its meaning). It affects only the current processed request.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    add_local_rport()
</pre><div class='vspace'></div><h4>append_branch()</h4>
<p>Similarly to t_fork_to, it extends destination set by a new entry. The difference is that current URI is taken as new entry. 
</p>
<p class='vspace'>Without parameter, the function copies the current URI into a new branch. Thus, leaving the main branch (the URI) for further manipulation.
</p>
<p class='vspace'>With a parameter, the function copies the URI in the parameter into a new branch. Thus, the current URI is not manipulated.
</p>
<p class='vspace'>Note that it's not possible to append a new branch in "on_failure_route" block if a 6XX response has been previously received (it would be against RFC 3261).
</p>
<p class='vspace'>Example of usage:
</p><pre class='escaped'>
    # if someone calls B, the call should be forwarded to C too.
    #
    if (method=="INVITE" &amp;&amp; uri=~"sip:B@xx.xxx.xx ")
    {
        # copy the current branch (branches[0]) into
        # a new branch (branches[1])
        append_branch();
        # all URI manipulation functions work on branches[0]
        # thus, URI manipulation does not touch the 
        # appended branch (branches[1])
        seturi("sip:C@domain");

        # now: branch 0 = C@domain
        #      branch 1 = B@xx.xx.xx.xx

        # and if you need a third destination ...

        # copy the current branch (branches[0]) into
        # a new branch (branches[2])
        append_branch();

        # all URI manipulation functions work on branches[0]
        # thus, URI manipulation does not touch the 
        # appended branch (branches[1-2])
        seturi("sip:D@domain");

        # now: branch 0 = D@domain
        #      branch 1 = B@xx.xx.xx.xx
        #      branch 2 = C@domain

        t_relay();
        exit;
    };

    # You could also use append_branch("sip:C@domain") which adds a branch with the new URI:


    if(method=="INVITE" &amp;&amp; uri=~"sip:B@xx.xxx.xx ") {
        # append a new branch with the second destination
        append_branch("sip:user@domain");
        # now: branch 0 = B@xx.xx.xx.xx
        # now: branch 1 = C@domain

        t_relay();
        exit;
}
</pre>
<div class='vspace'></div><h4>cache_store( storage_id, attribute_name, attribute_name [,timeout])</h4>
<p>This sets in a memory-cache-like-storage system a new value for an attribute. Both the attribute name and value may contain pseudo-variables. If the attribute does not already exist in the memcache, it will be inserted with the given value; if already present, its value will be replaced with the new one. The function may optionally take an extra parameter, a timeout (or lifetime) value for the attribute - after the lifetime is exceeded, the attribute is automatically purged from memcache.
</p>
<p class='vspace'>Function returns true is the new attribute was successfully inserted.
</p>
<div class='vspace'></div><pre class='escaped'>
cache_store("local","my_attr","$avp(i:55)",1200);

OR

modparam("cachedb_redis","cachedb_url","redis:cluster1://192.168.2.134:6379/")
...
cache_store("redis:cluster1","passwd_$tu","$var(x)");
</pre>
<p class='vspace'>More complex examples can be found in the <a class='wikilink' title='DocsTutKvinterface' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsTutKvinterface  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsTutKvinterface%27" tppabs="http://www.opensips.org/Resources/DocsTutKvinterface">Key-Value Interface Tutorial</a>.
</p>
<div class='vspace'></div><h4>cache_remove( storage_id, attribute_name)</h4>
<p>This removes an attribute from a memory-cache-like-storage system. The attribute name may contain pseudo-variables.
Function returns false only if the <em>storage_id</em> is invalid.
</p>
<div class='vspace'></div><pre class='escaped'>
cache_remove("local","my_attr");

OR

modparam("cachedb_redis","cachedb_url","redis:cluster1://192.168.2.134:6379/")
...
cache_remove("redis:cluster1","my_attr");
</pre>
<p class='vspace'>More complex examples can be found in the <a class='wikilink' title='DocsTutKvinterface' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsTutKvinterface  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsTutKvinterface%27" tppabs="http://www.opensips.org/Resources/DocsTutKvinterface">Key-Value Interface Tutorial</a>.
</p>
<div class='vspace'></div><h4>cache_fetch( storage_id, attribute_name, result_pvar)</h4>
<p>This function fetches from a memory-cache-like-storage system the value of an attribute. The attribute name may contain pseudo-variables. The result (if any) will be stored in the pseudo-variable specified by <strong>result_pvar</strong>. 
</p>
<p class='vspace'>Function returns true if the attribute was found and its value returned.
</p>
<div class='vspace'></div><pre class='escaped'>
cache_fetch("local","my_attr", $avp(i:11) );

OR

modparam("cachedb_redis","cachedb_url","redis:cluster1://192.168.2.134:6379/")
...
cache_fetch("redis:cluster1","my_attr",$avp(i:11));
</pre>
<p class='vspace'>More complex examples can be found in the <a class='wikilink' title='DocsTutKvinterface' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsTutKvinterface  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsTutKvinterface%27" tppabs="http://www.opensips.org/Resources/DocsTutKvinterface">Key-Value Interface Tutorial</a>.
</p>
<div class='vspace'></div><h4>cache_counter_fetch( storage_id, counter_attribute_name, result_avp)</h4>
<p>This function fetches from a memory-cache-like-storage system the value of a counter. The attribute name may contain pseudo-variables. The result (if any) will be stored in the pseudo-variable specified by <strong>result_pvar</strong>.
</p>
<p class='vspace'>Function returns true if the attribute was found and its value returned.
</p>
<div class='vspace'></div><pre class='escaped'>
cache_counter_fetch("local","my_counter", $avp(counter_val) );

OR

modparam("cachedb_redis","cachedb_url","redis:cluster1://192.168.2.134:6379/")
...
cache_fetch("redis:cluster1","my_counter",$avp(redis_counter_val));
</pre>
<div class='vspace'></div><h4>cache_add( storage_id, attribute_name,increment_value,expire)</h4>
<p>This increments an attribute in a memory-cache-like-storage system that supports such an operation. The attribute name may contain pseudo-variables. If the attribute does not exit, it will be created with the increment_value. If expire &gt; 0, the key will also expire in the specified number of seconds.
</p>
<p class='vspace'>Function returns false if increment fails.
</p>
<div class='vspace'></div><pre class='escaped'>

modparam("cachedb_redis","cachedb_url","redis:cluster1://192.168.2.134:6379/")
...
cache_add("redis:cluster1",5);
</pre>
<p class='vspace'>More complex examples can be found in the <a class='wikilink' title='DocsTutKvinterface' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsTutKvinterface  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsTutKvinterface%27" tppabs="http://www.opensips.org/Resources/DocsTutKvinterface">Key-Value Interface Tutorial</a>.
</p>
<div class='vspace'></div><h4>cache_sub( storage_id, attribute_name,increment_value,expire)</h4>
<p>This decrements an attribute in a memory-cache-like-storage system that supports such an operation. The attribute name may contain pseudo-variables. If expire &gt; 0, the key will also expire in the specified number of seconds.
</p>
<p class='vspace'>Function returns false if decrement fails.
</p>
<div class='vspace'></div><pre class='escaped'>

modparam("cachedb_redis","cachedb_url","redis:cluster1://192.168.2.134:6379/")
...
cache_sub("redis:cluster1",5);
</pre>
<p class='vspace'>More complex examples can be found in the <a class='wikilink' title='DocsTutKvinterface' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsTutKvinterface  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsTutKvinterface%27" tppabs="http://www.opensips.org/Resources/DocsTutKvinterface">Key-Value Interface Tutorial</a>.
</p>
<div class='vspace'></div><h4>cache_raw_query( storage_id, raw_query,result_avp)</h4>
<p>The function runs the provided raw query ( in the back-end dependent language ) and returns the results ( if any ) in the provided AVP. The result_avp can be missing, if the query returns no results.
</p>
<p class='vspace'>Function returns false if query fails.
</p>
<div class='vspace'></div><pre class='escaped'>
...
cache_raw_query("mongodb","{ \"op\" : \"count\",\"query\": { \"username\" : $rU} }","$avp(mongo_count_result)");
...
</pre>
<p class='vspace'>More complex examples can be found in the <a class='wikilink' title='DocsTutKvinterface' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsTutKvinterface  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsTutKvinterface%27" tppabs="http://www.opensips.org/Resources/DocsTutKvinterface">Key-Value Interface Tutorial</a>.
</p>
<div class='vspace'></div><h4>break()</h4>
<p>Since v0.10.0-dev3, 'break' can no longer be used to stop the execution of a route. The only place to use is to end a 'case' block in a 'switch' statement. 'return' must be now used instead of old 'break'.
</p>
<p class='vspace'>'return' and 'break' have now a similar meaning as in c/shell.
</p>
<div class='vspace'></div><h4>construct_uri(proto,user,domain,port,extra,result_avp)</h4>
<p>The function builds a valid sip uri based on the arguments it receives. The result (if any) will be stored in the result_avp AVP variable.
The function accepts plain text arguments, as well as $var and $avp variables. If you want to omit a part of the sip uri, just set the respective parameter to a blank string.
</p>
<p class='vspace'>Example usage:
</p><pre class='escaped'>
construct_uri("$var(proto)", "vlad", "$var(domain)", "", "$var(params)",$avp(s:newuri));
xlog("Constructed URI is &lt;$avp(s:newuri)&gt; \n");
</pre>
<div class='vspace'></div><h4>drop()</h4>
<p>Stop the execution of the configuration script and alter the implicit action which is done afterwards.
</p>
<p class='vspace'>If the function is called in a 'branch_route' then the branch is discarded (implicit action for 'branch_route' is to forward the request).
</p>
<p class='vspace'>If the function is called in a 'onreply_route' then any provisional reply is discarded (implicit action for 'onreply_route' is to send the reply upstream according to Via header).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    onreply_route {
        if(status=="183") {
            drop();
        }
    }
</pre><div class='vspace'></div><h4>exit()</h4>
<p>Stop the execution of the configuration script -- it has the same behaviour as return(0). It does not affect the implicit action to be taken after script execution. 
</p>
<div class='vspace'></div><pre>  route {
    if (route(2)) {
      xlog("L_NOTICE","method $rm is INVITE\n");
    } else {
      xlog("L_NOTICE","method is $rm\n");
    };
  }

  route[2] {
    if (is_method("INVITE")) {
      return(1);
    } else if (is_method("REGISTER")) {
      return(-1);
    } else if (is_method("MESSAGE")) {
      sl_send_reply("403","IM not allowed");
      exit;
    };
  }
</pre><div class='vspace'></div><h4>force_rport()</h4>
<p>Force_rport() adds the rport parameter to the first Via header. Thus, <strong>OpenSIPS</strong> will add the received IP port to the top most via header in the SIP message, even if the client does not indicate support for rport. This enables subsequent SIP messages to return to the proper port later on in a SIP transaction.
</p>
<p class='vspace'>The rport parameter is defined in RFC 3581.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    force_rport();
</pre><div class='vspace'></div><h4>force_send_socket([proto:]address[:port])</h4>
<p>Force <strong>OpenSIPS</strong> to send the message from the specified socket (it _must_ be one of the sockets <strong>OpenSIPS</strong> listens on). If the protocol doesn't match (e.g. UDP message "forced" to a TCP socket) the closest socket of the same protocol is used.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    force_send_socket(10.10.10.10:5060);
</pre><div class='vspace'></div><h4>force_tcp_alias()</h4>
<p>force_tcp_alias(port)      
</p>
<p class='vspace'>adds a tcp port alias for the current connection (if tcp).
Usefull if you want to send all the trafic to port_alias through
the same connection this request came from [it could help 
for firewall or nat traversal].
With no parameters adds the port from the message via as the alias.
When the "aliased" connection is closed (e.g. it's idle for too
much time), all the port aliases are removed.
</p>
<div class='vspace'></div><h4>forward(destination)</h4>
<p>Forward the SIP request to the given destination in stateless mode. This has the format of [proto:]host[:port]. Host can be an IP or hostname; supported protocols are UDP, TCP and TLS. (For TLS, you need to compile the TLS support into core).
If proto or port are not specified, NAPTR and SRV lookups will be used to determine them (if possible).
</p>
<p class='vspace'>If destination parameter is missing, the forward will be done based on RURI.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    forward("10.0.0.10:5060");
    #or
    forward();
</pre><div class='vspace'></div><h4>get_timestamp(sec_avp,usec_avp)</h4>
<p>Returns the current timestamp, seconds and microseconds of the current second, from a single system call.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>     get_timestamp($avp(sec),$avp(usec));
</pre><div class='vspace'></div><h4>isdsturiset()</h4>
<p>Test if the dst_uri field (next hop address) is set.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(isdsturiset()) {
        log("dst_uri is set\n");
    };
</pre><div class='vspace'></div><h4>isflagset(int)</h4>
<p>Test if a flag is set for current processed message (if the flag value is 1). The value of the parameter can be in range of 0..31.
</p>
<p class='vspace'>For more see http://www.voice-system.ro/docs/ser-flags/ or <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(isflagset(3)) {
        log("flag 3 is set\n");
    };
</pre><div class='vspace'></div><h4>isbflagset([branch_idx,] flag_idx)</h4>
<p>Test if a flag is set for a specific branch (if the flag value is 1). The value of the "flag_idx" parameter can be in range of 0..31. "branch_idx" identify the branch for which the flags are tested - it must be a positiv number. Branch index 0 refers to the RURI branch. If this parameter is missing, 0 branch index is used as default.
</p>
<p class='vspace'>For more about script flags, see <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(isbflagset(1,3)) {
        log("flag 3 is set in branch 1\n");
    };
</pre><div class='vspace'></div><h4>issflagset(flag_idx)</h4>
<p>Test if a script flag is set (if the flag value is 1). The value of the "flag_idx" parameter can be in range of 0..31.
</p>
<p class='vspace'>For more about script flags, see <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    if(issflagset(2)) {
        log("script flag 2 is set\n");
    };
</pre><div class='vspace'></div><h4>log([level,] string)</h4>
<p>Write text message to standard error terminal or syslog. You can specify the log level as first parameter.
</p>
<p class='vspace'>For more see: http://www.voice-system.ro/docs/ser-syslog/
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    log("just some text message\n");
</pre><div class='vspace'></div><h4>next_branches()</h4>
<p>Adds to the request a new destination set that includes all highest priority class contacts ('q' value based) from the serialized branches (see serialize_branches()). If called from a route block, it rewrites the request uri with first contact and adds the remaining contacts as parallel branches.  If called from failure route block, adds all contacts as parallel branches.  All used
contacts are removes the serialized branches.
</p>
<p class='vspace'>Returns true if at least one contact was added for the request's destination set - returns 1 if other branches are still pending and return 2 if no other branches are left for future processing - shortly, if 2: this is the last branch, if 1: other will follow. False is return is nothing was done (no more serialized branches).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    next_branches();
</pre><div class='vspace'></div><h4>prefix(string)</h4>
<p>Add the string parameter in front of username in R-URI.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    prefix("00");
</pre><div class='vspace'></div><h4>pv_printf(pv, string)</h4>
<p>Prints the formatted 'string' in the AVP 'pv'. The 'string' parameter can include any pseudo-variable defined in <strong>OpenSIPS</strong>. The 'pv' can be any writable pseudo-variable -- e.g.,: AVPs, VARs, $ru, $rU, $rd, $du, $br, $fs.
</p>
<p class='vspace'>It was extended from the avp_printf(...) function exported in previous versions by the avpops module. Starting with 1.3.0, avp_printf(...) is just an alias to pv_printf(...).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    pv_printf("$var(x)", "r-uri: $ru");
    pv_printf("$avp(i:3)", "from uri: $fu");
</pre><div class='vspace'></div><h4>raise_event(string[, avp[, avp]])</h4>
<p>Raises from script an event through OpenSIPS Event Interface. The first parameter is a string that indicates the event which should be raised. The next two parameters should be AVPs and they are optional. If only one is present, it should contain the values attached to the event. If both of them are specified, the first one should contain the names of the attributes, and the last one the values attached to the event.
</p>
<p class='vspace'>This function triggers an event for all subscribers for that event, regardless the transport module used.
</p>
<p class='vspace'>Example of usage (raises an event with no attributes):
</p>
<div class='vspace'></div><pre class='escaped'>
raise_event("E_NO_PARAM");
</pre>
<p class='vspace'>Example of usage (raises an event with two attributes):
</p>
<div class='vspace'></div><pre class='escaped'>
$avp(attr-name) = "param1";
$avp(attr-name) = "param2";
$avp(attr-val) = 1;
$avp(attr-val) = "2"
raise_event("E_TWO_PARAMS", $avp(attr-name), $avp(attr-val));
</pre>
<div class='vspace'></div><h4>remove_branch(pv|int)</h4>
<p>Removes a given branch.  The branch to be removed can be given via an integer or a pseudovariable.
Once a branch is remove, all the subsequent branches are shifted (i.e. if branch n is removed, then the old n+1 branch becomes the new n branch, the old n+2 branch becomes n+1 and so on).
</p>
<p class='vspace'>Example of usage (remove all branches with URI hostname "127.0.0.1"):
</p>
<div class='vspace'></div><pre class='escaped'>
$var(i) = 0;
while ($(branch(uri)[$var(i)]) != null) {
   xlog("L_INFO","$$(branch(uri)[$var(i)])=[$(branch(uri)[$var(i)])]\n");
   if ($(branch(uri)[$var(i)]{uri.host}) == "127.0.0.1") {
       xlog("L_INFO","removing branch $var(i) with URI=[$(branch(uri)[$var(i)])]\n");
       remove_branch($var(i));
   } else {
       $var(i) = $var(i) + 1;
   }
}
</pre>
<div class='vspace'></div><h4>return(int)</h4>
<p>The return() function allows you to return any integer value from a called route() block.
You can test the value returned by a route using "$retcode" variable.
</p>
<p class='vspace'>return(0) is same as "exit()";
</p>
<p class='vspace'>In bool expressions:
</p>
<div class='vspace'></div><pre>  * Negative and ZERO is FALSE
  * Positive is TRUE
</pre><p class='vspace'>Example usage: 
</p>
<div class='vspace'></div><pre class='escaped'>
route {
  if (route(2)) {
    xlog("L_NOTICE","method $rm is INVITE\n");
  } else {
    xlog("L_NOTICE","method $rm is REGISTER\n");
  };
}
</pre>
<pre class='escaped'>
route[2] {
  if (is_method("INVITE")) {
    return(1);
  } else if (is_method("REGISTER")) {
    return(-1);
  } else {
    return(0);
  };
}
</pre>
<div class='vspace'></div><h4>resetdsturi()</h4>
<p>Set the value of dst_uri filed to NULL. dst_uri field is usually set after loose_route() or lookup("location") if the contact address is behind a NAT.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    resetdsturi();
</pre><div class='vspace'></div><h4>resetflag(int)</h4>
<p>Reset a flag for current processed message (set the value to 0). The value of the parameter can be in range of 0..31.
</p>
<p class='vspace'>For more see http://www.voice-system.ro/docs/ser-flags/ or <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    resetflag(3);
</pre><div class='vspace'></div><h4>resetbflag([branch_idx,] flag_idx)</h4>
<p>Reset a flag for a specific branch (set flag to value 0). The value of the "flag_idx" parameter can be in range of 0..31. "branch_idx" identify the branch for which the flag is reset - it must be a positiv number. Branch index 0 refers to the RURI branch. If this parameter is missing, 0 branch index is used as default.
</p>
<p class='vspace'>For more about script flags, see <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
<p class='vspace'>Example of usage:
</p><pre class='escaped'>
    resetbflag(1,3);
    # or
    resetbflag(3); # same with resetbflag(0,3)
</pre>
<div class='vspace'></div><h4>resetsflag(flag_idx)</h4>
<p>Reset a script flag (set flag to value 0). The value of the "flag_idx" parameter can be in range of 0..31.
</p>
<p class='vspace'>For more about script flags, see <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    resetsflag(2);
</pre><div class='vspace'></div><h4>revert_uri()</h4>
<p>Set the R-URI to the value of the R-URI as it was when the request was received by server (undo all changes of R-URI).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    revert_uri();
</pre><div class='vspace'></div><h4>rewritehost() / sethost()</h4>
<p>Rewrite the domain part of the R-URI with the value of function's parameter. Other parts of the R-URI like username, port and URI parameters remain unchanged.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    rewritehost("1.2.3.4");
</pre><div class='vspace'></div><h4>rewritehostport() / sethostport()</h4>
<p>Rewrite the domain part and port of the R-URI with the value of function's parameter. Other parts of the R-URI like username and URI parameters remain unchanged.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    rewritehostport("1.2.3.4:5080");
</pre><div class='vspace'></div><h4>rewriteuser(string) / setuser(string)</h4>
<p>Rewrite the user part of the R-URI with the value of function's parameter.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    rewriteuser("newuser");
</pre><div class='vspace'></div><h4>rewriteuserpass() / setuserpass()</h4>
<p>Rewrite the password part of the R-URI with the value of function's parameter.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    rewriteuserpass("my_secret_passwd");
</pre><div class='vspace'></div><h4>rewriteport() / setport()</h4>
<p>Rewrites/sets the port part of the R-URI with the value of function's parameter.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    rewriteport("5070");
</pre><div class='vspace'></div><h4>rewriteuri(str) / seturi(str)</h4>
<p>Rewrite the request URI.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    rewriteuri("sip:test@opensips.org");
</pre><div class='vspace'></div><h4>route(name [, param1 [, param2 [, ...] ] ] )</h4>
<p>This function is used to run the code from the 'name' route, declared in the script. Optionally, it can receive several parameters (up to 7), that can be later retrieved using the '$param(idx)' pseudo-variable.
</p>
<p class='vspace'>The name of the route is an identifier format, whereas the parameters can be either int, string, or a pseudo-variable.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>   route(HANDLE_SEQUENTIALS);
   route(HANDLE_SEQUENTIALS, 1, "param", $var(param));
</pre><div class='vspace'></div><h4>script_trace( log_level, pv_format_string[, info_string])</h4>
<p>This function start the script tracing - this helps to better understand the flow of execution in the OpenSIPS script, like what function is executed, what line it is, etc. Moreover, you can also trace the values of pseudo-variables, as script execution progresses.
</p>
<p class='vspace'>The blocks of the script where script tracing is enabled will print a line for each individual action that is done (e.g. assignments, conditional tests, module functions, core functions, etc.). Multiple pseudo-variables can be monitored by specifying a <strong>pv_format_string</strong> (e.g. "$ru---$avp(var1)").
</p>
<p class='vspace'>The logs produced by multiple/different traced regions of your script can be differentiated (tagged) by specifying an additional plain string - <strong>info_string</strong> - as the 3rd parameter.
</p>
<p class='vspace'>To disable script tracing, just do script_trace(). Otherwise, the tracing will automatically stop at the end the end of the top route.
</p>
<p class='vspace'>Example of usage:
</p><pre>    script_trace( 1, "$rm from $si, ruri=$ru", "me");
</pre><p class='vspace'>will produce:
</p><pre class='escaped'>
    [line 578][me][module consume_credentials] -&gt; (INVITE from 127.0.0.1 , ruri=sip:111111@opensips.org)
    [line 581][me][core setsflag] -&gt; (INVITE from 127.0.0.1 , ruri=sip:111111@opensips.org)
    [line 583][me][assign equal] -&gt; (INVITE from 127.0.0.1 , ruri=sip:111111@opensips.org)
    [line 592][me][core if] -&gt; (INVITE from 127.0.0.1 , ruri=sip:tester@opensips.org)
    [line 585][me][module is_avp_set] -&gt; (INVITE from 127.0.0.1 , ruri=sip:tester@opensips.org)
    [line 589][me][core if] -&gt; (INVITE from 127.0.0.1 , ruri=sip:tester@opensips.org)
    [line 586][me][module is_method] -&gt; (INVITE from 127.0.0.1 , ruri=sip:tester@opensips.org)
    [line 587][me][module trace_dialog] -&gt; (INVITE 127.0.0.1 , ruri=sip:tester@opensips.org)
    [line 590][me][core setflag] -&gt; (INVITE from 127.0.0.1 , ruri=sip:tester@opensips.org) 
</pre>
<div class='vspace'></div><h4>send(destination [, headers])</h4>
<p>Send the original SIP message to a specific destination in stateless mode. This is definied as [proto:]host[:port]. No changes are applied to received message, no Via header is added, unless headers parameter is specified. Host can be an IP or hostname; supported protocols are UDP, TCP and TLS. (For TLS, you need to compile the TLS support into core). If proto or port are not specified, NAPTR and SRV lookups will be used to determine them (if possible). The headers parameter should end in '\r\n' and can accept both plain text and pseudo variables.
</p>
<p class='vspace'>Parameter is mandatory and has string format.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>   send("udp:10.10.10.10:5070");
   send("udp:10.10.10.10:5070", "Server: opensips\r\n");
</pre><div class='vspace'></div><h4>serialize_branches(clear)</h4>
<p>Takes all the branches added for parallel forking (with append_branch() and including the current RURI) and prepare them for serial forking. The ordering is done in increasing "q" order. The serialized branches are internally stored in AVPs - you will be able to fetch and use via the "next_branches()" function.<br />NOTE that (according to RFC3261), the branches with the same "q" value will still be parallel forked during a certain step in the serial forking (it will result a combination of serial with parallel forking).<br />NOTE that this function is not changing RURI in the messages - it is just converting from parallel to serial branches (preparing branches).
</p>
<p class='vspace'>If "clear" is set to non-zero, all previous results of another "serialize_branches" (serialized branches which were not yet used) will be deleted before setting the new serialized branches.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>   serialize_branches(1);
</pre><div class='vspace'></div><h4>set_advertised_address(ip|string)</h4>
<p>Same as 'advertised_address' but it affects only the current message. It has priority if 'advertised_address' is also set.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    set_advertised_address("opensips.org");
</pre><div class='vspace'></div><h4>set_advertised_port(int)</h4>
<p>Same as 'advertised_port' but it affects only the current message. It has priority over 'advertised_port'.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    set_advertised_port(5080);
</pre><div class='vspace'></div><h4>setdebug([level])</h4>
<p>Changes the debug level of the current process from script. If called without the parameter then the debug level of the current process will be reset to the global level. If the debug level of the current process is changed then changing the global debug level (using MI function) does not affect it, so be careful and make sure to reset the process debug level when you are done. This function is very helpful if you are tracing and debugging only a specific piece of code. 
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    debug= -1 # errors only
    .....
    {
      ......
      setdebug(4); # set the debug level of the current process to DBG
      uac_replace_from(....);
      setdebug(); # reset the debug level of the current process to the global level
      .......
    }
</pre><div class='vspace'></div><h4>setdsturi(string)</h4>
<p>Explicitely set the dst_uri field to the value of the paramater. The parameter has to be a valid SIP URI.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    setdsturi("sip:10.10.10.10:5090");
</pre><div class='vspace'></div><h4>setflag(int)</h4>
<p>Set a flag for current processed message. The value of the parameter can be in range of 0..31. The flags are used to mark the message for special processing (e.g., accounting) or to keep some state (e.g., message authenticated).
</p>
<p class='vspace'>For more see http://www.voice-system.ro/docs/ser-flags/ .
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    setflag(3);
</pre><div class='vspace'></div><h4>setbflag([branch_idx,] flag_idx)</h4>
<p>Set a flag for a specific branch (set flag to value 1). The value of the "flag_idx" parameter can be in range of 0..31. "branch_idx" identify the branch for which the flag is set - it must be a positiv number. Branch index 0 refers to the RURI branch. If this parameter is missing, 0 branch index is used as default.
</p>
<p class='vspace'>For more about script flags, see <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    setbflag(1,3);
    # or
    setbflag(3); # same with setbflag(0,3)
</pre><div class='vspace'></div><h4>setsflag(flag_idx)</h4>
<p>Set a script flag (set flag to value 0). The value of the "flag_idx" parameter can be in range of 0..31.
</p>
<p class='vspace'>For more about script flags, see <a class='wikilink' title='DocsCoreFlags' href="javascript:if(confirm(%27http://www.opensips.org/Resources/DocsCoreFlags  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Resources/DocsCoreFlags%27" tppabs="http://www.opensips.org/Resources/DocsCoreFlags">Flags Documentation</a>.
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    setsflag(2);
</pre><div class='vspace'></div><h4>strip(int)</h4>
<p>Strip the first N-th characters from username of R-URI (N is the value of the parameter).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>    strip(3);
</pre><div class='vspace'></div><h4>strip_tail(int)</h4>
<p>Strip the last N-th characters from username of R-URI (N is the value of the parameter).
</p>
<p class='vspace'>Example of usage:
</p>
<div class='vspace'></div><pre>  strip_tail(3);
</pre><div class='vspace'></div><h4>subscribe_event(string, string [, int])</h4>
<p>Subscribes an external application for a certain event for the OpenSIPS Event Interface. This is used for transport protocols that cannot subscribe by themselves (example event_rabbitmq). This function should be called only once in the startup_route if the subscription doesn't expire, or in a timer route if the subscription should be renewed once in a while.
</p>
<p class='vspace'>The first parameter is a string represents the name of the event an external application should be notified for. The second parameter is a string that specifies the socket of the external application. Note that this socket should follow the syntax of an existing loaded Event Interface transport module (example: event_datagram, event_rabbitmq). The last parameter is optional and specifies the expire time of the subscription. If it is not present, then the subscription does not expire at all.
</p>
<p class='vspace'>Example of usage (subscriber that never expires, notified by the RabbitMQ module):
</p>
<div class='vspace'></div><pre class='escaped'>
startup_route {
    subscribe_event("E_PIKE_BLOCKED", "rabbitmq:127.0.0.1/pike");
}
</pre>
<p class='vspace'>Example of usage (subscriber expires every 5 seconds, notified through UDP):
</p>
<div class='vspace'></div><pre class='escaped'>
timer_route[event_subscribe, 4] {
    subscribe_event("E_PIKE_BLOCKED", "udp:127.0.0.1:5051", 5);
}
</pre>
<div class='vspace'></div><h4>use_blacklist(string)</h4>
<p>Enables the DNS blacklist name received as parameter. Its primary purposes will be to prevent sending requests to critical IPs (like GWs) due DNS or to avoid sending to destinations that are known to be unavailable (temporary or permanent).
</p><pre class='escaped'>
    use_blacklist("pstn-gws");
</pre>
</div></div>
      <div class='diffrestore'><a href="javascript:if(confirm(%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1366821530:1366821530:&preview=y  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1366821530:1366821530:&preview=y%27" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit&restore=diff:1366821530:1366821530:&preview=y">Restore</a></div></div></div>
  
<!--PageRightFmt--><!--/PageRightFmt--></td>
</tr></table>
<!--PageFooterFmt-->
  <div id='wikifoot'>
  <hr class="bottomline" /></td>
    <div class='footnav'>
	
      <a rel="nofollow" href="Script-CoreFunctions-1-9-action=edit.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=edit">Edit</a> |
      <a rel="nofollow" href="Script-CoreFunctions-1-9-action=diff.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=diff">History</a> |
      <a rel="nofollow" href="Script-CoreFunctions-1-9-action=print.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-9?action=print" target='_blank'>Print</a> |
      <a href="RecentChanges.htm" tppabs="http://www.opensips.org/Documentation/RecentChanges">Recent Changes</a> |
      <a href="javascript:if(confirm(%27http://www.opensips.org/Site/Search  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Site/Search%27" tppabs="http://www.opensips.org/Site/Search">Search</a></div>
    <div class='lastmod'>Page last modified on September 12, 2014, at 03:03 PM</div></div>
<!--HTMLFooter-->
</div>
</body>
</html>
