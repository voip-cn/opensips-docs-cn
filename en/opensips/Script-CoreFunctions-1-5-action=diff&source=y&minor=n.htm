<!DOCTYPE html 
    PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
  <title>openSIPS | Documentation / Core Functions - ver 1.5 | History</title>
  <meta http-equiv='Content-Style-Type' content='text/css' />
  <link rel='stylesheet' href="opensips.css" tppabs="http://www.opensips.org/pub/skins/opensips/opensips.css" type='text/css' />
  <!--HTMLHeader--><style type='text/css'><!--
  ul, ol, pre, dl, p { margin-top:0px; margin-bottom:0px; }
  code.escaped { white-space: nowrap; }
  .indent { margin-left:40px; }
  .outdent { margin-left:40px; text-indent:-40px; }
  a.createlinktext { text-decoration:none; border-bottom:1px dotted gray; }
  a.createlink { text-decoration:none; position:relative; top:-0.5em;
    font-weight:bold; font-size:smaller; border-bottom:none; }
  img { border:0px; }
  
span.anchor {
	float: left;
	font-size: 10px;
	margin-left: -10px;
	width: 10px;
    position:relative; top:-0.1em;
	text-align: center;
}
span.anchor a { text-decoration: none; }
span.anchor a:hover { text-decoration: underline; }
ol.toc { text-indent:-20px; list-style: none; }
ol.toc ol.toc { text-indent:-40px; }
div.tocfloat { font-size: smaller; margin-bottom: 10px;
    border-top: 1px dotted #555555; border-bottom: 1px dotted #555555;
    padding-top: 5px; padding-bottom: 5px; 
    width: 38%; float: right; margin-left: 10px; clear: right;
    margin-right:-13px; padding-right: 13px; padding-left: 13px;
    background-color: #eeeeee; }
div.toc { font-size: smaller; 
    padding: 4px; border: 1px dotted #cccccc;
    background: #f7f7f7;
    margin-bottom: 10px; }
  table.markup { border:2px dotted #ccf; width:90%; }
  td.markup1, td.markup2 { padding-left:10px; padding-right:10px; }
  table.vert td.markup1 { border-bottom:1px solid #ccf; }
  table.horiz td.markup1 { width:23em; border-right:1px solid #ccf; }
  table.markup caption { text-align:left; }
  div.faq p, div.faq pre { margin-left:2em; }
  div.faq p.question { margin:1em 0 0.75em 0; font-weight:bold; }
  div.faqtoc div.faq * { display:none; }
  div.faqtoc div.faq p.question 
    { display:block; font-weight:normal; margin:0.5em 0 0.5em 20px; line-height:normal; }
  div.faqtoc div.faq p.question * { display:inline; }
  .editconflict { color:green; 
  font-style:italic; margin-top:1.33em; margin-bottom:1.33em; }

  .diffbox { width:570px; border-left:1px #999999 solid; margin-top:1.33em; }
  .diffauthor { font-weight:bold; }
  .diffchangesum { font-weight:bold; }
  .difftime { font-family:verdana,sans-serif; font-size:66%; 
    background-color:#dddddd; }
  .difftype { clear:both; font-family:verdana,sans-serif; 
    font-size:66%; font-weight:bold; }
  .diffadd { border-left:5px #99ff99 solid; padding-left:5px; }
  .diffdel { border-left:5px #ffff99 solid; padding-left:5px; }
  .diffrestore { clear:both; font-family:verdana,sans-serif; 
    font-size:66%; margin:1.5em 0px; }
  .diffmarkup { font-family:monospace; }  
    .frame 
      { border:1px solid #cccccc; padding:4px; background-color:#f9f9f9; }
    .lfloat { float:left; margin-right:0.5em; }
    .rfloat { float:right; margin-left:0.5em; }
a.varlink { text-decoration:none; }

--></style><script type="text/javascript">
function toggle(obj) {
    var elstyle = document.getElementById(obj).style;
    var text    = document.getElementById(obj + "tog");
    if (elstyle.display == 'none') {
        elstyle.display = 'block';
        text.innerHTML = "hide";
    } else {
        elstyle.display = 'none';
        text.innerHTML = "show";
    }
}
</script>
  <link href="commentboxplus.css" tppabs="http://www.opensips.org/pub/commentboxplus/commentboxplus.css" rel='stylesheet' type='text/css' />
  <link rel='stylesheet' href="wsplus.css" tppabs="http://www.opensips.org/pub/wsplus/wsplus.css" 
    type='text/css' />
  <!--[if IE]><style type='text/css' media='screen'>
    body { behavior:url("csshover.htc")/*tpa=http://www.opensips.org/pub/wsplus/csshover.htc*/; }
    .rollover * { visibility: visible; }
  </style><![endif]-->
  <meta name='robots' content='noindex,nofollow' />

  <link rel="icon" type="image/png" href="http://opensips.org/favicon.png">
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','analytics.js'/*tpa=http://www.google-analytics.com/analytics.js*/,'ga');

  ga('create', 'UA-47615177-1', 'http://www.opensips.org/Documentation/opensips.org');
  ga('send', 'pageview');

	function resizeIframe(obj) {
	    obj.style.height = obj.contentWindow.document.body.scrollHeight + 'px';
		  }

  </script>

</head>
<body>
<div id="main">
<!--PageHeaderFmt-->
  <div id='wikilogo'>
  <img class="motto" src="motto.jpg" tppabs="http://www.opensips.org/pub/skins/opensips/images/motto.jpg" width="328" height="40" alt="The new breed of communication engine.">
  <a href="javascript:if(confirm(%27http://www.opensips.org/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/%27" tppabs="http://www.opensips.org/"><img class="logo" src="logo2.jpg" tppabs="http://www.opensips.org/pub/skins/opensips/images/logo2.jpg"
    alt='openSIPS' border='0' /></a>
 </div>
 <div id='wikihead'>
 <table border=0>
  <tr valign=top><td width=250>
   
  </td></tr>
  <tr><td width=250>
   <form action="http://www.opensips.org/">
   
    <input type='hidden' name='n' value='Documentation.Script-CoreFunctions-1-5' />
    <input type='hidden' name='action' value='search' />

    <input type='text' name='q' id='formsubmit' value='' class='inputbox searchbox' />
	<input type='submit' id='formbutton' class='inputbutton searchbutton' value=' ' /></form>
  </td></tr>
  </table>
 </div>

<!--/PageHeaderFmt-->
<div id="osTopNav" >
	<div id="osTopNavLeft">
	</div>

	<div id="osTopNavRight">
	</div>

	<ul id="osTopNavList">
		<li>
			<a href="javascript:if(confirm(%27http://www.opensips.org/About/About  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/About/About%27" tppabs="http://www.opensips.org/About/About" title="About">About</a>
		</li>
		<li>
			<a href="javascript:if(confirm(%27http://www.opensips.org/Downloads/Downloads  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Downloads/Downloads%27" tppabs="http://www.opensips.org/Downloads/Downloads" title="Download">Downloads</a>
		</li>
		<li>
			<a href="Manuals.htm" tppabs="http://www.opensips.org/Documentation/Manuals" title="Documentation">Documentation</a>
		</li>
		<li>
			<a href="javascript:if(confirm(%27http://www.opensips.org/Community/Foundation-Main  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Community/Foundation-Main%27" tppabs="http://www.opensips.org/Community/Foundation-Main" title="Community">Community</a>
		</li>
		<li>
			<a href="javascript:if(confirm(%27http://www.opensips.org/Development/Development  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Development/Development%27" tppabs="http://www.opensips.org/Development/Development" title="Development">Development</a>
		</li>
		<li>
			<a href="javascript:if(confirm(%27http://www.opensips.org/Support/Contact  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Support/Contact%27" tppabs="http://www.opensips.org/Support/Contact" title="Support">Support</a>
		</li>
	</ul>
</div>
<!--PageMenuFmt-->
<!--/PageMenuFmt-->
  <table width='100%' align="center" cellpadding='0' cellspacing='0' id='wikimid'>
    <tr>
<!--PageLeftFmt-->
      <td valign='top' bgcolor="#E2F8DA" id='wikileft'>
        <p class='sidehead'> <span  style='color: #185662;'> Documentation</span>
</p><ul><li><a class='wikilink' title='Manuals' href="Manuals.htm" tppabs="http://www.opensips.org/Documentation/Manuals">Manuals</a>
</li><li><a class='wikilink' title='Tutorials' href="Tutorials.htm" tppabs="http://www.opensips.org/Documentation/Tutorials">Advanced Tutorials</a>
</li><li><a class='wikilink' title='TipsFAQ' href="TipsFAQ.htm" tppabs="http://www.opensips.org/Documentation/TipsFAQ">Tips &amp; FAQ</a>
</li><li><a class='wikilink' title='Migration' href="Migration.htm" tppabs="http://www.opensips.org/Documentation/Migration">Version Migration</a>
</li><li><a class='wikilink' title='Webinars' href="Webinars.htm" tppabs="http://www.opensips.org/Documentation/Webinars">OpenSIPS Webinars</a>
</li><li><a class='wikilink' title='Troubleshooting' href="Troubleshooting.htm" tppabs="http://www.opensips.org/Documentation/Troubleshooting">Troubleshooting</a>
</li><li><a class='wikilink' title='Tools' href="Tools.htm" tppabs="http://www.opensips.org/Documentation/Tools">OpenSIPS Tools</a>
</li><li><a class='wikilink' title='Development-Tutorials' href="Development-Tutorials.htm" tppabs="http://www.opensips.org/Documentation/Development-Tutorials">Devel Tutorial</a>
</li></ul><div class='vspace'></div>
</td>
<!--/PageLeftFmt-->
      <td id='wikibody' valign='top'>
<!--PageTitleFmt-->
        
<!--PageText-->
<div id='wikitext'>
<h2 class='wikiaction'>Documentation.Script-CoreFunctions-1-5 History</h2>
  <p><a href="Script-CoreFunctions-1-5-action=diff&source=y&minor=y.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=diff&source=y&minor=y">Show minor edits</a> - <a href="Script-CoreFunctions-1-5-action=diff&source=n&minor=n.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=diff&source=n&minor=n">Show changes to output</a></p>
  <div id='wikidiff'>
      <div class='diffbox'><div class='difftime'>August 05, 2013, at 03:09 PM 
        by <span class='diffauthor' title='109.99.235.212'>109.99.235.212</span> - </div>
        <div class='difftype'>Changed lines 4-5 from:</div>
        <div class='diffdel'><div class='diffmarkup'>[- Page for other versions: [[Script-CoreFunctions|devel]] [[Script-CoreFunctions-1-9|1.9]] [[Script-CoreFunctions-1-8|1.8]] old versions: [[Script-CoreFunctions-1-7|1.7]] [[Script-CoreFunctions-1-6|1.6]] 1.5 [[Script-CoreFunctions-1-4|1.4]] -]<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>(:allVersions Script-CoreFunctions 1.5:)<br /></div></div>
        <div class='difftype'>Changed line 560 from:</div>
        <div class='diffdel'><div class='diffmarkup'>  strip_tail(3);</div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>  strip_tail(3);</div></div></div>
      <div class='diffrestore'><a href="javascript:if(confirm(%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=edit&restore=diff:1375708196:1369779959:&preview=y  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=edit&restore=diff:1375708196:1369779959:&preview=y%27" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=edit&restore=diff:1375708196:1369779959:&preview=y">Restore</a></div>
      <div class='diffbox'><div class='difftime'>May 29, 2013, at 12:25 AM 
        by <span class='diffauthor' title='92.80.35.155'>92.80.35.155</span> - </div>
        <div class='difftype'>Added line 2:</div>
        <div class='diffadd'><div class='diffmarkup'>(:title Core Functions - ver 1.5 :)</div></div>
        <div class='difftype'>Added lines 4-11:</div>
        <div class='diffadd'><div class='diffmarkup'>[- Page for other versions: [[Script-CoreFunctions|devel]] [[Script-CoreFunctions-1-9|1.9]] [[Script-CoreFunctions-1-8|1.8]] old versions: [[Script-CoreFunctions-1-7|1.7]] [[Script-CoreFunctions-1-6|1.6]] 1.5 [[Script-CoreFunctions-1-4|1.4]] -]<br /><br />\\<br /><br />|| %color=#185662%[+'''Core functions v1.5'''+]%% ||<br /><br />||[[Script-Statements-1-5|Prev]] || [[Script-CoreVar-1-5|Next]]||<br />----</div></div>
        <div class='difftype'>Changed lines 118-119 from:</div>
        <div class='diffdel'><div class='diffmarkup'>This function fetches from a memory-cache-like-storage system the value of an attribute. The attribute name may contain pseudo-variables. The result (if any) will be stored in the '''result_avp''' [[Documentation.Script-CoreVar#toc2|AVP variable]]. <br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>This function fetches from a memory-cache-like-storage system the value of an attribute. The attribute name may contain pseudo-variables. The result (if any) will be stored in the '''result_avp''' [[Documentation.Script-CoreVar-1-5#toc2|AVP variable]]. <br /></div></div>
        <div class='difftype'>Changed lines 235-236 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more see http://www.voice-system.ro/docs/ser-flags/ or [[Documentation/Script-Flags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more see [[Documentation/Script-Flags-1-5 | Flags Documentation]].<br /></div></div>
        <div class='difftype'>Changed lines 247-248 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags-1-5 | Flags Documentation]].<br /></div></div>
        <div class='difftype'>Changed lines 259-260 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags-1-5 | Flags Documentation]].<br /></div></div>
        <div class='difftype'>Changed lines 356-357 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more see http://www.voice-system.ro/docs/ser-flags/ or [[Documentation/Script-Flags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more see [[Documentation/Script-Flags-1-5 | Flags Documentation]].<br /></div></div>
        <div class='difftype'>Changed lines 366-367 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags-1-5 | Flags Documentation]].<br /></div></div>
        <div class='difftype'>Changed lines 381-382 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags-1-5 | Flags Documentation]].<br /></div></div>
        <div class='difftype'>Changed lines 525-526 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags-1-5 | Flags Documentation]].<br /></div></div>
        <div class='difftype'>Changed line 540 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags | Flags Documentation]].</div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags-1-5 | Flags Documentation]].</div></div></div>
      <div class='diffrestore'><a href="javascript:if(confirm(%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=edit&restore=diff:1369779959:1368724436:&preview=y  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=edit&restore=diff:1369779959:1368724436:&preview=y%27" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=edit&restore=diff:1369779959:1368724436:&preview=y">Restore</a></div>
      <div class='diffbox'><div class='difftime'>May 16, 2013, at 07:13 PM 
        by <span class='diffauthor' title='109.99.235.212'>109.99.235.212</span> - </div>
        <div class='difftype'>Changed line 1 from:</div>
        <div class='diffdel'><div class='diffmarkup'>!![[Documentation.Documentation | Documentation]] -&gt; Script -&gt; [[Documentation.Script-CoreFunctions-1-5 | Core functions and parameteres 1.5 ]]</div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>!!!!!Documentation -&gt; [[Documentation.Manuals|Manuals]] -&gt; [[Documentation.Manual-1-5|Manual 1.5]] -&gt; Core functions</div></div>
        <div class='difftype'>Deleted line 2:</div>
        <div class='diffdel'><div class='diffmarkup'></div></div>
        <div class='difftype'>Changed lines 4-897 from:</div>
        <div class='diffdel'><div class='diffmarkup'>This section lists the all the parameters and functions exported by '''OpenSIPS''' core for script usage (to be used in opensips.cfg)<br /><br />This document is for '''OpenSIPS 1.5.x'''.<br /><br /><br /># [[#keywords| Core keywords]]<br /># [[#values| Core values]]<br /># [[#parameters| Core parameters]]<br /># [[#functions | Core functions]]<br /><br />----<br />[[#keywords]]<br />!!! Core Keywords<br /><br />Keywords specific to SIP messages which can be used mainly in 'if' expressions.<br /><br />!!!! af<br /><br />The address family of the received SIP message. It is INET if the message was received over IPv4 or INET6 if the message was received over IPv6.<br /><br />Exampe of usage:<br /><br />    if(af==INET6) {<br />        log(&quot;Message received over IPv6 link\n&quot;);<br />    };<br /><br /><br /><br />!!!!dst_ip<br /><br />The IP of the local interface where the SIP message was received. When the proxy listens on many network interfaces, makes possible to detect which was the one that received the packet.<br /><br />Example of usage:<br /><br />   if(dst_ip==127.0.0.1) {<br />      log(&quot;message received on loopback interface\n&quot;);<br />   };<br /><br />!!!!dst_port<br /><br />The local port where the SIP packet was received. When '''OpenSIPS''' is listening on many ports, it is useful to learn which was the one that received the SIP packet.<br /><br />Example of usage:<br />   if(dst_port==5061)<br />   {<br />       log(&quot;message was received on port 5061\n&quot;);<br />   };<br /><br /><br />!!!!from_uri<br /><br />This script variable is a reference to the URI of 'From' header. It can be used to test 'From'- header URI value.<br /><br />Example of usage:<br /><br />    if(is_method(&quot;INVITE&quot;) &amp;&amp; from_uri=~&quot;.*@opensips.org&quot;)<br />    {<br />        log(&quot;the caller is from opensips.org\n&quot;);<br />    };<br /><br /><br />!!!!method<br /><br />The variable is a reference to the SIP method of the message.<br /><br />Example of usage:<br /><br />    if(method==&quot;REGISTER&quot;)<br />    {<br />       log(&quot;this SIP request is a REGISTER message\n&quot;);<br />    };<br /><br /><br />!!!!msg:len<br /><br />The variable is a reference to the size of the message. It can be used in 'if' constructs to test message's size.<br /><br />Example of usage:<br /><br />    if(msg:len&gt;2048)<br />    {<br />        sl_send_reply(&quot;413&quot;, &quot;message too large&quot;);<br />        exit;<br />    };<br /><br /><br />!!!!$retcode<br /><br />It represents the value returned by last function executed (similar to $? from bash -- if you wish, you can use also $? in OpenSIPS config, both names '$retcode' and '$?' are supported). If tested after a call of a route, it is the value retuned by that route.<br /><br />Example of usage:<br /><br />   route {<br />       route(1);<br />       if($retcode==1)<br />       {<br />           log(&quot;The request is an INVITE\n&quot;);<br />       };<br />   }<br />  <br />   <br />   route[1] {<br />       if(is_method(&quot;INVITE&quot;))<br />           return(1);<br />       return(2);<br />   }<br /><br /><br />!!!!proto<br /><br />This variable can be used to test the transport protocol of the SIP message.<br /><br />Example of usage:<br /><br />    if(proto==UDP)<br />    {<br />        log(&quot;SIP message received over UDP\n&quot;);<br />    };<br /><br /><br />!!!!status<br /><br />If used in onreply_route, this variable is a reference to the status code of the reply. If it used in a standard route block, the variable is a reference to the status of the last reply sent out for the current request.<br /><br />Example of usage:<br /><br />    if(status==&quot;200&quot;)<br />    {<br />        log(&quot;this is a 200 OK reply\n&quot;);<br />    };<br /><br />!!!!src_ip<br /><br />Reference to source IP address of the SIP message.<br /><br />Example of usage:<br /><br />    if(src_ip==127.0.0.1)<br />    {<br />        log(&quot;the message was sent from localhost!\n&quot;);<br />    };<br /><br /><br />!!!! src_port<br /><br />Reference to source port of the SIP message (from which port the message was sent by previous hop).<br /><br />Example of usage:<br /><br />    if(src_port==5061)<br />    {<br />        log(&quot;message sent from port 5061\n&quot;);<br />    }<br /><br /><br />!!!!to_uri<br /><br />This variable can be used to test the value of URI from To header.<br /><br />Example of usage:<br /><br />  if(to_uri=~&quot;sip:.+@opensips.org&quot;)<br />  {<br />      log(&quot;this is a request for opensips.org users\n&quot;);<br />  };<br /><br /><br /><br />!!!!uri<br /><br />This variable can be used to test the value of the request URI.<br /><br />Example of usage:<br /><br />    if(uri=~&quot;sip:.+@opensips.org&quot;)<br />    {<br />        log(&quot;this is a request for opensips.org users\n&quot;);<br />    };<br /><br />(:toc-back:)<br /><br />----<br />[[#values]]<br />!!!Core Values<br /><br />Values that can be used in 'if' expressions to check against Core Keywords<br /><br />!!!!INET<br /><br />This keyword can be used to test whether the SIP packet was received over an IPv4 connection.<br /><br />Example of usage:<br /><br />    if(af==INET)<br />    {<br />        log(&quot;the SIP message was received over IPv4\n&quot;);<br />    };<br /><br />!!!!INET6<br /><br />This keyword can be used to test whether the SIP packet was received over an IPv6 connection.<br /><br />Example of usage:<br /><br />  if(af==INET6)<br />  {<br />      log(&quot;the SIP message was received over IPv6\n&quot;);<br />  };<br /><br />!!!!TCP<br /><br />This keyword can be used to test the value of 'proto' and check whether the SIP packet was received over TCP or not.<br /><br />Example of usage:<br /><br />  if(proto==TCP)<br />  {<br />      log(&quot;the SIP message was received over TCP\n&quot;);<br />  };<br /><br />!!!!UDP<br /><br />This keyword can be used to test the value of 'proto' and check whether the SIP packet was received over UDP or not.<br /><br />Example of usage:<br /><br />  if(proto==UDP)<br />  {<br />      log(&quot;the SIP message was received over UDP\n&quot;);<br />  };<br /><br />!!!!max_len<br /><br />This keyword is set to the maximum size of an UDP packet. It can be used to test message's size.<br /><br />Example of usage:<br /><br />    if(msg:len&gt;max_len)<br />    {<br />        sl_send_reply(&quot;413&quot;, &quot;message too large to be forwarded over UDP without fragmentation&quot;);<br />        exit;<br />    }<br /><br /><br /><br />!!!!myself<br /><br />It is a reference to the list of local IP addresses, hostnames and aliases that has been set in '''OpenSIPS''' configuration file. This lists contain the domains served by '''OpenSIPS'''.<br /><br />The variable can be used to test if the host part of an URI is in the list. The usefulness of this test is to select the messages that has to be processed locally or has to be forwarded to another server.<br /><br />See &quot;alias&quot; to add hostnames,IP addresses and aliases to the list.<br /><br />Example of usage:<br /><br />    if(uri==myself) {<br />        log(&quot;the request is for local processing\n&quot;);<br />    };<br /><br />!!!!null<br /><br />Can be used in assignment to reset the value of a per-script variable or to delete an avp.<br /><br />Example of usage:<br /><br />    $avp(i:12) = null;<br />    $var(x) = null;<br /><br />(:toc-back:)<br /><br /><br />----<br />[[#parameters]]<br />!!!Core parameters<br /><br />Global parameters that can be set in configuration file. Accepted values are, depending on the actual parameters strings, numbers and yes/ no. If you need to specify either &quot;yes&quot; or &quot;no&quot; as part of a string, wrap this in double quotes.<br /><br /><br />!!!!advertised_address<br /><br />It can be an IP address or string and represents the address advertised in Via header and<br />other destination lumps (e.g RR header). If empty or not set (default value) the socket<br />address from where the request will be sent is used.<br /><br />  WARNING: <br />  - don't set it unless you know what you are doing (e.g. nat traversal)<br />  - you can set anything here, no check is made (e.g. foo.bar will be<br />  accepted even if foo.bar doesn't exist)<br /><br />Example of usage:<br /><br />    advertised_address=&quot;opensips.org&quot;<br /><br />!!!!advertised_port<br /><br />The port advertised in Via header and other destination lumps (e.g. RR). If empty or not set (default value) the port from where the message will be sent is used. Same warnings as for 'advertised_address'.<br /><br />Example of usage:<br /><br />    advertised_port=5080<br /><br /><br /><br />!!!!alias<br /><br />Parameter to set alias hostnames for the server. It can be set many times, each value being added in a list to match the hostname when 'myself' is checked.<br /><br />It is necessary to include the port (the port value used in the &quot;port=&quot; or &quot;listen=&quot; definitions) in the alias definition otherwise the loose_route() function will not work as expected for local forwards<br /><br />Example of usage:<br /><br />[@<br />    alias=other.domain.com:5060<br />    alias=another.domain.com:5060<br />@]<br /><br />!!!!avp_aliases<br /><br />Contains a multiple definition of aliases for AVP names.<br /><br />Example of usage:<br /><br />[@<br />    avp_aliases=&quot;uuid=I:660;email=s:email_addr;fwd=i:753&quot;<br />@]<br /><br />!!!!auto_aliases<br /><br />This parameter controls if aliases should be automatically discovered and added during fixing listening sockets. The auto discovered aliases are result of the DNS lookup (if listen is a name and not IP) or of a reverse DNS lookup on the listen IP.<br /><br />Far backward compatibility reasons, the default value is &quot;on&quot;.<br /><br /><br />Example of usage:<br /><br />    auto_aliases=no<br />    auto_aliases=0<br /><br />!!!!check_via<br /><br />Check if the address in top most via of replies is local. Default value is 0 (check disabled).<br /><br />Example of usage:<br /><br />    check_via=1 <br /><br />!!!!children<br /><br />Number of children to fork for the UDP interfaces (one set for each interface - ip:port). Default value is 8.<br /><br />Example of usage:<br /><br />    children=16<br /><br />!!!!chroot<br /><br />The value must be a valid path in the system. If set, '''OpenSIPS''' will chroot (change root directory) to its value.<br /><br />Example of usage:<br /><br />    chroot=/other/fakeroot<br /><br /><br />!!!!debug<br /><br />Set the debug level. Higher values make '''OpenSIPS''' to print more debug messages.<br /><br />Examples of usage:<br /><br />[@<br />    debug=3 -- print only important messages (like errors or more critical situations) <br />    - recommended for running proxy as daemon<br /><br />    debug=9 -- print a lot of debug messages - use it only when doing debugging sessions<br />@]<br /><br />The 'debug' parameter is usually used in concordance with 'log_stderror' parameter.<br /><br />Value of 'debug' parameter can also be get and set dynamically using 'debug' Core MI function.<br /><br />For more see: [[http://www.voice-system.ro/docs/ser-syslog/]]<br /><br />!!!!disable_core_dump<br /><br />Can be 'yes' or 'no'. By default core dump limits are set to unlimited or<br />a high enough value. Set this config variable to 'yes' to disable core dump-ing<br />(will set core limits to 0).<br /><br />Default value is 'no'.<br /><br />Example of usage:<br /><br />    disable_core_dump=yes<br /><br />!!!!disable_dns_blacklist<br /><br />The DNS resolver, when configured with failover, can automatically store in a temporary blacklist the failed destinations. This will prevent (for a limited period of time) '''OpenSIPS''' to send requests to destination known as failed. So, the blacklist can be used as a memory for the DNS resolver. <br /><br />The temporary blacklist created by DNS resolver is named &quot;dns&quot; and it is by default selected for usage (no need use the use_blacklist()) function. The rules from this list have a life time of 4 minutes - you can change it at compile time, from blacklists.h .<br /><br />Can be 'yes' or 'no'. By default the blacklist is disabled (Default value is 'yes').<br /><br />Example of usage:<br /><br />    disable_dns_blacklist=no<br /><br /><br />!!!!disable_dns_failover<br /><br />Can be 'yes' or 'no'. By default DNS-based failover is enabled. Set this config variable to 'yes' to disable the DNS-based failover. This is a global option, affecting the core and the modules also.<br /><br />Default value is 'no'.<br /><br />Example of usage:<br /><br />    disable_dns_failover=yes<br /><br />!!!!disable_tcp<br /><br />Global parameter to disable TCP support in the SIP server. Default value is 'no'.<br /><br />Example of usage:<br /><br />    disable_tcp=yes<br /><br />!!!disable_tls<br /><br />Global parameter to disable TLS support in the SIP server. Default value is 'yes'.<br /><br />Example of usage:<br /><br />    disable_tcp=no<br /><br />!!!!dns<br /><br />This parameter controls if the SIP server should attempt to lookup its own domain name in DNS. If this parameter is set to yes and the domain name is not in DNS a warning is printed on syslog and a &quot;received=&quot; field is added to the via header. <br /><br />Default is no.<br /><br />!!!!dns_retr_time<br /><br />Time in seconds before retrying a dns request. Default value is system specific,<br />depends also on the '/etc/resolv.conf' content (usually 5s).<br /><br />Example of usage:<br /><br />    dns_retr_time=3<br /><br />!!!!dns_retr_no<br /><br />Number of dns retransmissions before giving up. Default value is system specific,<br />depends also on the '/etc/resolv.conf' content (usually 4).<br /><br />Example of usage:<br /><br />    dns_retr_no=3<br /><br />!!!!dns_servers_no<br /><br />How many dns servers from the ones defined in '/etc/resolv.conf' will be used. <br />Default value is to use all of them.<br /><br />Example of usage:<br /><br />    dns_servers_no=2<br /><br />!!!!dns_try_ipv6<br /><br />Can be 'yes' or 'no'. If it is set to 'yes' and a DNS lookup fails, it will retry it<br />for ipv6 (AAAA record). Default value is 'no'.<br /><br />Example of usage:<br /><br />    dns_try_ipv6=yes<br /><br />!!!!dns_use_search_list<br /><br />Can be 'yes' or 'no'. If set to 'no', the search list in '/etc/resolv.conf'<br />will be ignored (=&gt; fewer lookups =&gt; gives up faster). Default value is 'yes'.<br /><br />HINT: even if you don't have a search list defined, setting this option<br />to 'no' will still be &quot;faster&quot;, because an empty search list is in <br />fact search &quot;&quot; (so even if the search list is empty/missing there will<br />still be 2 dns queries, eg. foo+'.' and foo+&quot;&quot;+'.')<br /><br />Example of usage:<br /><br />    dns_use_search_list=no<br /><br />!!!!dst_blacklist<br /><br />Definition of a static (read-only) IP/destination blacklist. These lists can be selected from script (at runtime) to filter  the outgoing requests, based on IP, protocol, port, etc.<br /><br />Its primary purposes will be to prevent sending requests to critical IPs (like GWs) due DNS or to avoid sending to destinations that are known to be unavailable (temporary or permanent). <br /><br />Example of usage:<br /><br />[@<br />   # filter out requests going to ips of my gws<br />   dst_blacklist = gw:{( tcp , 192.168.2.100 , 5060 , &quot;&quot; ),( any , 192.168.2.101 , 0 , &quot;&quot; )}<br />   # block requests going to &quot;evil&quot; networks<br />   dst_blacklist = net_filter:{ ( any , 192.168.1.100/255.255.255.0 , 0 , &quot;&quot; )}<br />   # block message requests with nasty words<br />   dst_blacklist = msg_filter:{ ( any , 192.168.20.0/255.255.255.0 , 0 , &quot;MESSAGE*ugly_word&quot; )}<br />   # block requests not going to a specific subnet<br />   dst_blacklist = net_filter2:{ !( any , 192.168.30.0/255.255.255.0 , 0 , &quot;&quot; )}<br />@]<br /><br /><br />Each rule is defined by:<br />*protocol : TCP, UDP, TLS or &quot;any&quot; for anything<br />*port : number or 0 for any<br />*ip/mask<br />*test patter - is a filename like matching (see  &quot;man 3 fnmatch&quot;) applied on the outgoing request buffer (first_line+hdrs+body) <br /><br /><br />!!!!fork<br /><br />If set to 'yes' the proxy will fork and run in daemon mode - one process will be created for each network interface the proxy listens to and for each protocol (TCP/UDP), multiplied with the value of 'children' parameter.<br /><br />When set to 'no', the proxy will stay bound to the terminal and runs as single process. First interface is used for listening to.<br /><br />Default value is 'yes'.<br /><br />Example of usage:<br /><br />    fork=no<br /><br />!!!!group gid<br /><br />The group id to run '''OpenSIPS'''.<br /><br />Example of usage:<br /><br />  group=&quot;opensips&quot;<br /><br />!!!!listen<br /><br />Set the network addresses the SIP server should listen to. It can be an IP address, hostname or network interface id or combination of protocol:address:port (e.g., udp:10.10.10.10:5060). This parameter can be set multiple times in same configuration file, the server listening on all addresses specified.<br /><br />Example of usage:<br /><br />[@<br />    listen=10.10.10.10<br />    listen=eth1:5062<br />    listen=udp:10.10.10.10:5064<br />@]<br /><br />If you omit this directive then the SIP server will listen on all interfaces. On start the SIP server reports all the interfaces that it is listening on. Even if you specify only UDP interfaces here, the server will start the TCP engine too. If you don't want this, you need to disable the TCP support completely with the core parameter disable_tcp.<br /><br />!!!!log_facility<br /><br />If '''OpenSIPS''' logs to syslog, you can control the facility for logging. Very<br />useful when you want to divert all '''OpenSIPS''' logs to a different log file.<br />See the man page syslog(3) for more details.<br /><br />For more see: http://www.voice-system.ro/docs/ser-syslog/<br /><br />Default value is LOG_DAEMON.<br /><br />Example of usage:<br /><br />    log_facility=LOG_LOCAL0<br /><br /><br /><br />!!!!log_name<br /><br />Set the id to be printed in syslog. The value must be a string and has<br />effect only when '''OpenSIPS''' runs in daemon mode (fork=yes), after daemonize.<br />Default value is argv[0].<br /><br />Example of usage:<br /><br />    log_name=&quot;osips-5070&quot;<br /><br /><br />!!!!log_stderror<br /><br />With this parameter you can make '''OpenSIPS''' to write log and debug messages to standard error. Possible values are:<br /><br />- &quot;yes&quot; - write the messages to standard error<br /><br />- &quot;no&quot; - write the messages to syslog<br /><br />Default value is &quot;no&quot;.<br /><br />For more see: http://www.voice-system.ro/docs/ser-syslog/<br /><br />Example of usage:<br /><br />    log_stderror=yes<br /><br />!!!!max_while_loops<br /><br />The parameters set the value of maximum loops that can be done within a &quot;while&quot;. Comes as a protection to avoid infinite loops in config file execution. Default is 100.<br /><br />Example of usage:<br /><br />    max_while_loops=200<br /><br /><br />!!!!maxbuffer<br /><br />The size in bytes not to be exceeded during the auto-probing procedure of discovering the maximum buffer size for receiving UDP messages. Default value is 262144.<br /><br />Example of usage:<br /><br />    maxbuffer=65536<br /><br />!!!!memlog<br /><br />Log level to print memory debug info. It has be less than the value of 'debug' parameter if you want memory info to be logged. Default: memlog=L_DBG (4)<br /><br />Example of usage:<br /><br />    memlog=2<br /><br />!!!!mcast_loopback<br /><br />It can be 'yes' or 'no'. If set to 'yes', multicast datagram are sent over loopback. Default value is 'no'.<br /><br />Example of usage:<br /><br />    mcast_loopback=yes<br /><br />!!!!mcast_ttl<br /><br />Set the value for multicast ttl. Default value is OS specific (usually 1).<br /><br />Example of usage:<br /><br />    mcast_ttl=32<br /><br />!!!!mhomed<br /><br />Set the server to try to locate outbound interface on multihomed host. By default is not (0) - it is rather time consuming.<br /><br />Example of usage:<br /><br />    mhomed=1<br /><br />!!!!mpath<br /><br />Set the module search path.  This can be used to simplify the loadmodule parameter<br /><br />Example of usage:<br /><br />[@<br />    mpath=&quot;/usr/local/lib/opensips/modules&quot;<br />    loadmodule &quot;mysql.so&quot;<br />    loadmodule &quot;uri.so&quot;<br />    loadmodule &quot;uri_db.so&quot;<br />    loadmodule &quot;sl.so&quot;<br />    loadmodule &quot;tm.so&quot;<br />    ...<br />@]<br /><br /><br />!!!!open_files_limit<br /><br />If set and bigger than the current open file limit, '''OpenSIPS''' will try<br />to increase its open file limit to this number. Note: '''OpenSIPS''' must be<br />started as root to be able to increase a limit past the hard limit<br />(which, for open files, is 1024 on most systems).<br /><br />Example of usage:<br /><br />    open_files_limit=2048<br /><br />!!!!port<br /><br />The port the SIP server listens to. The default value for it is 5060.<br /><br />Example of usage:<br /><br />    port=5080<br /><br />!!!!reply_to_via<br /><br />If it is set to 1, any local reply is sent to the address advertised in top most Via of the request. Default value is 0 (off).<br /><br />Example of usage:<br /><br />    reply_to_via=0<br /><br />!!!!rev_dns<br /><br />This parameter controls if the SIP server should attempt to lookup its own IP address in DNS. If this parameter is set to yes and the IP address is not in DNS a warning is printed on syslog and a &quot;received=&quot; field is added to the via header. <br /><br />Default is no.<br /><br /><br />!!!!server_header<br /><br />The body of Server header field generated by '''OpenSIPS''' when it sends a request as UAS.  It defaults to &quot;OpenSIPS (&lt;version&gt; (&lt;arch&gt;/&lt;os&gt;))&quot;.  <br /><br /><br />Example of usage:<br /><br />[@<br />server_header=&quot;Server: My Company SIP Proxy&quot;<br />@]<br /><br />Please note that you have to add the header name &quot;Server:&quot;, otherwise '''OpenSIPS''' will just write a header like:<br /><br />[@<br />My Company SIP Proxy<br />@]<br /><br /><br />!!!!server_signature<br /><br />This parameter controls the &quot;Server&quot; header in any locally generated message. <br /><br />Example of usage:<br /><br />     server_signature=no<br /><br />If it is enabled (default=yes) a header is generated as in the following example:<br /><br />     Server: OpenSIPS (0.9.5 (i386/linux))<br /><br />!!!!sip_warning<br /><br />Can be 0 or 1. If set to 1 (default value is 0) a 'Warning' header is added to each reply generated by '''OpenSIPS'''.<br />The header contains several details that help troubleshooting using the network traffic dumps.<br /><br />Example of usage:<br /><br />    sip_warning=0<br /><br />!!!!tcp_children<br /><br />Number of children processes to be created for reading from TCP connections. If no value is explicitly set, the same number of TCP children as UDP children (see &quot;children&quot; parameter) will be used.<br /><br />Example of usage:<br /><br />    tcp_children=4<br /><br />!!!!tcp_accept_aliases<br /><br />!!!!tcp_send_timeout<br /><br />Time in seconds after a TCP connection will be closed if it is not available<br />for writing in this interval (and '''OpenSIPS''' wants to send something on it).<br /><br />Example of usage:<br /><br />    tcp_send_timeout=3<br /><br />!!!!tcp_connect_timeout<br /><br />Time in seconds before an ongoing attempt to connect will be aborted.<br /><br />Example of usage:<br /><br />    tcp_connect_timeout=5<br /><br /><br /><br />!!!!tcp_connection_lifetime!!!!<br /><br />Lifetime in seconds for TCP sessions. TCP sessions which are inactive for &gt;tcp_connection_lifetime will be closed by '''OpenSIPS'''. Default value is defined in tcp_conn.h: #define DEFAULT_TCP_CONNECTION_LIFETIME 120. Setting this value to 0 will close the TCP connection pretty quick ;-). You can also set the TCP lifetime to the expire value of the REGISTER by using the tcp_persistent_flag parameter of the registrar module.<br /><br />Example of usage:<br /><br />    tcp_connection_lifetime=3600<br /><br />!!!!tcp_max_connections<br /><br />maximum number of tcp connections (if the number is exceeded no new tcp connections will be accepted). Default is defined in tcp_conn.h: #define DEFAULT_TCP_MAX_CONNECTIONS 2048<br /><br />Example of usage:<br /><br />    tcp_max_connections=4096<br /><br />!!!!tcp_poll_method<br /><br />poll method used (by default the best one for the current OS is selected). For available types see io_wait.c and poll_types.h: none, poll, epoll_lt, epoll_et, sigio_rt, select, kqueue, /dev/poll<br /><br />Example of usage:<br /><br />    tcp_poll_method=select<br /><br />!!!!tls_ca_list<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_certificate<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_ciphers_list<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_domain<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_handshake_timeout<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_log<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_method<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_port_no<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_private_key<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_require_certificate<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_send_timeout<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_verify_client<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_verify_server<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tos<br /><br />The TOS (Type Of Service) to be used for the sent IP packages (both TCP and UDP).<br /><br />Example of usage:<br /><br />[@<br />    tos=IPTOS_LOWDELAY<br />    tos=0x10<br />    tos=IPTOS_RELIABILITY<br />@]<br /><br /><br /><br />!!!!user uid<br /><br />The user id to run '''OpenSIPS''' (OpenSIPS will suid to it).<br /><br />Example of usage:<br /><br />    user=&quot;opensips&quot;<br /><br /><br />!!!!user_agent_header<br /><br />The body of User-Agent header field generated by '''OpenSIPS''' when it sends a request as UAC.  It defaults to &quot;OpenSIPS (&lt;version&gt; (&lt;arch&gt;/&lt;os&gt;))&quot;. <br /> <br />Example of usage:<br /><br />[@<br />user_agent_header=&quot;User-Agent: My Company SIP Proxy&quot;<br />@]<br /><br />Please note that you have to include the header name &quot;User-Agent:&quot; as '''OpenSIPS''' does not add it and you will get an erroneous header like:<br />[@<br />My Company SIP Proxy<br />@]<br /><br /><br />!!!!wdir<br /><br />The working directory used by '''OpenSIPS''' at runtime. You might find it usefull when come to generating core files :)<br /><br />Example of usage:<br />[@<br />     wdir=&quot;/usr/local/opensips&quot;<br />     or<br />     wdir=/usr/opensips_wd<br />@]<br /><br />(:toc-back:)<br /><br />----<br />[[#functions]]<br />!!!Core Functions<br /><br />Functions exported by core that can be used in route blocks.</div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'><br />This section lists the all the functions exported by '''OpenSIPS''' core for script usage (to be used in opensips.cfg)<br /><br /><br />!!!!add_local_rport()<br /><br />Add 'rport' parameter to the Via header generated by server (see RFC3581 for its meaning). It affects only the current processed request.<br /></div></div></div>
      <div class='diffrestore'><a href="Script-CoreFunctions-1-5-action=edit&restore=diff-1368724436-1368354951-&preview=y.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=edit&restore=diff:1368724436:1368354951:&preview=y">Restore</a></div>
      <div class='diffbox'><div class='difftime'>May 12, 2013, at 12:35 PM 
        by <span class='diffauthor' title='79.118.227.150'>79.118.227.150</span> - </div>
        <div class='difftype'>Changed lines 980-982 from:</div>
        <div class='diffdel'><div class='diffmarkup'>A more complex example can be found in the [[Resources.DocsTutMemcache | MemCache Tutorial]].<br /><br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>A more complex example can be found in the [[Documentation.Tutorials-MemoryCaching | MemCache Tutorial]].<br /><br /></div></div>
        <div class='difftype'>Changed lines 996-998 from:</div>
        <div class='diffdel'><div class='diffmarkup'>A more complex example can be found in the [[Resources.DocsTutMemcache | MemCache Tutorial]].<br /><br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>A more complex example can be found in the [[Documentation.Tutorials-MemoryCaching | MemCache Tutorial]].<br /><br /></div></div>
        <div class='difftype'>Changed lines 1001-1002 from:</div>
        <div class='diffdel'><div class='diffmarkup'>This function fetches from a memory-cache-like-storage system the value of an attribute. The attribute name may contain pseudo-variables. The result (if any) will be stored in the '''result_avp''' [[http://www.opensips.org/index.php?n=Resources.DocsCoreVar#toc2|AVP variable]]. <br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>This function fetches from a memory-cache-like-storage system the value of an attribute. The attribute name may contain pseudo-variables. The result (if any) will be stored in the '''result_avp''' [[Documentation.Script-CoreVar#toc2|AVP variable]]. <br /></div></div>
        <div class='difftype'>Changed lines 1012-1014 from:</div>
        <div class='diffdel'><div class='diffmarkup'>A more complex example can be found in the [[Resources.DocsTutMemcache | MemCache Tutorial]].<br /><br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>A more complex example can be found in the [[Documentation.Tutorials-MemoryCaching | MemCache Tutorial]].<br /><br /></div></div>
        <div class='difftype'>Changed lines 1118-1119 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more see http://www.voice-system.ro/docs/ser-flags/ or [[Resources.DocsCoreFlags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more see http://www.voice-system.ro/docs/ser-flags/ or [[Documentation/Script-Flags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>Changed lines 1130-1131 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more about script flags, see [[Resources.DocsCoreFlags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>Changed lines 1142-1143 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more about script flags, see [[Resources.DocsCoreFlags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>Changed lines 1239-1240 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more see http://www.voice-system.ro/docs/ser-flags/ or [[Resources.DocsCoreFlags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more see http://www.voice-system.ro/docs/ser-flags/ or [[Documentation/Script-Flags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>Changed lines 1249-1250 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more about script flags, see [[Resources.DocsCoreFlags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>Changed lines 1264-1265 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more about script flags, see [[Resources.DocsCoreFlags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>Changed lines 1408-1409 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more about script flags, see [[Resources.DocsCoreFlags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>Changed lines 1423-1424 from:</div>
        <div class='diffdel'><div class='diffmarkup'>For more about script flags, see [[Resources.DocsCoreFlags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>For more about script flags, see [[Documentation/Script-Flags | Flags Documentation]].<br /></div></div>
        <div class='difftype'>Deleted line 1443:</div>
        <div class='diffdel'><div class='diffmarkup'></div></div></div>
      <div class='diffrestore'><a href="Script-CoreFunctions-1-5-action=edit&restore=diff-1368354951-1368354698-&preview=y.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=edit&restore=diff:1368354951:1368354698:&preview=y">Restore</a></div>
      <div class='diffbox'><div class='difftime'>May 12, 2013, at 12:31 PM 
        by <span class='diffauthor' title='79.118.227.150'>79.118.227.150</span> - </div>
        <div class='difftype'>Changed line 1 from:</div>
        <div class='diffdel'><div class='diffmarkup'>!!Resources -&gt; [[Resources.Documentation | Documentation]] -&gt; [[Resources.DocsCookbooks | CookBooks]] -&gt; Core functions and parameters v1.5</div></div>
        <div class='difftype'>to:</div>
        <div class='diffadd'><div class='diffmarkup'>!![[Documentation.Documentation | Documentation]] -&gt; Script -&gt; [[Documentation.Script-CoreFunctions-1-5 | Core functions and parameteres 1.5 ]]</div></div>
        <div class='difftype'>Deleted line 1443:</div>
        <div class='diffdel'><div class='diffmarkup'></div></div></div>
      <div class='diffrestore'><a href="javascript:if(confirm(%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=edit&restore=diff:1368354698:1366821226:&preview=y  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=edit&restore=diff:1368354698:1366821226:&preview=y%27" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=edit&restore=diff:1368354698:1366821226:&preview=y">Restore</a></div>
      <div class='diffbox'><div class='difftime'>April 24, 2013, at 06:33 PM 
        by <span class='diffauthor' title='109.99.235.212'>109.99.235.212</span> - </div>
        <div class='difftype'>Added lines 1-1445:</div>
        <div class='diffadd'><div class='diffmarkup'>!!Resources -&gt; [[Resources.Documentation | Documentation]] -&gt; [[Resources.DocsCookbooks | CookBooks]] -&gt; Core functions and parameters v1.5<br />----<br /><br />(:toc-float Table of Content:)<br />This section lists the all the parameters and functions exported by '''OpenSIPS''' core for script usage (to be used in opensips.cfg)<br /><br />This document is for '''OpenSIPS 1.5.x'''.<br /><br /><br /># [[#keywords| Core keywords]]<br /># [[#values| Core values]]<br /># [[#parameters| Core parameters]]<br /># [[#functions | Core functions]]<br /><br />----<br />[[#keywords]]<br />!!! Core Keywords<br /><br />Keywords specific to SIP messages which can be used mainly in 'if' expressions.<br /><br />!!!! af<br /><br />The address family of the received SIP message. It is INET if the message was received over IPv4 or INET6 if the message was received over IPv6.<br /><br />Exampe of usage:<br /><br />    if(af==INET6) {<br />        log(&quot;Message received over IPv6 link\n&quot;);<br />    };<br /><br /><br /><br />!!!!dst_ip<br /><br />The IP of the local interface where the SIP message was received. When the proxy listens on many network interfaces, makes possible to detect which was the one that received the packet.<br /><br />Example of usage:<br /><br />   if(dst_ip==127.0.0.1) {<br />      log(&quot;message received on loopback interface\n&quot;);<br />   };<br /><br />!!!!dst_port<br /><br />The local port where the SIP packet was received. When '''OpenSIPS''' is listening on many ports, it is useful to learn which was the one that received the SIP packet.<br /><br />Example of usage:<br />   if(dst_port==5061)<br />   {<br />       log(&quot;message was received on port 5061\n&quot;);<br />   };<br /><br /><br />!!!!from_uri<br /><br />This script variable is a reference to the URI of 'From' header. It can be used to test 'From'- header URI value.<br /><br />Example of usage:<br /><br />    if(is_method(&quot;INVITE&quot;) &amp;&amp; from_uri=~&quot;.*@opensips.org&quot;)<br />    {<br />        log(&quot;the caller is from opensips.org\n&quot;);<br />    };<br /><br /><br />!!!!method<br /><br />The variable is a reference to the SIP method of the message.<br /><br />Example of usage:<br /><br />    if(method==&quot;REGISTER&quot;)<br />    {<br />       log(&quot;this SIP request is a REGISTER message\n&quot;);<br />    };<br /><br /><br />!!!!msg:len<br /><br />The variable is a reference to the size of the message. It can be used in 'if' constructs to test message's size.<br /><br />Example of usage:<br /><br />    if(msg:len&gt;2048)<br />    {<br />        sl_send_reply(&quot;413&quot;, &quot;message too large&quot;);<br />        exit;<br />    };<br /><br /><br />!!!!$retcode<br /><br />It represents the value returned by last function executed (similar to $? from bash -- if you wish, you can use also $? in OpenSIPS config, both names '$retcode' and '$?' are supported). If tested after a call of a route, it is the value retuned by that route.<br /><br />Example of usage:<br /><br />   route {<br />       route(1);<br />       if($retcode==1)<br />       {<br />           log(&quot;The request is an INVITE\n&quot;);<br />       };<br />   }<br />  <br />   <br />   route[1] {<br />       if(is_method(&quot;INVITE&quot;))<br />           return(1);<br />       return(2);<br />   }<br /><br /><br />!!!!proto<br /><br />This variable can be used to test the transport protocol of the SIP message.<br /><br />Example of usage:<br /><br />    if(proto==UDP)<br />    {<br />        log(&quot;SIP message received over UDP\n&quot;);<br />    };<br /><br /><br />!!!!status<br /><br />If used in onreply_route, this variable is a reference to the status code of the reply. If it used in a standard route block, the variable is a reference to the status of the last reply sent out for the current request.<br /><br />Example of usage:<br /><br />    if(status==&quot;200&quot;)<br />    {<br />        log(&quot;this is a 200 OK reply\n&quot;);<br />    };<br /><br />!!!!src_ip<br /><br />Reference to source IP address of the SIP message.<br /><br />Example of usage:<br /><br />    if(src_ip==127.0.0.1)<br />    {<br />        log(&quot;the message was sent from localhost!\n&quot;);<br />    };<br /><br /><br />!!!! src_port<br /><br />Reference to source port of the SIP message (from which port the message was sent by previous hop).<br /><br />Example of usage:<br /><br />    if(src_port==5061)<br />    {<br />        log(&quot;message sent from port 5061\n&quot;);<br />    }<br /><br /><br />!!!!to_uri<br /><br />This variable can be used to test the value of URI from To header.<br /><br />Example of usage:<br /><br />  if(to_uri=~&quot;sip:.+@opensips.org&quot;)<br />  {<br />      log(&quot;this is a request for opensips.org users\n&quot;);<br />  };<br /><br /><br /><br />!!!!uri<br /><br />This variable can be used to test the value of the request URI.<br /><br />Example of usage:<br /><br />    if(uri=~&quot;sip:.+@opensips.org&quot;)<br />    {<br />        log(&quot;this is a request for opensips.org users\n&quot;);<br />    };<br /><br />(:toc-back:)<br /><br />----<br />[[#values]]<br />!!!Core Values<br /><br />Values that can be used in 'if' expressions to check against Core Keywords<br /><br />!!!!INET<br /><br />This keyword can be used to test whether the SIP packet was received over an IPv4 connection.<br /><br />Example of usage:<br /><br />    if(af==INET)<br />    {<br />        log(&quot;the SIP message was received over IPv4\n&quot;);<br />    };<br /><br />!!!!INET6<br /><br />This keyword can be used to test whether the SIP packet was received over an IPv6 connection.<br /><br />Example of usage:<br /><br />  if(af==INET6)<br />  {<br />      log(&quot;the SIP message was received over IPv6\n&quot;);<br />  };<br /><br />!!!!TCP<br /><br />This keyword can be used to test the value of 'proto' and check whether the SIP packet was received over TCP or not.<br /><br />Example of usage:<br /><br />  if(proto==TCP)<br />  {<br />      log(&quot;the SIP message was received over TCP\n&quot;);<br />  };<br /><br />!!!!UDP<br /><br />This keyword can be used to test the value of 'proto' and check whether the SIP packet was received over UDP or not.<br /><br />Example of usage:<br /><br />  if(proto==UDP)<br />  {<br />      log(&quot;the SIP message was received over UDP\n&quot;);<br />  };<br /><br />!!!!max_len<br /><br />This keyword is set to the maximum size of an UDP packet. It can be used to test message's size.<br /><br />Example of usage:<br /><br />    if(msg:len&gt;max_len)<br />    {<br />        sl_send_reply(&quot;413&quot;, &quot;message too large to be forwarded over UDP without fragmentation&quot;);<br />        exit;<br />    }<br /><br /><br /><br />!!!!myself<br /><br />It is a reference to the list of local IP addresses, hostnames and aliases that has been set in '''OpenSIPS''' configuration file. This lists contain the domains served by '''OpenSIPS'''.<br /><br />The variable can be used to test if the host part of an URI is in the list. The usefulness of this test is to select the messages that has to be processed locally or has to be forwarded to another server.<br /><br />See &quot;alias&quot; to add hostnames,IP addresses and aliases to the list.<br /><br />Example of usage:<br /><br />    if(uri==myself) {<br />        log(&quot;the request is for local processing\n&quot;);<br />    };<br /><br />!!!!null<br /><br />Can be used in assignment to reset the value of a per-script variable or to delete an avp.<br /><br />Example of usage:<br /><br />    $avp(i:12) = null;<br />    $var(x) = null;<br /><br />(:toc-back:)<br /><br /><br />----<br />[[#parameters]]<br />!!!Core parameters<br /><br />Global parameters that can be set in configuration file. Accepted values are, depending on the actual parameters strings, numbers and yes/ no. If you need to specify either &quot;yes&quot; or &quot;no&quot; as part of a string, wrap this in double quotes.<br /><br /><br />!!!!advertised_address<br /><br />It can be an IP address or string and represents the address advertised in Via header and<br />other destination lumps (e.g RR header). If empty or not set (default value) the socket<br />address from where the request will be sent is used.<br /><br />  WARNING: <br />  - don't set it unless you know what you are doing (e.g. nat traversal)<br />  - you can set anything here, no check is made (e.g. foo.bar will be<br />  accepted even if foo.bar doesn't exist)<br /><br />Example of usage:<br /><br />    advertised_address=&quot;opensips.org&quot;<br /><br />!!!!advertised_port<br /><br />The port advertised in Via header and other destination lumps (e.g. RR). If empty or not set (default value) the port from where the message will be sent is used. Same warnings as for 'advertised_address'.<br /><br />Example of usage:<br /><br />    advertised_port=5080<br /><br /><br /><br />!!!!alias<br /><br />Parameter to set alias hostnames for the server. It can be set many times, each value being added in a list to match the hostname when 'myself' is checked.<br /><br />It is necessary to include the port (the port value used in the &quot;port=&quot; or &quot;listen=&quot; definitions) in the alias definition otherwise the loose_route() function will not work as expected for local forwards<br /><br />Example of usage:<br /><br />[@<br />    alias=other.domain.com:5060<br />    alias=another.domain.com:5060<br />@]<br /><br />!!!!avp_aliases<br /><br />Contains a multiple definition of aliases for AVP names.<br /><br />Example of usage:<br /><br />[@<br />    avp_aliases=&quot;uuid=I:660;email=s:email_addr;fwd=i:753&quot;<br />@]<br /><br />!!!!auto_aliases<br /><br />This parameter controls if aliases should be automatically discovered and added during fixing listening sockets. The auto discovered aliases are result of the DNS lookup (if listen is a name and not IP) or of a reverse DNS lookup on the listen IP.<br /><br />Far backward compatibility reasons, the default value is &quot;on&quot;.<br /><br /><br />Example of usage:<br /><br />    auto_aliases=no<br />    auto_aliases=0<br /><br />!!!!check_via<br /><br />Check if the address in top most via of replies is local. Default value is 0 (check disabled).<br /><br />Example of usage:<br /><br />    check_via=1 <br /><br />!!!!children<br /><br />Number of children to fork for the UDP interfaces (one set for each interface - ip:port). Default value is 8.<br /><br />Example of usage:<br /><br />    children=16<br /><br />!!!!chroot<br /><br />The value must be a valid path in the system. If set, '''OpenSIPS''' will chroot (change root directory) to its value.<br /><br />Example of usage:<br /><br />    chroot=/other/fakeroot<br /><br /><br />!!!!debug<br /><br />Set the debug level. Higher values make '''OpenSIPS''' to print more debug messages.<br /><br />Examples of usage:<br /><br />[@<br />    debug=3 -- print only important messages (like errors or more critical situations) <br />    - recommended for running proxy as daemon<br /><br />    debug=9 -- print a lot of debug messages - use it only when doing debugging sessions<br />@]<br /><br />The 'debug' parameter is usually used in concordance with 'log_stderror' parameter.<br /><br />Value of 'debug' parameter can also be get and set dynamically using 'debug' Core MI function.<br /><br />For more see: [[http://www.voice-system.ro/docs/ser-syslog/]]<br /><br />!!!!disable_core_dump<br /><br />Can be 'yes' or 'no'. By default core dump limits are set to unlimited or<br />a high enough value. Set this config variable to 'yes' to disable core dump-ing<br />(will set core limits to 0).<br /><br />Default value is 'no'.<br /><br />Example of usage:<br /><br />    disable_core_dump=yes<br /><br />!!!!disable_dns_blacklist<br /><br />The DNS resolver, when configured with failover, can automatically store in a temporary blacklist the failed destinations. This will prevent (for a limited period of time) '''OpenSIPS''' to send requests to destination known as failed. So, the blacklist can be used as a memory for the DNS resolver. <br /><br />The temporary blacklist created by DNS resolver is named &quot;dns&quot; and it is by default selected for usage (no need use the use_blacklist()) function. The rules from this list have a life time of 4 minutes - you can change it at compile time, from blacklists.h .<br /><br />Can be 'yes' or 'no'. By default the blacklist is disabled (Default value is 'yes').<br /><br />Example of usage:<br /><br />    disable_dns_blacklist=no<br /><br /><br />!!!!disable_dns_failover<br /><br />Can be 'yes' or 'no'. By default DNS-based failover is enabled. Set this config variable to 'yes' to disable the DNS-based failover. This is a global option, affecting the core and the modules also.<br /><br />Default value is 'no'.<br /><br />Example of usage:<br /><br />    disable_dns_failover=yes<br /><br />!!!!disable_tcp<br /><br />Global parameter to disable TCP support in the SIP server. Default value is 'no'.<br /><br />Example of usage:<br /><br />    disable_tcp=yes<br /><br />!!!disable_tls<br /><br />Global parameter to disable TLS support in the SIP server. Default value is 'yes'.<br /><br />Example of usage:<br /><br />    disable_tcp=no<br /><br />!!!!dns<br /><br />This parameter controls if the SIP server should attempt to lookup its own domain name in DNS. If this parameter is set to yes and the domain name is not in DNS a warning is printed on syslog and a &quot;received=&quot; field is added to the via header. <br /><br />Default is no.<br /><br />!!!!dns_retr_time<br /><br />Time in seconds before retrying a dns request. Default value is system specific,<br />depends also on the '/etc/resolv.conf' content (usually 5s).<br /><br />Example of usage:<br /><br />    dns_retr_time=3<br /><br />!!!!dns_retr_no<br /><br />Number of dns retransmissions before giving up. Default value is system specific,<br />depends also on the '/etc/resolv.conf' content (usually 4).<br /><br />Example of usage:<br /><br />    dns_retr_no=3<br /><br />!!!!dns_servers_no<br /><br />How many dns servers from the ones defined in '/etc/resolv.conf' will be used. <br />Default value is to use all of them.<br /><br />Example of usage:<br /><br />    dns_servers_no=2<br /><br />!!!!dns_try_ipv6<br /><br />Can be 'yes' or 'no'. If it is set to 'yes' and a DNS lookup fails, it will retry it<br />for ipv6 (AAAA record). Default value is 'no'.<br /><br />Example of usage:<br /><br />    dns_try_ipv6=yes<br /><br />!!!!dns_use_search_list<br /><br />Can be 'yes' or 'no'. If set to 'no', the search list in '/etc/resolv.conf'<br />will be ignored (=&gt; fewer lookups =&gt; gives up faster). Default value is 'yes'.<br /><br />HINT: even if you don't have a search list defined, setting this option<br />to 'no' will still be &quot;faster&quot;, because an empty search list is in <br />fact search &quot;&quot; (so even if the search list is empty/missing there will<br />still be 2 dns queries, eg. foo+'.' and foo+&quot;&quot;+'.')<br /><br />Example of usage:<br /><br />    dns_use_search_list=no<br /><br />!!!!dst_blacklist<br /><br />Definition of a static (read-only) IP/destination blacklist. These lists can be selected from script (at runtime) to filter  the outgoing requests, based on IP, protocol, port, etc.<br /><br />Its primary purposes will be to prevent sending requests to critical IPs (like GWs) due DNS or to avoid sending to destinations that are known to be unavailable (temporary or permanent). <br /><br />Example of usage:<br /><br />[@<br />   # filter out requests going to ips of my gws<br />   dst_blacklist = gw:{( tcp , 192.168.2.100 , 5060 , &quot;&quot; ),( any , 192.168.2.101 , 0 , &quot;&quot; )}<br />   # block requests going to &quot;evil&quot; networks<br />   dst_blacklist = net_filter:{ ( any , 192.168.1.100/255.255.255.0 , 0 , &quot;&quot; )}<br />   # block message requests with nasty words<br />   dst_blacklist = msg_filter:{ ( any , 192.168.20.0/255.255.255.0 , 0 , &quot;MESSAGE*ugly_word&quot; )}<br />   # block requests not going to a specific subnet<br />   dst_blacklist = net_filter2:{ !( any , 192.168.30.0/255.255.255.0 , 0 , &quot;&quot; )}<br />@]<br /><br /><br />Each rule is defined by:<br />*protocol : TCP, UDP, TLS or &quot;any&quot; for anything<br />*port : number or 0 for any<br />*ip/mask<br />*test patter - is a filename like matching (see  &quot;man 3 fnmatch&quot;) applied on the outgoing request buffer (first_line+hdrs+body) <br /><br /><br />!!!!fork<br /><br />If set to 'yes' the proxy will fork and run in daemon mode - one process will be created for each network interface the proxy listens to and for each protocol (TCP/UDP), multiplied with the value of 'children' parameter.<br /><br />When set to 'no', the proxy will stay bound to the terminal and runs as single process. First interface is used for listening to.<br /><br />Default value is 'yes'.<br /><br />Example of usage:<br /><br />    fork=no<br /><br />!!!!group gid<br /><br />The group id to run '''OpenSIPS'''.<br /><br />Example of usage:<br /><br />  group=&quot;opensips&quot;<br /><br />!!!!listen<br /><br />Set the network addresses the SIP server should listen to. It can be an IP address, hostname or network interface id or combination of protocol:address:port (e.g., udp:10.10.10.10:5060). This parameter can be set multiple times in same configuration file, the server listening on all addresses specified.<br /><br />Example of usage:<br /><br />[@<br />    listen=10.10.10.10<br />    listen=eth1:5062<br />    listen=udp:10.10.10.10:5064<br />@]<br /><br />If you omit this directive then the SIP server will listen on all interfaces. On start the SIP server reports all the interfaces that it is listening on. Even if you specify only UDP interfaces here, the server will start the TCP engine too. If you don't want this, you need to disable the TCP support completely with the core parameter disable_tcp.<br /><br />!!!!log_facility<br /><br />If '''OpenSIPS''' logs to syslog, you can control the facility for logging. Very<br />useful when you want to divert all '''OpenSIPS''' logs to a different log file.<br />See the man page syslog(3) for more details.<br /><br />For more see: http://www.voice-system.ro/docs/ser-syslog/<br /><br />Default value is LOG_DAEMON.<br /><br />Example of usage:<br /><br />    log_facility=LOG_LOCAL0<br /><br /><br /><br />!!!!log_name<br /><br />Set the id to be printed in syslog. The value must be a string and has<br />effect only when '''OpenSIPS''' runs in daemon mode (fork=yes), after daemonize.<br />Default value is argv[0].<br /><br />Example of usage:<br /><br />    log_name=&quot;osips-5070&quot;<br /><br /><br />!!!!log_stderror<br /><br />With this parameter you can make '''OpenSIPS''' to write log and debug messages to standard error. Possible values are:<br /><br />- &quot;yes&quot; - write the messages to standard error<br /><br />- &quot;no&quot; - write the messages to syslog<br /><br />Default value is &quot;no&quot;.<br /><br />For more see: http://www.voice-system.ro/docs/ser-syslog/<br /><br />Example of usage:<br /><br />    log_stderror=yes<br /><br />!!!!max_while_loops<br /><br />The parameters set the value of maximum loops that can be done within a &quot;while&quot;. Comes as a protection to avoid infinite loops in config file execution. Default is 100.<br /><br />Example of usage:<br /><br />    max_while_loops=200<br /><br /><br />!!!!maxbuffer<br /><br />The size in bytes not to be exceeded during the auto-probing procedure of discovering the maximum buffer size for receiving UDP messages. Default value is 262144.<br /><br />Example of usage:<br /><br />    maxbuffer=65536<br /><br />!!!!memlog<br /><br />Log level to print memory debug info. It has be less than the value of 'debug' parameter if you want memory info to be logged. Default: memlog=L_DBG (4)<br /><br />Example of usage:<br /><br />    memlog=2<br /><br />!!!!mcast_loopback<br /><br />It can be 'yes' or 'no'. If set to 'yes', multicast datagram are sent over loopback. Default value is 'no'.<br /><br />Example of usage:<br /><br />    mcast_loopback=yes<br /><br />!!!!mcast_ttl<br /><br />Set the value for multicast ttl. Default value is OS specific (usually 1).<br /><br />Example of usage:<br /><br />    mcast_ttl=32<br /><br />!!!!mhomed<br /><br />Set the server to try to locate outbound interface on multihomed host. By default is not (0) - it is rather time consuming.<br /><br />Example of usage:<br /><br />    mhomed=1<br /><br />!!!!mpath<br /><br />Set the module search path.  This can be used to simplify the loadmodule parameter<br /><br />Example of usage:<br /><br />[@<br />    mpath=&quot;/usr/local/lib/opensips/modules&quot;<br />    loadmodule &quot;mysql.so&quot;<br />    loadmodule &quot;uri.so&quot;<br />    loadmodule &quot;uri_db.so&quot;<br />    loadmodule &quot;sl.so&quot;<br />    loadmodule &quot;tm.so&quot;<br />    ...<br />@]<br /><br /><br />!!!!open_files_limit<br /><br />If set and bigger than the current open file limit, '''OpenSIPS''' will try<br />to increase its open file limit to this number. Note: '''OpenSIPS''' must be<br />started as root to be able to increase a limit past the hard limit<br />(which, for open files, is 1024 on most systems).<br /><br />Example of usage:<br /><br />    open_files_limit=2048<br /><br />!!!!port<br /><br />The port the SIP server listens to. The default value for it is 5060.<br /><br />Example of usage:<br /><br />    port=5080<br /><br />!!!!reply_to_via<br /><br />If it is set to 1, any local reply is sent to the address advertised in top most Via of the request. Default value is 0 (off).<br /><br />Example of usage:<br /><br />    reply_to_via=0<br /><br />!!!!rev_dns<br /><br />This parameter controls if the SIP server should attempt to lookup its own IP address in DNS. If this parameter is set to yes and the IP address is not in DNS a warning is printed on syslog and a &quot;received=&quot; field is added to the via header. <br /><br />Default is no.<br /><br /><br />!!!!server_header<br /><br />The body of Server header field generated by '''OpenSIPS''' when it sends a request as UAS.  It defaults to &quot;OpenSIPS (&lt;version&gt; (&lt;arch&gt;/&lt;os&gt;))&quot;.  <br /><br /><br />Example of usage:<br /><br />[@<br />server_header=&quot;Server: My Company SIP Proxy&quot;<br />@]<br /><br />Please note that you have to add the header name &quot;Server:&quot;, otherwise '''OpenSIPS''' will just write a header like:<br /><br />[@<br />My Company SIP Proxy<br />@]<br /><br /><br />!!!!server_signature<br /><br />This parameter controls the &quot;Server&quot; header in any locally generated message. <br /><br />Example of usage:<br /><br />     server_signature=no<br /><br />If it is enabled (default=yes) a header is generated as in the following example:<br /><br />     Server: OpenSIPS (0.9.5 (i386/linux))<br /><br />!!!!sip_warning<br /><br />Can be 0 or 1. If set to 1 (default value is 0) a 'Warning' header is added to each reply generated by '''OpenSIPS'''.<br />The header contains several details that help troubleshooting using the network traffic dumps.<br /><br />Example of usage:<br /><br />    sip_warning=0<br /><br />!!!!tcp_children<br /><br />Number of children processes to be created for reading from TCP connections. If no value is explicitly set, the same number of TCP children as UDP children (see &quot;children&quot; parameter) will be used.<br /><br />Example of usage:<br /><br />    tcp_children=4<br /><br />!!!!tcp_accept_aliases<br /><br />!!!!tcp_send_timeout<br /><br />Time in seconds after a TCP connection will be closed if it is not available<br />for writing in this interval (and '''OpenSIPS''' wants to send something on it).<br /><br />Example of usage:<br /><br />    tcp_send_timeout=3<br /><br />!!!!tcp_connect_timeout<br /><br />Time in seconds before an ongoing attempt to connect will be aborted.<br /><br />Example of usage:<br /><br />    tcp_connect_timeout=5<br /><br /><br /><br />!!!!tcp_connection_lifetime!!!!<br /><br />Lifetime in seconds for TCP sessions. TCP sessions which are inactive for &gt;tcp_connection_lifetime will be closed by '''OpenSIPS'''. Default value is defined in tcp_conn.h: #define DEFAULT_TCP_CONNECTION_LIFETIME 120. Setting this value to 0 will close the TCP connection pretty quick ;-). You can also set the TCP lifetime to the expire value of the REGISTER by using the tcp_persistent_flag parameter of the registrar module.<br /><br />Example of usage:<br /><br />    tcp_connection_lifetime=3600<br /><br />!!!!tcp_max_connections<br /><br />maximum number of tcp connections (if the number is exceeded no new tcp connections will be accepted). Default is defined in tcp_conn.h: #define DEFAULT_TCP_MAX_CONNECTIONS 2048<br /><br />Example of usage:<br /><br />    tcp_max_connections=4096<br /><br />!!!!tcp_poll_method<br /><br />poll method used (by default the best one for the current OS is selected). For available types see io_wait.c and poll_types.h: none, poll, epoll_lt, epoll_et, sigio_rt, select, kqueue, /dev/poll<br /><br />Example of usage:<br /><br />    tcp_poll_method=select<br /><br />!!!!tls_ca_list<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_certificate<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_ciphers_list<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_domain<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_handshake_timeout<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_log<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_method<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_port_no<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_private_key<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_require_certificate<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_send_timeout<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_verify_client<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tls_verify_server<br /><br />-&gt;See : [[http://www.opensips.org/html/docs/tutorials/tls-1.4.x.html|TLS tutorial]].<br /><br />!!!!tos<br /><br />The TOS (Type Of Service) to be used for the sent IP packages (both TCP and UDP).<br /><br />Example of usage:<br /><br />[@<br />    tos=IPTOS_LOWDELAY<br />    tos=0x10<br />    tos=IPTOS_RELIABILITY<br />@]<br /><br /><br /><br />!!!!user uid<br /><br />The user id to run '''OpenSIPS''' (OpenSIPS will suid to it).<br /><br />Example of usage:<br /><br />    user=&quot;opensips&quot;<br /><br /><br />!!!!user_agent_header<br /><br />The body of User-Agent header field generated by '''OpenSIPS''' when it sends a request as UAC.  It defaults to &quot;OpenSIPS (&lt;version&gt; (&lt;arch&gt;/&lt;os&gt;))&quot;. <br /> <br />Example of usage:<br /><br />[@<br />user_agent_header=&quot;User-Agent: My Company SIP Proxy&quot;<br />@]<br /><br />Please note that you have to include the header name &quot;User-Agent:&quot; as '''OpenSIPS''' does not add it and you will get an erroneous header like:<br />[@<br />My Company SIP Proxy<br />@]<br /><br /><br />!!!!wdir<br /><br />The working directory used by '''OpenSIPS''' at runtime. You might find it usefull when come to generating core files :)<br /><br />Example of usage:<br />[@<br />     wdir=&quot;/usr/local/opensips&quot;<br />     or<br />     wdir=/usr/opensips_wd<br />@]<br /><br />(:toc-back:)<br /><br />----<br />[[#functions]]<br />!!!Core Functions<br /><br />Functions exported by core that can be used in route blocks.<br /><br />!!!!add_local_rport()<br /><br />Add 'rport' parameter to the Via header generated by server (see RFC3581 for its meaning). It affects only the current processed request.<br /><br />Example of usage:<br /><br />    add_local_rport()<br /><br />!!!!append_branch()<br /><br />Similarly to t_fork_to, it extends destination set by a new entry. The difference is that current URI is taken as new entry. <br /><br />Without parameter, the function copies the current URI into a new branch. Thus, leaving the main branch (the URI) for further manipulation.<br /><br />With a parameter, the function copies the URI in the parameter into a new branch. Thus, the current URI is not manipulated.<br /><br />Note that it's not possible to append a new branch in &quot;on_failure_route&quot; block if a 6XX response has been previously received (it would be against RFC 3261).<br /><br />Example of usage:<br />[@<br />    # if someone calls B, the call should be forwarded to C too.<br />    #<br />    if (method==&quot;INVITE&quot; &amp;&amp; uri=~&quot;sip:B@xx.xxx.xx &quot;)<br />    {<br />        # copy the current branch (branches[0]) into<br />        # a new branch (branches[1])<br />        append_branch();<br />        # all URI manipulation functions work on branches[0]<br />        # thus, URI manipulation does not touch the <br />        # appended branch (branches[1])<br />        seturi(&quot;sip:C@domain&quot;);<br />        <br />        # now: branch 0 = C@domain<br />        #      branch 1 = B@xx.xx.xx.xx<br />        <br />        # and if you need a third destination ...<br />        <br />        # copy the current branch (branches[0]) into<br />        # a new branch (branches[2])<br />        append_branch();<br />        <br />        # all URI manipulation functions work on branches[0]<br />        # thus, URI manipulation does not touch the <br />        # appended branch (branches[1-2])<br />        seturi(&quot;sip:D@domain&quot;);<br />        <br />        # now: branch 0 = D@domain<br />        #      branch 1 = B@xx.xx.xx.xx<br />        #      branch 2 = C@domain<br />        <br />        t_relay();<br />        exit;<br />    };<br /><br />    # You could also use append_branch(&quot;sip:C@domain&quot;) which adds a branch with the new URI:<br />    <br />    <br />    if(method==&quot;INVITE&quot; &amp;&amp; uri=~&quot;sip:B@xx.xxx.xx &quot;) {<br />        # append a new branch with the second destionation<br />        append_branch(&quot;sip:user@domain&quot;);<br />        # now: branch 0 = B@xx.xx.xx.xx<br />        # now: branch 1 = C@domain<br /><br />        t_relay();<br />        exit;<br />}<br />@]<br />!!!!cache_store( storage_id, attribute_name, attribute_name [,timeout])<br /><br />This sets in a memory-cache-like-storage system a new value for an attribute. Both the attribute name and value may contain pseudo-variables. If the attribute does not already exist in the memcache, it will be inserted with the given value; if already present, its value will be replaced with the new one. The function may optionally take an extra parameter, a timeout (or lifetime) value for the attribute - after the lifetime is exceeded, the attribute is automatically purged from memcache.<br /><br />As these functions (memcache) are just part of a generic memcache interface, you need to specify what memcache implementation you want  to use via this command -&gt; the ''storage_id'' points the memcache implementation. Currently there is only one available, &quot;local&quot;, provided by the [[http://www.opensips.org/html/docs/modules/1.5.x/localcache.html|'''localcache''' module]].<br /><br />Function returns true is the new attribute was successfully inserted.<br /><br />[@<br />cache_store(&quot;local&quot;,&quot;my_attr&quot;,&quot;$avp(i:55)&quot;,1200);<br />cache_store(&quot;local&quot;,&quot;passwd_$tu&quot;,&quot;$var(x)&quot;);<br />@]<br /><br />A more complex example can be found in the [[Resources.DocsTutMemcache | MemCache Tutorial]].<br /><br /><br />!!!!cache_remove( storage_id, attribute_name)<br /><br />This removes an attribute from a memory-cache-like-storage system. The attribute name may contain pseudo-variables.<br /><br />As these functions (memcache) are just part of a generic memcache interface, you need to specify what memcache implementation you want  to use via this command -&gt; the ''storage_id'' points the memcache implementation. Currently there is only one available, &quot;local&quot;, provided by the [[http://www.opensips.org/html/docs/modules/1.5.x/localcache.html|'''localcache''' module]].<br /><br />Function returns false only if the ''storage_id'' is invalid.<br /><br />[@<br />cache_remove(&quot;local&quot;,&quot;my_attr&quot;);<br />cache_remove(&quot;local&quot;,&quot;passwd_$tu&quot;);<br />@]<br /><br />A more complex example can be found in the [[Resources.DocsTutMemcache | MemCache Tutorial]].<br /><br /><br />!!!!cache_fetch( storage_id, attribute_name, result_avp)<br /><br />This function fetches from a memory-cache-like-storage system the value of an attribute. The attribute name may contain pseudo-variables. The result (if any) will be stored in the '''result_avp''' [[http://www.opensips.org/index.php?n=Resources.DocsCoreVar#toc2|AVP variable]]. <br /><br />As these functions (memcache) are just part of a generic memcache interface, you need to specify what memcache implementation you want  to use via this command -&gt; the ''storage_id'' points the memcache implementation. Currently there is only one available, &quot;local&quot;, provided by the [[http://www.opensips.org/html/docs/modules/1.5.x/localcache.html|'''localcache''' module]].<br /><br />Function returns true if the attribute was found and its value returned.<br /><br />[@<br />cache_fetch(&quot;local&quot;,&quot;my_attr&quot;, $avp(i:11) );<br />cache_fetch(&quot;local&quot;,&quot;passwd_$tu&quot;, $var(x) );<br />@]<br /><br />A more complex example can be found in the [[Resources.DocsTutMemcache | MemCache Tutorial]].<br /><br /><br />!!!!break()<br /><br />Since v0.10.0-dev3, 'break' can no longer be used to stop the execution of a route. The only place to use is to end a 'case' block in a 'switch' statement. 'return' must be now used instead of old 'break'.<br /><br />'return' and 'break' have now a similar meaning as in c/shell.<br /><br />!!!!drop()<br /><br />Stop the execution of the configuration script and alter the implicit action which is done afterwards.<br /><br />If the function is called in a 'branch_route' then the branch is discarded (implicit action for 'branch_route' is to forward the request).<br /><br />If the function is called in a 'onreply_route' then any provisional reply is discarded (implicit action for 'onreply_route' is to send the reply upstream according to Via header).<br /><br />Example of usage:<br /><br />    onreply_route {<br />        if(status==&quot;183&quot;) {<br />            drop();<br />        }<br />    }<br /><br />!!!!exit()<br /><br />Stop the execution of the configuration script -- it has the same behaviour as return(0). It does not affect the implicit action to be taken after script execution. <br /><br />  route {<br />    if (route(2)) {<br />      xlog(&quot;L_NOTICE&quot;,&quot;method $rm is INVITE\n&quot;);<br />    } else {<br />      xlog(&quot;L_NOTICE&quot;,&quot;method is $rm\n&quot;);<br />    };<br />  }<br /><br />  route[2] {<br />    if (is_method(&quot;INVITE&quot;)) {<br />      return(1);<br />    } else if (is_method(&quot;REGISTER&quot;)) {<br />      return(-1);<br />    } else if (is_method(&quot;MESSAGE&quot;)) {<br />      sl_send_reply(&quot;403&quot;,&quot;IM not allowed&quot;);<br />      exit;<br />    };<br />  }<br /><br />!!!!force_rport()<br />Force_rport() adds the rport parameter to the first Via header. Thus, '''OpenSIPS''' will add the received IP port to the top most via header in the SIP message, even if the client does not indicate support for rport. This enables subsequent SIP messages to return to the proper port later on in a SIP transaction.<br /><br />The rport parameter is defined in RFC 3581.<br /><br />Example of usage:<br /><br />    force_rport();<br /><br />!!!!force_send_socket([proto:]address[:port])<br /><br />Force '''OpenSIPS''' to send the message from the specified socket (it _must_ be one of the sockets '''OpenSIPS''' listens on). If the protocol doesn't match (e.g. UDP message &quot;forced&quot; to a TCP socket) the closest socket of the same protocol is used.<br /><br />Example of usage:<br /><br />    force_send_socket(10.10.10.10:5060);<br /><br /><br />!!!!force_tcp_alias()<br /><br />force_tcp_alias(port)      <br /><br />adds a tcp port alias for the current connection (if tcp).<br />Usefull if you want to send all the trafic to port_alias through<br />the same connection this request came from [it could help <br />for firewall or nat traversal].<br />With no parameters adds the port from the message via as the alias.<br />When the &quot;aliased&quot; connection is closed (e.g. it's idle for too<br />much time), all the port aliases are removed.<br /><br />!!!!forward(destination)<br /><br />Forward the SIP request to the given destination in stateless mode. This has the format of [proto:]host[:port]. Host can be an IP or hostname; supported protocols are UDP, TCP and TLS. (For TLS, you need to compile the TLS support into core).<br />If proto or port are not specified, NAPTR and SRV lookups will be used to determine them (if possible).<br /><br />If destination parameter is missing, the forward will be done based on RURI.<br /><br />Example of usage:<br /><br />    forward(&quot;10.0.0.10:5060&quot;);<br />    #or<br />    forward();<br /><br /><br />!!!!isdsturiset()<br /><br />Test if the dst_uri field (next hop address) is set.<br /><br />Example of usage:<br /><br />    if(isdsturiset()) {<br />        log(&quot;dst_uri is set\n&quot;);<br />    };<br /><br />!!!!isflagset(int)<br /><br />Test if a flag is set for current processed message (if the flag value is 1). The value of the parameter can be in range of 0..31.<br /><br />For more see http://www.voice-system.ro/docs/ser-flags/ or [[Resources.DocsCoreFlags | Flags Documentation]].<br /><br />Example of usage:<br /><br />    if(isflagset(3)) {<br />        log(&quot;flag 3 is set\n&quot;);<br />    };<br /><br />!!!!isbflagset([branch_idx,] flag_idx)<br /><br />Test if a flag is set for a specific branch (if the flag value is 1). The value of the &quot;flag_idx&quot; parameter can be in range of 0..31. &quot;branch_idx&quot; identify the branch for which the flags are tested - it must be a positiv number. Branch index 0 refers to the RURI branch. If this parameter is missing, 0 branch index is used as default.<br /><br />For more about script flags, see [[Resources.DocsCoreFlags | Flags Documentation]].<br /><br />Example of usage:<br /><br />    if(isbflagset(1,3)) {<br />        log(&quot;flag 3 is set in branch 1\n&quot;);<br />    };<br /><br />!!!!issflagset(flag_idx)<br /><br />Test if a script flag is set (if the flag value is 1). The value of the &quot;flag_idx&quot; parameter can be in range of 0..31.<br /><br />For more about script flags, see [[Resources.DocsCoreFlags | Flags Documentation]].<br /><br />Example of usage:<br /><br />    if(issflagset(2)) {<br />        log(&quot;script flag 2 is set\n&quot;);<br />    };<br /><br />!!!!log([level,] string)<br /><br />Write text message to standard error terminal or syslog. You can specify the log level as first parameter.<br /><br />For more see: http://www.voice-system.ro/docs/ser-syslog/<br /><br />Example of usage:<br /><br />    log(&quot;just some text message\n&quot;);<br /><br /><br />!!!!next_branches()<br /><br />Adds to the request a new destination set that includes all highest priority class contacts ('q' value based) from the serialized branches (see serialize_branches()). If called from a route block, it rewrites the request uri with first contact and adds the remaining contacts as parallel branches.  If called from failure route block, adds all contacts as parallel branches.  All used<br />contacts are removes the serialized branches.<br /><br />Returns true if at least one contact was added for the request's destination set - returns 1 if other branches are still pending and return 2 if no other branches are left for future processing - shortly, if 2: this is the last branch, if 1: other will follow. False is return is nothing was done (no more serialized branches).<br /><br />Example of usage:<br /><br />    next_branches();<br /><br /><br />!!!!prefix(string)<br /><br />Add the string parameter in front of username in R-URI.<br /><br />Example of usage:<br /><br />    prefix(&quot;00&quot;);<br /><br />!!!!pv_printf(pv, string)<br /><br />Prints the formatted 'string' in the AVP 'pv'. The 'string' parameter can include any pseudo-variable defined in '''OpenSIPS'''. The 'pv' can be any writable pseudo-variable -- e.g.,: AVPs, VARs, $ru, $rU, $rd, $du, $br, $fs.<br /><br />It was extended from the avp_printf(...) function exported in previous versions by the avpops module. Starting with 1.3.0, avp_printf(...) is just an alias to pv_printf(...).<br /><br />Example of usage:<br /><br />    pv_printf(&quot;$var(x)&quot;, &quot;r-uri: $ru&quot;);<br />    pv_printf(&quot;$avp(i:3)&quot;, &quot;from uri: $fu&quot;);<br /><br />!!!!return(int)<br /><br />The return() function allows you to return any integer value from a called route() block.<br />You can test the value returned by a route using &quot;$retcode&quot; variable.<br /><br />return(0) is same as &quot;exit()&quot;;<br /><br />In bool expressions:<br /><br />  * Negative and ZERO is FALSE<br />  * Positive is TRUE<br /><br />Example usage: <br /><br />[@<br />route {<br />  if (route(2)) {<br />    xlog(&quot;L_NOTICE&quot;,&quot;method $rm is INVITE\n&quot;);<br />  } else {<br />    xlog(&quot;L_NOTICE&quot;,&quot;method $rm is REGISTER\n&quot;);<br />  };<br />}<br />@]<br />[@<br />route[2] {<br />  if (is_method(&quot;INVITE&quot;)) {<br />    return(1);<br />  } else if (is_method(&quot;REGISTER&quot;)) {<br />    return(-1);<br />  } else {<br />    return(0);<br />  };<br />}<br />@]<br /><br />!!!!resetdsturi()<br /><br />Set the value of dst_uri filed to NULL. dst_uri field is usually set after loose_route() or lookup(&quot;location&quot;) if the contact address is behind a NAT.<br /><br />Example of usage:<br /><br />    resetdsturi();<br /><br />!!!!resetflag(int)<br /><br />Reset a flag for current processed message (set the value to 0). The value of the parameter can be in range of 0..31.<br /><br />For more see http://www.voice-system.ro/docs/ser-flags/ or [[Resources.DocsCoreFlags | Flags Documentation]].<br /><br />Example of usage:<br /><br />    resetflag(3);<br /><br />!!!!resetbflag([branch_idx,] flag_idx)<br /><br />Reset a flag for a specific branch (set flag to value 0). The value of the &quot;flag_idx&quot; parameter can be in range of 0..31. &quot;branch_idx&quot; identify the branch for which the flag is reset - it must be a positiv number. Branch index 0 refers to the RURI branch. If this parameter is missing, 0 branch index is used as default.<br /><br />For more about script flags, see [[Resources.DocsCoreFlags | Flags Documentation]].<br /><br />Example of usage:<br />[@<br />    resetbflag(1,3);<br />    # or<br />    resetbflag(3); # same with resetbflag(0,3)<br />@]<br /><br /><br /><br />!!!!resetsflag(flag_idx)<br /><br />Reset a script flag (set flag to value 0). The value of the &quot;flag_idx&quot; parameter can be in range of 0..31.<br /><br />For more about script flags, see [[Resources.DocsCoreFlags | Flags Documentation]].<br /><br />Example of usage:<br /><br />    resetsflag(2);<br /><br />!!!!revert_uri()<br /><br />Set the R-URI to the value of the R-URI as it was when the request was received by server (undo all changes of R-URI).<br /><br />Example of usage:<br /><br />    revert_uri();<br /><br />!!!!rewritehost() / sethost()<br /><br />Rewrite the domain part of the R-URI with the value of function's parameter. Other parts of the R-URI like username, port and URI parameters remain unchanged.<br /><br />Example of usage:<br /><br />    rewritehost(&quot;1.2.3.4&quot;);<br /><br />!!!!rewritehostport() / sethostport()<br /><br />Rewrite the domain part and port of the R-URI with the value of function's parameter. Other parts of the R-URI like username and URI parameters remain unchanged.<br /><br />Example of usage:<br /><br />    rewritehostport(&quot;1.2.3.4:5080&quot;);<br /><br />!!!!rewriteuser(string) / setuser(string)<br /><br />Rewrite the user part of the R-URI with the value of function's parameter.<br /><br />Example of usage:<br /><br />    rewriteuser(&quot;newuser&quot;);<br /><br />!!!!rewriteuserpass() / setuserpass()<br /><br />Rewrite the password part of the R-URI with the value of function's parameter.<br /><br />Example of usage:<br /><br />    rewriteuserpass(&quot;my_secret_passwd&quot;);<br /><br />!!!!rewriteport() / setport()<br /><br />Rewrites/sets the port part of the R-URI with the value of function's parameter.<br /><br />Example of usage:<br /><br />    rewriteport(&quot;5070&quot;);<br /><br />!!!!rewriteuri(str) / seturi(str)<br /><br />Rewrite the request URI.<br /><br />Example of usage:<br /><br />    rewriteuri(&quot;sip:test@opensips.org&quot;);<br /><br />!!!!send(destination)<br /><br />Send the original SIP message to a specific destination in stateless mode. This is definied as [proto:]host[:port]. No changes are applied to received message, no Via header is added. Host can be an IP or hostname; supported protocols are UDP, TCP and TLS. (For TLS, you need to compile the TLS support into core). If proto or port are not specified, NAPTR and SRV lookups will be used to determine them (if possible).<br /><br />Parameter is mandatory and has string format.<br /><br />Example of usage:<br /><br />   send(&quot;udp:10.10.10.10:5070&quot;);<br /><br /><br /><br />!!!!serialize_branches(clear)<br /><br />Takes all the branches added for parallel forking (with append_branch() and including the current RURI) and prepare them for serial forking. The ordering is done in increasing &quot;q&quot; order. The serialized branches are internally stored in AVPs - you will be able to fetch and use via the &quot;next_branches()&quot; function.\\<br />NOTE that (according to RFC3261), the branches with the same &quot;q&quot; value will still be parallel forked during a certain step in the serial forking (it will result a combination of serial with parallel forking).\\<br />NOTE that this function is not changing RURI in the messages - it is just converting from parallel to serial branches (preparing branches).<br /><br />If &quot;clear&quot; is set to non-zero, all previous results of another &quot;serialize_branches&quot; (serialized branches which were not yet used) will be deleted before setting the new serialized branches.<br /><br />Example of usage:<br /><br />   serialize_branches(1);<br /><br /><br /><br />!!!!set_advertised_address(ip|string)<br /><br />Same as 'advertised_address' but it affects only the current message. It has priority if 'advertised_address' is also set.<br /><br />Example of usage:<br /><br />    set_advertised_address(&quot;opensips.org&quot;);<br /><br />!!!!set_advertised_port(int)<br /><br />Same as 'advertised_port' but it affects only the current message. It has priority over 'advertised_port'.<br /><br />Example of usage:<br /><br />    set_advertised_port(5080);<br /><br /><br />!!!!setdebug([level])<br /><br />Changes the debug level of the current process from script. If called without the parameter then the debug level of the current process will be reset to the global level. If the debug level of the current process is changed then changing the global debug level (using MI function) does not affect it, so be careful and make sure to reset the process debug level when you are done. This function is very helpful if you are tracing and debugging only a specific piece of code. <br /><br />Example of usage:<br /><br />    debug= -1 # errors only<br />    .....<br />    {<br />      ......<br />      setdebug(4); # set the debug level of the current process to DBG<br />      uac_replace_from(....);<br />      setdebug(); # reset the debug level of the current process to the global level<br />      .......<br />    }<br /><br />!!!!setdsturi(string)<br /><br />Explicitely set the dst_uri field to the value of the paramater. The parameter has to be a valid SIP URI.<br /><br />Example of usage:<br /><br />    setdsturi(&quot;sip:10.10.10.10:5090&quot;);<br /><br />!!!!setflag(int)<br /><br />Set a flag for current processed message. The value of the parameter can be in range of 0..31. The flags are used to mark the message for special processing (e.g., accounting) or to keep some state (e.g., message authenticated).<br /><br />For more see http://www.voice-system.ro/docs/ser-flags/ .<br /><br />Example of usage:<br /><br />    setflag(3);<br /><br /><br />!!!!setbflag([branch_idx,] flag_idx)<br /><br />Set a flag for a specific branch (set flag to value 1). The value of the &quot;flag_idx&quot; parameter can be in range of 0..31. &quot;branch_idx&quot; identify the branch for which the flag is set - it must be a positiv number. Branch index 0 refers to the RURI branch. If this parameter is missing, 0 branch index is used as default.<br /><br />For more about script flags, see [[Resources.DocsCoreFlags | Flags Documentation]].<br /><br />Example of usage:<br /><br />    setbflag(1,3);<br />    # or<br />    setbflag(3); # same with setbflag(0,3)<br /><br /><br /><br /><br />!!!!setsflag(flag_idx)<br /><br />Set a script flag (set flag to value 0). The value of the &quot;flag_idx&quot; parameter can be in range of 0..31.<br /><br />For more about script flags, see [[Resources.DocsCoreFlags | Flags Documentation]].<br /><br />Example of usage:<br /><br />    setsflag(2);<br /><br />!!!!strip(int)<br /><br />Strip the first N-th characters from username of R-URI (N is the value of the parameter).<br /><br />Example of usage:<br /><br />    strip(3);<br /><br />!!!!strip_tail(int)<br /><br />Strip the last N-th characters from username of R-URI (N is the value of the parameter).<br /><br />Example of usage:<br /><br />  strip_tail(3);<br /><br /></div></div></div>
      <div class='diffrestore'><a href="Script-CoreFunctions-1-5-action=edit&restore=diff-1366821226-1366821226-&preview=y.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=edit&restore=diff:1366821226:1366821226:&preview=y">Restore</a></div></div></div>
  
<!--PageRightFmt--><!--/PageRightFmt--></td>
</tr></table>
<!--PageFooterFmt-->
  <div id='wikifoot'>
  <hr class="bottomline" /></td>
    <div class='footnav'>
	
      <a rel="nofollow" href="javascript:if(confirm(%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=edit  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=edit%27" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=edit">Edit</a> |
      <a rel="nofollow" href="Script-CoreFunctions-1-5-action=diff.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=diff">History</a> |
      <a rel="nofollow" href="Script-CoreFunctions-1-5-action=print.htm" tppabs="http://www.opensips.org/Documentation/Script-CoreFunctions-1-5?action=print" target='_blank'>Print</a> |
      <a href="RecentChanges.htm" tppabs="http://www.opensips.org/Documentation/RecentChanges">Recent Changes</a> |
      <a href="javascript:if(confirm(%27http://www.opensips.org/Site/Search  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Site/Search%27" tppabs="http://www.opensips.org/Site/Search">Search</a></div>
    <div class='lastmod'>Page last modified on August 05, 2013, at 03:09 PM</div></div>
<!--HTMLFooter-->
</div>
</body>
</html>
