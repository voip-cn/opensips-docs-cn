<!DOCTYPE html 
    PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html><head>
  <title>openSIPS | Documentation / Tutorials-RLS</title>
  <link rel='stylesheet' href="print.css" tppabs="http://www.opensips.org/pub/skins/print/print.css" type='text/css' />
  <!--HTMLHeader--><style type='text/css'><!--
  ul, ol, pre, dl, p { margin-top:0px; margin-bottom:0px; }
  code.escaped { white-space: nowrap; }
  .indent { margin-left:40px; }
  .outdent { margin-left:40px; text-indent:-40px; }
  a.createlinktext { text-decoration:none; border-bottom:1px dotted gray; }
  a.createlink { text-decoration:none; position:relative; top:-0.5em;
    font-weight:bold; font-size:smaller; border-bottom:none; }
  img { border:0px; }
  
span.anchor {
	float: left;
	font-size: 10px;
	margin-left: -10px;
	width: 10px;
    position:relative; top:-0.1em;
	text-align: center;
}
span.anchor a { text-decoration: none; }
span.anchor a:hover { text-decoration: underline; }
ol.toc { text-indent:-20px; list-style: none; }
ol.toc ol.toc { text-indent:-40px; }
div.tocfloat { font-size: smaller; margin-bottom: 10px;
    border-top: 1px dotted #555555; border-bottom: 1px dotted #555555;
    padding-top: 5px; padding-bottom: 5px; 
    width: 38%; float: right; margin-left: 10px; clear: right;
    margin-right:-13px; padding-right: 13px; padding-left: 13px;
    background-color: #eeeeee; }
div.toc { font-size: smaller; 
    padding: 4px; border: 1px dotted #cccccc;
    background: #f7f7f7;
    margin-bottom: 10px; }
  table.markup { border:2px dotted #ccf; width:90%; }
  td.markup1, td.markup2 { padding-left:10px; padding-right:10px; }
  table.vert td.markup1 { border-bottom:1px solid #ccf; }
  table.horiz td.markup1 { width:23em; border-right:1px solid #ccf; }
  table.markup caption { text-align:left; }
  div.faq p, div.faq pre { margin-left:2em; }
  div.faq p.question { margin:1em 0 0.75em 0; font-weight:bold; }
  div.faqtoc div.faq * { display:none; }
  div.faqtoc div.faq p.question 
    { display:block; font-weight:normal; margin:0.5em 0 0.5em 20px; line-height:normal; }
  div.faqtoc div.faq p.question * { display:inline; }
  .editconflict { color:green; 
  font-style:italic; margin-top:1.33em; margin-bottom:1.33em; }
 
    .frame 
      { border:1px solid #cccccc; padding:4px; background-color:#f9f9f9; }
    .lfloat { float:left; margin-right:0.5em; }
    .rfloat { float:right; margin-left:0.5em; }
a.varlink { text-decoration:none; }

--></style><script type="text/javascript">
function toggle(obj) {
    var elstyle = document.getElementById(obj).style;
    var text    = document.getElementById(obj + "tog");
    if (elstyle.display == 'none') {
        elstyle.display = 'block';
        text.innerHTML = "hide";
    } else {
        elstyle.display = 'none';
        text.innerHTML = "show";
    }
}
</script>
  <link href="commentboxplus.css" tppabs="http://www.opensips.org/pub/commentboxplus/commentboxplus.css" rel='stylesheet' type='text/css' />
  <link rel='stylesheet' href="wsplus.css" tppabs="http://www.opensips.org/pub/wsplus/wsplus.css" 
    type='text/css' />
  <!--[if IE]><style type='text/css' media='screen'>
    body { behavior:url("csshover.htc")/*tpa=http://www.opensips.org/pub/wsplus/csshover.htc*/; }
    .rollover * { visibility: visible; }
  </style><![endif]-->
  <meta name='robots' content='noindex,nofollow' />

</head>
<body>
  <div id='printhead'>
    <h3>From openSIPS</h3>
    <h1 class='pagename'><a href="javascript:if(confirm(%27http://www.opensips.org/Documentation  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Documentation%27" tppabs="http://www.opensips.org/Documentation">Documentation: Tutorials-RLS</a></h1>
  </div>
<!--PageText-->
<div id='wikitext'>
<h5>Documentation -&gt; <a class='wikilink' href="Tutorials-action=print.htm" tppabs="http://www.opensips.org/Documentation/Tutorials?action=print">Tutorials</a> -&gt; <a class='wikilink' href="Tutorials-Presence-action=print.htm" tppabs="http://www.opensips.org/Documentation/Tutorials-Presence?action=print">Presence</a> -&gt; Resource List Server</h5>
<hr />
<p  style='text-align: right;'> <strong>written by Anca Vamanu</strong>
</p>
<p class='vspace'>OpenSIPS has a Resource List Server implementation following the specification in RFC 4662 and RFC 4826. 
</p>
<div class='vspace'></div><ol><li><a href='#rls_features'>Features</a>
</li><li><a href='#description'>Description</a>
</li><li><a href='#rls_configuration'>Configuration</a>
</li><li><a href='#rls_database'>Database</a>
</li></ol><div class='vspace'></div><hr />
<p><a name='rls_features' id='rls_features'></a>
</p><h3>Features:</h3>
<ul><li>independent from presence servers ( retrieves information using Subscribe- Notify mechanism )
</li><li>works with XCAP servers for storage 
</li><li>can handle any event; 'presence' is enabled by default
</li></ul><div class='vspace'></div><hr />
<p><a name='description' id='description'></a>
</p><h3>Description</h3>
<p>As mentioned in the previous section, the RLS server is independent from the presence server. Its task is to handle Subscribe messages that have as a target a list and generate Notifies for them with the aggregated state of the entries in the list.
For example, The RLS server might get a Subscribe message from 'alice' to her buddy list named 'alice-list'.
</p>
<div class='vspace'></div><pre class='escaped'>
SUBSCRIBE sip:alice-list@opensips.org SIP/2.0.
Via: SIP/2.0/UDP 192.168.2.7:42521;rport;branch=z9hG4bKPjbcrHyV7gv7ksDabu36LZHlNnLEO-aXvc.
Max-Forwards: 70.
From: sip:alice@opensips.org;tag=3Rx6IkYlLyY88snX9vGQnhdUbsLk0Fck.
To: sip:alice-list@opensips.org.
Contact: &lt;sip:0OAcbgzCkI@192.168.2.7:42521&gt;.
Call-ID: eY-mlt.Enp1zYoMpWBBYT7rblVtStXHY.
CSeq: 9492 SUBSCRIBE.
Event: presence.
Expires: 300.
Accept: multipart/related, application/rlmi+xml, application/pidf+xml.
Allow-Events: presence.winfo, message-summary, xcap-diff, presence.
User-Agent: ag-projects/sipclient-0.3.0-pjsip-1.0-trunk.
Supported: eventlist.
Content-Length:  0.
</pre>
<p class='vspace'>Processing steps:
</p><ol><li>The first step is to check if the subscription should really be handled by the RLS server.<br /><br />The primary condition is having 'eventlist' as a value in a 'Supported' header.<br /><br />The second is that the list definition exists on the server( in fact on the XCAP server from that domain). You probably already know that the client stores the list definition on an XCAP server and the SIP RLS server has to get the list from the XCAP server. OpenSIPS can communicate with an XCAP server in two modes - that you can configure  with the 'integrated_xcap_server' parameter. First, there is the common method defined by the XCAP protocol that evolves HTTP requests for retrieving information from the XCAP server. You will have the server working in this mode if you don't set the 'integrated_xcap_server' parameter, but  you have to set the 'xcap_root' parameter with the addresses of the XCAp servers( you can set this more that once in case you use more XCAP servers). Then, you have a special communication mode, more efficient, that uses database as a intermediary: the XCAP server writes in a database table and the RLS server reads from there. The known XCAP server that can work in this mode is OpenXCAP. If you user this in your platform, you can set the 'integrated_xcap_server' parameter.<br /><br />Using the means conform to the mode of operation, the RLS server will look for the list definition. If none is found, the RLS server will assume that the SUBSCRIBE message is not for him, even though it contains 'eventlist' in Supported header, and should forward the message to the presence server (from the script file). The rls_handle_suscribe function will return a code( the default one is '10', but it can also be configured through the parameter 'to_presence_code') when it deduces that the SUBSCRIBE message might be for the presence server. As you will see in the configuration file example, in this case the message should be handled by the presence server( calling handle_subscribe method if the server is collocated with the RLS server, or forwarding it to the presence server).
<div class='vspace'></div></li><li>To continue with our example, let's consider that the list has the following description:<br /><pre class='escaped'>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
   &lt;rls-services xmlns="urn:ietf:params:xml:ns:rls-services"
      xmlns:rl="urn:ietf:params:xml:ns:resource-lists"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;service uri="sip:alice-list@opensips.org"&gt;
	   &lt;list name="alice-list"&gt;
	      &lt;rl:entry uri="bob@opensips.org"/&gt;
	      &lt;rl:entry uri="claire@opensips.org"/&gt;
           &lt;/list&gt;
           &lt;packages&gt;
              &lt;package&gt;presence&lt;/package&gt;
           &lt;/packages&gt;
        &lt;/service&gt;
   &lt;/rls-services&gt; 
</pre><br /><br />The second step is to send an immediate Notify with the presence information of the entries in the list. The RLS will check to see if it has any information stored and will send that in a Notify with a multi-part body. For the first SUBSCRIBE message, the server will not have any information stored and The Notify will contain no presence state. <br /><br />
</li><li>The RLS server has to get the presence information from the presence servers. The next step is to send SUBSCRIBE messages on behalf of alice for the presence state of the entries in the list: bob and claire. The reason for which the RLS server sends for entry in the list a Subscribe message on behalf of the requester is related to the privacy authorization rules. Let's consider that there is another subscription from 'tom' to a list that also contains 'bob' as an entry. The RLS server might already have stored the presence state of bob due to the subscription that it already sent on behalf of alice, but it can not use this. The reason for this is that the RLS server does not know if tom is allowed to see the presence state of bob, or if this should be transformed according to some rules that bob has defined. Therefore, the RLS server has to send a SUBSCRIBE for each entry in every list and use only those responses when constructing the aggregated Notify.<br /><br />For this case, the OpenSIPS RLS server will send two SUBSCRIBE messages: to bob and claire, to the presence server in the local domain. If you set the 'presence_sever' parameter, the address in there will be used as an outbound proxy for the Subscribe messages. It will the receive Notifies from the presence server. It is easy to detect this in the configuration file, since they have as a target the RLS server( have the RLS's server address in R-URI). This should be handled by the rls module by calling rls_handle_notify function.
<div class='vspace'></div></li><li>Constructing Notify messages when receiving Notifies from presence servers with status updates. <br />Due to a performance considerations, the RLS server will not send immediate RL Notifies when receiving a status update. It will wait a configurable amount of time( through the module parameter 'waitn_time') hoping to receive some more updates in the mean time and send more information in one Notify.
</li></ol><div class='vspace'></div><hr />
<p><a name='rls_configuration' id='rls_configuration'></a>
</p><h3>Configuration</h3>
<p>The server is implemented in <strong>rls</strong> module. To understand the parameters required by this module, read the <a class='urllink' href="javascript:if(confirm(%27http://www.opensips.org/html/docs/modules/1.11.x/rls.html  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/html/docs/modules/1.11.x/rls.html%27" tppabs="http://www.opensips.org/html/docs/modules/1.11.x/rls.html" rel='nofollow'>modules readme here</a>.
</p>
<p class='vspace'>See a <a class='wikilink' href="Tutorials-RLSConfig-action=print.htm" tppabs="http://www.opensips.org/Documentation/Tutorials-RLSConfig?action=print">configuration file example</a>.
</p>
<div class='vspace'></div><hr />
<p><a name='rls_database' id='rls_database'></a>
</p><h3>Database</h3>
<p>It uses 2 tables in database: <strong>rls_presentity</strong> and <strong>rls_watchers</strong>  
</p>
<p class='vspace'><strong>rls_presentity</strong>
</p>
<div class='vspace'></div>
<table border='1' ><tr ><th  align='center'>Field</th><th  align='center'>Type</th><th  align='center'>Null</th><th  align='center'>Key</th><th  align='center'>Default</th><th  align='center'>Extra</th></tr>
<tr ><td  align='center'>id</td><td  align='center'>int(10) unsigned</td><td  align='center'>NO</td><td  align='center'>PRI</td><td  align='center'>NULL</td><td  align='center'>auto_increment</td></tr>
<tr ><td  align='center'>rlsubs_did</td><td  align='center'>varchar(512)</td><td  align='center'>NO</td><td  align='center'>MUL</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>resource_uri</td><td  align='center'>varchar(128)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>content_type</td><td  align='center'>varchar(64)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>presence_state</td><td  align='center'>blob</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>expires</td><td  align='center'>int(11)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>updated</td><td  align='center'>int(11)</td><td  align='center'>NO</td><td  align='center'>MUL</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>auth_state</td><td  align='center'>int(11)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>reason</td><td  align='center'>varchar(64)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
</table>
<div class='vspace'></div><pre class='escaped'>
CREATE TABLE `rls_presentity` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `rlsubs_did` varchar(512) NOT NULL,
  `resource_uri` varchar(128) NOT NULL,
  `content_type` varchar(64) NOT NULL,
  `presence_state` blob NOT NULL,
  `expires` int(11) NOT NULL,
  `updated` int(11) NOT NULL,
  `auth_state` int(11) NOT NULL,
  `reason` varchar(64) NOT NULL,
  PRIMARY KEY  (`id`),
  UNIQUE KEY `rls_presentity_idx` (`rlsubs_did`,`resource_uri`),
  KEY `updated_idx` (`updated`)
) ENGINE=MyISAM;
</pre>
<p class='vspace'><strong>rls_watchers</strong>
</p>
<div class='vspace'></div><table border='1' ><tr ><th  align='center'>Field</th><th  align='center'>Type</th><th  align='center'>Null</th><th  align='center'>Key</th><th  align='center'>Default</th><th  align='center'>Extra</th></tr>
<tr ><td  align='center'>id</td><td  align='center'>int(10) unsigned</td><td  align='center'>NO</td><td  align='center'>PRI</td><td  align='center'>NULL</td><td  align='center'>auto_increment</td></tr>
<tr ><td  align='center'>presentity_uri</td><td  align='center'>varchar(128)</td><td  align='center'>NO</td><td  align='center'>MUL</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>to_user</td><td  align='center'>varchar(64)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>to_domain</td><td  align='center'>varchar(64)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>watcher_username</td><td  align='center'>varchar(64)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>watcher_domain</td><td  align='center'>varchar(64)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>event</td><td  align='center'>varchar(64)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>presence</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>event_id</td><td  align='center'>varchar(64)</td><td  align='center'>YES</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>to_tag</td><td  align='center'>varchar(64)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>from_tag</td><td  align='center'>varchar(64)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>callid</td><td  align='center'>varchar(64)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>local_cseq</td><td  align='center'>int(11)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>remote_cseq</td><td  align='center'>int(11)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>contact</td><td  align='center'>varchar(64)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>record_route</td><td  align='center'>text</td><td  align='center'>YES</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>expires</td><td  align='center'>int(11)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>status</td><td  align='center'>int(11)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>2</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>reason</td><td  align='center'>varchar(64)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>version</td><td  align='center'>int(11)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>0</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>socket_info</td><td  align='center'>varchar(64)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
<tr ><td  align='center'>local_contact</td><td  align='center'>varchar(128)</td><td  align='center'>NO</td><td >&nbsp;</td><td  align='center'>NULL</td><td >&nbsp;</td></tr>
</table>
<div class='vspace'></div><pre class='escaped'>
CREATE TABLE `rls_watchers` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `presentity_uri` varchar(128) NOT NULL,
  `to_user` varchar(64) NOT NULL,
  `to_domain` varchar(64) NOT NULL,
  `watcher_username` varchar(64) NOT NULL,
  `watcher_domain` varchar(64) NOT NULL,
  `event` varchar(64) NOT NULL default 'presence',
  `event_id` varchar(64) default NULL,
  `to_tag` varchar(64) NOT NULL,
  `from_tag` varchar(64) NOT NULL,
  `callid` varchar(64) NOT NULL,
  `local_cseq` int(11) NOT NULL,
  `remote_cseq` int(11) NOT NULL,
  `contact` varchar(64) NOT NULL,
  `record_route` text,
  `expires` int(11) NOT NULL,
  `status` int(11) NOT NULL default '2',
  `reason` varchar(64) NOT NULL,
  `version` int(11) NOT NULL default '0',
  `socket_info` varchar(64) NOT NULL,
  `local_contact` varchar(128) NOT NULL,
  PRIMARY KEY  (`id`),
  UNIQUE KEY `rls_watcher_idx` (`presentity_uri`,`callid`,`to_tag`,`from_tag`)
) ENGINE=MyISAM ;
</pre>
<div class='vspace'></div>
    <div id='message'><form name='cbox' class='inputform' action="http://www.opensips.org/Documentation/Tutorials-RLS" method='post' onsubmit='return checkform(this);'>
    <input type='hidden' name='n' value='Documentation.Tutorials-RLS' />
    <input type='hidden' name='action' value='comment' />
    <input type='hidden' name='order' value='chrono' /><input type='hidden' name='accesscode' value='206' />
    <input type='hidden' name='csum' value='Comment added' />
    <table width='90%'><tr>
    <th class='prompt' align='right' valign='top'>Add Comment&nbsp;</th>
    <td><textarea class='inputtext commenttext' name='text' id='text' rows=6 cols=40></textarea>
    </td></tr><tr><th class='prompt' align='right' valign='top'>Sign as Author&nbsp;</th>
    <td><input class='inputbox commentauthorbox' type='text' name='author' value='' size='32' /></td></tr>
    <tr><th class='prompt' align='right' valign='top'>Enter code <em class='access'>206</em></th>
    <td><input type='text' size='4' maxlength='3' name='access' value='' class='inputbox' /> <input class='inputbutton commentbutton' type='submit' name='post' value=' Post ' />
    <input class='inputbutton commentbutton' type='reset' value='Reset' /></td></tr></table><br /></form></div>
 <script type='text/javascript' language='JavaScript1.2'>
  function checkform ( form ) {
   if (form.text && form.text.value == "") { window.alert( 'Please enter a comment to post' ); form.text.focus(); return false; }
   if (form.author && form.author.value == "") { window.alert( 'Please enter your name as author' ); form.author.focus(); return false; }
   if (form.access && form.access.value == "") { window.alert( 'Please enter the code number' ); form.access.focus(); return false; }return true ;
  }
  </script>
   
</div>

  <div id='printfoot'>
    <div class='from'>Retrieved from http://www.opensips.org/Documentation/Tutorials-RLS</div>
    <div class='lastmod'>Page last modified on July 02, 2014, at 02:13 PM</div></div>
<!--HTMLFooter-->
</body>
</html>
