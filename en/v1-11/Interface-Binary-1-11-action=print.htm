<!DOCTYPE html 
    PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html><head>
  <title>openSIPS | Documentation / Binary Internal Interface - 1.11 </title>
  <link rel='stylesheet' href="print.css" tppabs="http://www.opensips.org/pub/skins/print/print.css" type='text/css' />
  <!--HTMLHeader--><style type='text/css'><!--
  ul, ol, pre, dl, p { margin-top:0px; margin-bottom:0px; }
  code.escaped { white-space: nowrap; }
  .indent { margin-left:40px; }
  .outdent { margin-left:40px; text-indent:-40px; }
  a.createlinktext { text-decoration:none; border-bottom:1px dotted gray; }
  a.createlink { text-decoration:none; position:relative; top:-0.5em;
    font-weight:bold; font-size:smaller; border-bottom:none; }
  img { border:0px; }
  
span.anchor {
	float: left;
	font-size: 10px;
	margin-left: -10px;
	width: 10px;
    position:relative; top:-0.1em;
	text-align: center;
}
span.anchor a { text-decoration: none; }
span.anchor a:hover { text-decoration: underline; }
ol.toc { text-indent:-20px; list-style: none; }
ol.toc ol.toc { text-indent:-40px; }
div.tocfloat { font-size: smaller; margin-bottom: 10px;
    border-top: 1px dotted #555555; border-bottom: 1px dotted #555555;
    padding-top: 5px; padding-bottom: 5px; 
    width: 38%; float: right; margin-left: 10px; clear: right;
    margin-right:-13px; padding-right: 13px; padding-left: 13px;
    background-color: #eeeeee; }
div.toc { font-size: smaller; 
    padding: 4px; border: 1px dotted #cccccc;
    background: #f7f7f7;
    margin-bottom: 10px; }
  table.markup { border:2px dotted #ccf; width:90%; }
  td.markup1, td.markup2 { padding-left:10px; padding-right:10px; }
  table.vert td.markup1 { border-bottom:1px solid #ccf; }
  table.horiz td.markup1 { width:23em; border-right:1px solid #ccf; }
  table.markup caption { text-align:left; }
  div.faq p, div.faq pre { margin-left:2em; }
  div.faq p.question { margin:1em 0 0.75em 0; font-weight:bold; }
  div.faqtoc div.faq * { display:none; }
  div.faqtoc div.faq p.question 
    { display:block; font-weight:normal; margin:0.5em 0 0.5em 20px; line-height:normal; }
  div.faqtoc div.faq p.question * { display:inline; }
  .editconflict { color:green; 
  font-style:italic; margin-top:1.33em; margin-bottom:1.33em; }
 
    .frame 
      { border:1px solid #cccccc; padding:4px; background-color:#f9f9f9; }
    .lfloat { float:left; margin-right:0.5em; }
    .rfloat { float:right; margin-left:0.5em; }
a.varlink { text-decoration:none; }

--></style><script type="text/javascript">
function toggle(obj) {
    var elstyle = document.getElementById(obj).style;
    var text    = document.getElementById(obj + "tog");
    if (elstyle.display == 'none') {
        elstyle.display = 'block';
        text.innerHTML = "hide";
    } else {
        elstyle.display = 'none';
        text.innerHTML = "show";
    }
}
</script>
  <link href="commentboxplus.css" tppabs="http://www.opensips.org/pub/commentboxplus/commentboxplus.css" rel='stylesheet' type='text/css' />
  <link rel='stylesheet' href="wsplus.css" tppabs="http://www.opensips.org/pub/wsplus/wsplus.css" 
    type='text/css' />
  <!--[if IE]><style type='text/css' media='screen'>
    body { behavior:url("csshover.htc")/*tpa=http://www.opensips.org/pub/wsplus/csshover.htc*/; }
    .rollover * { visibility: visible; }
  </style><![endif]-->
  <meta name='robots' content='noindex,nofollow' />

</head>
<body>
  <div id='printhead'>
    <h3>From openSIPS</h3>
    <h1 class='pagename'><a href="javascript:if(confirm(%27http://www.opensips.org/Documentation  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/Documentation%27" tppabs="http://www.opensips.org/Documentation">Documentation: Binary Internal Interface - 1.11 </a></h1>
  </div>
<!--PageText-->
<div id='wikitext'>
<h5>Documentation -&gt; <a class='wikilink' href="Manuals-action=print.htm" tppabs="http://www.opensips.org/Documentation/Manuals?action=print">Manuals</a> -&gt; <a class='wikilink' href="Manual-1-11-action=print.htm" tppabs="http://www.opensips.org/Documentation/Manual-1-11?action=print">Manual 1.11</a> -&gt; Binary Internal Interface</h5>
<hr />
<p><span style='font-size:83%'> Pages for other versions: <a class='wikilink' href="Interface-Binary-2-2-action=print.htm" tppabs="http://www.opensips.org/Documentation/Interface-Binary-2-2?action=print">devel</a> <a class='wikilink' href="Interface-Binary-2-1-action=print.htm" tppabs="http://www.opensips.org/Documentation/Interface-Binary-2-1?action=print">2.1</a> 1.11  Older versions: <a class='wikilink' href="Interface-Binary-1-10-action=print.htm" tppabs="http://www.opensips.org/Documentation/Interface-Binary-1-10?action=print">1.10</a> </span>
</p>
<p class='vspace'><br />
</p><table width='100%'><tr ><td  align='center'><span  style='color: #185662;'><span style='font-size:120%'><strong>Binary Internal Interface v1.11</strong></span></span></td></tr>
</table>
<div class='vspace'></div><table width='100%'><tr ><td  align='left'><a class='wikilink' href="Interface-CoreStatistics-1-11-action=print.htm" tppabs="http://www.opensips.org/Documentation/Interface-CoreStatistics-1-11?action=print">Prev</a></td></tr>
</table><hr />
<p class='vspace'>The <strong>Binary Internal Interface</strong> is an OpenSIPS core interface which offers an efficient way for communication between individual OpenSIPS instances. This is especially useful in scenarios where realtime data (such as dialogs) cannot be simply stored in a database anymore, because failover would require entire minutes to complete. This issue can be solved with the new internal binary interface by replicating all the events related to the runtime data (creation / updating / deletion) to a backup OpenSIPS instance.
</p><hr />
<h4>Configuring the Binary Internal Interface listeners</h4>
<p>In order to listen for incoming Binary Packets, an interface must be specified using the <em>bin_listen</em> global script parameter. The number of listener processes can be tuned with the optional <em>bin_children</em> (default: 1)
</p>
<div class='vspace'></div><pre class='escaped'>
   bin_listen = 10.0.0.150:5062
   bin_children = 2
</pre>
<p class='vspace'>Currently, <strong>dialog</strong> and <strong>usrloc</strong> are the first modules to make use of this interface, and they can now replicate all run-time events (creation/updating/deletion of dialogs/contacts) to one or more OpenSIPS instances. Configuration can be done as follows:
</p>
<div class='vspace'></div><pre class='escaped'>
   modparam("dialog", "accept_replicated_dialogs", 1)
   modparam("dialog", "replicate_dialogs_to", "78.46.64.50:5062")
</pre>
<p class='vspace'>More details can be found in the <a class='urllink' href="javascript:if(confirm(%27http://www.opensips.org/html/docs/modules/1.11.x/dialog.html  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/html/docs/modules/1.11.x/dialog.html#id249108%27" tppabs="http://www.opensips.org/html/docs/modules/1.11.x/dialog.html#id249108" rel='nofollow'>dialog</a> and <a class='urllink' href="javascript:if(confirm(%27http://www.opensips.org/html/docs/modules/1.11.x/usrloc.html  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.opensips.org/html/docs/modules/1.11.x/usrloc.html#usrloc-replication%27" tppabs="http://www.opensips.org/html/docs/modules/1.11.x/usrloc.html#usrloc-replication" rel='nofollow'>usrloc</a> documentation pages.
</p>
<div class='vspace'></div><hr />
<h4>C Interface Overview (for module developers)</h4>
<p>The interface allows the module writer to build and send compact <strong>Binary Packets</strong> in an intuitive way.
</p>
<p class='vspace'>In order to <strong>send packets</strong>, the interface provides the following primitives:
</p><ul><li><em>int bin_init(str *mod_name, int packet_type)</em> - begins the contruction of a new Binary Packet
</li><li><em>int bin_push_str(const str *info)</em> - add a string to the Binary Packet that is currently being built
</li><li><em>int bin_push_int(int info)</em> - add an integer to the Binary Packet that is currently being built
</li><li><em>int bin_send(union sockaddr_union *dest)</em> - sends the Binary Packet to a given destination over UDP
</li></ul><p class='vspace'><br />
In order to <strong>receive packets</strong>, a module must first register a callback function to the interface:
</p><ul><li>int bin_register_cb(char *mod_name, void (*)(int packet_type))
</li></ul><p class='vspace'><br />
Each time this callback is triggered, the information can be retrieved in the same order it was written using:
</p><ul><li>int bin_pop_str(str *info) - retrieve a string from a received Binary Packet
</li><li>int bin_pop_int(void *info) - retrive an integer from a received Binary Packet
</li></ul>
</div>

  <div id='printfoot'>
    <div class='from'>Retrieved from http://www.opensips.org/Documentation/Interface-Binary-1-11</div>
    <div class='lastmod'>Page last modified on March 20, 2014, at 08:01 PM</div></div>
<!--HTMLFooter-->
</body>
</html>
